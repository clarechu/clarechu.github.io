{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.4.1.min.js","path":"js/jquery-3.4.1.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff2","path":"css/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/keep/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/keep/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/images/avatar.svg","path":"images/avatar.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/bg.svg","path":"images/bg.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/loading.svg","path":"images/loading.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.eot","path":"webfonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.svg","path":"webfonts/fa-brands-400.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.ttf","path":"webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff","path":"webfonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff2","path":"webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.eot","path":"webfonts/fa-regular-400.eot","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.svg","path":"webfonts/fa-regular-400.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.ttf","path":"webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff","path":"webfonts/fa-regular-400.woff","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff2","path":"webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.eot","path":"webfonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.svg","path":"webfonts/fa-solid-900.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.ttf","path":"webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff","path":"webfonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff2","path":"webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/js/back2top.js","path":"js/back2top.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/code-copy.js","path":"js/code-copy.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/dark-light-toggle.js","path":"js/dark-light-toggle.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/header-shrink.js","path":"js/header-shrink.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/lazyload.js","path":"js/lazyload.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/left-side-toggle.js","path":"js/left-side-toggle.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/toc.js","path":"js/toc.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/animated.styl","path":"css/common/animated.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/basic.styl","path":"css/common/basic.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/keep-theme.styl","path":"css/common/keep-theme.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/markdown.styl","path":"css/common/markdown.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/variables.styl","path":"css/common/variables.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/archive-content.styl","path":"css/layout/archive-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/article-content.styl","path":"css/layout/article-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/category-content.styl","path":"css/layout/category-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/category-list.styl","path":"css/layout/category-list.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/home-content.styl","path":"css/layout/home-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/page.styl","path":"css/layout/page.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/tag-content.styl","path":"css/layout/tag-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/js/libs/anime.min.js","path":"js/libs/anime.min.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/libs/pjax.min.js","path":"js/libs/pjax.min.js","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/codeblock/code-theme.styl","path":"css/common/codeblock/code-theme.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/codeblock/copy-code.styl","path":"css/common/codeblock/copy-code.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/codeblock/highlight.styl","path":"css/common/codeblock/highlight.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/images/bp.jpeg","path":"images/bp.jpeg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/bp.jpg","path":"images/bp.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"d0d61d493fe0f0cb3dfdd2dabf10836e66af89a5","modified":1615273349549},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1615273349550},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"d2772ece6d4422ccdaa0359c3e07588834044052","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"04c3dea4ce4d75ea098e4988ab69439c4b4f027d","modified":1615273256534},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"414914ebb159fac1922b056b905e570ac7521925","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"dfd555c00e85ffc4207c88968d12b219c1f086ec","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"f215d92a882247a7cc5ea80b241bedfcec0ea6ca","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"c1acd247e14588cdf101a69460cb8319c18cd078","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"581b0cbefdaa5f894922133989dd2d3bf71ded79","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"9c451e5efd72c5bb8b56e8c2b94be731e99db05b","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"80759482d07063c091e940f964a1cf6693d3d406","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":499162500000},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1615273592012},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1615273592012},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1615273592012},{"_id":"themes/next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1615273592016},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1615273592016},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1615273592017},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1615273592017},{"_id":"themes/next/_config.yml","hash":"ccd41ed5fc3027f81834c30fe4b67c0dac742dea","modified":1615273592017},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1615273592018},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1615273592017},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1615273592012},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1615273592057},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1615273592012},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1615273592014},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1615273592014},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1615273592023},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1615273592015},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1615273592015},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1615273592015},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1615273592015},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1615273592016},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1615273592015},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1615273592016},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1615273592019},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1615273592018},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1615273592018},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1615273592019},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1615273592019},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1615273592019},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1615273592020},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1615273592019},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1615273592020},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1615273592023},{"_id":"themes/next/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1615273592024},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1615273592023},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1615273592024},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1615273592024},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1615273592025},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1615273592025},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1615273592025},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1615273592024},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1615273592025},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1615273592024},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1615273592025},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1615273592026},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1615273592026},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1615273592025},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1615273592026},{"_id":"themes/next/languages/tr.yml","hash":"fe793f4c2608e3f85f0b872fd0ac1fb93e6155e2","modified":1615273592026},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1615273592027},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1615273592027},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1615273592027},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1615273592027},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1615273592027},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1615273592054},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1615273592056},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1615273592057},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1615273592057},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1615273592065},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1615273592057},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1615273592013},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1615273592028},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1615273592054},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1615273592014},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1615273592020},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1615273592020},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1615273592021},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1615273592021},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1615273592013},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1615273592021},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1615273592022},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1615273592021},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1615273592014},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1615273592020},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1615273592023},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1615273592022},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1615273592023},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1615273592022},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1615273592029},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1615273592029},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4369b313cbbeae742cb35f86d23d99d4285f7359","modified":1615273592030},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1615273592032},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1615273592032},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1615273592023},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1615273592028},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1615273592029},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1615273592035},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1615273592036},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1615273592036},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1615273592038},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1615273592040},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1615273592036},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1615273592044},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1615273592058},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1615273592044},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1615273592063},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1615273592064},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1615273592064},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1615273592064},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1615273592038},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1615273592065},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1615273592065},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1615273592065},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1615273592066},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1615273592066},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1615273592066},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1615273592066},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1615273592066},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1615273592067},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1615273592067},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1615273592067},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1615273592067},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1615273592067},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1615273592043},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1615273592063},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1615273592064},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1615273592068},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1615273592142},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1615273592180},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1615273592164},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1615273592180},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1615273592181},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1615273592181},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1615273592181},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1615273592165},{"_id":"themes/next/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1615273592183},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1615273592165},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1615273592166},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1615273592166},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1615273592165},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1615273592167},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1615273592166},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1615273592177},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1615273592167},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1615273592167},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1615273592178},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1615273592178},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1615273592184},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1615273592030},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1615273592030},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1615273592177},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1615273592031},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1615273592031},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1615273592030},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1615273592031},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1615273592031},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1615273592034},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1615273592032},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1615273592035},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1615273592033},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1615273592032},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1615273592033},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1615273592034},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1615273592033},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1615273592035},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1615273592033},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1615273592036},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1615273592033},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1615273592037},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1615273592037},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1615273592037},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1615273592039},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1615273592040},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1615273592037},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1615273592041},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1615273592039},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1615273592042},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1615273592040},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1615273592042},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1615273592041},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1615273592043},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1615273592042},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1615273592041},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1615273592044},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1615273592044},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1615273592045},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1615273592042},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1615273592046},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1615273592047},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1615273592044},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1615273592046},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1615273592046},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1615273592049},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1615273592049},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1615273592058},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1615273592054},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1615273592060},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1615273592061},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1615273592061},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1615273592061},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1615273592062},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1615273592062},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1615273592062},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1615273592062},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1615273592063},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1615273592063},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1615273592048},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1615273592163},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1615273592162},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1615273592164},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1615273592182},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1615273592049},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1615273592183},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1615273592163},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1615273592164},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1615273592070},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1615273592070},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1615273592078},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1615273592071},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1615273592086},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1615273592086},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1615273592143},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1615273592189},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1615273592188},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1615273592133},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1615273592133},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1615273592134},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1615273592138},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1615273592138},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1615273592144},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1615273592137},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1615273592137},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1615273592145},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1615273592145},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1615273592142},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1615273592156},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1615273592159},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1615273592160},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1615273592144},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1615273592160},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1615273592161},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1615273592146},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1615273592162},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1615273592160},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1615273592160},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1615273592162},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1615273592161},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1615273592185},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1615273592162},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1615273592156},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1615273592079},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1615273592187},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1615273592079},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1615273592081},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1615273592082},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1615273592079},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1615273592082},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1615273592084},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1615273592084},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1615273592085},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1615273592085},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1615273592083},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1615273592075},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1615273592085},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1615273592075},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1615273592076},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1615273592085},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1615273592075},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1615273592076},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1615273592076},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1615273592076},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1615273592077},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1615273592078},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1615273592078},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1615273592077},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1615273592077},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1615273592087},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1615273592077},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1615273592088},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1615273592090},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1615273592091},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1615273592131},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1615273592099},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1615273592098},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1615273592104},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1615273592073},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1615273592073},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1615273592074},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1615273592131},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1615273592074},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1615273592075},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1615273592132},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1615273592134},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1615273592135},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1615273592138},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1615273592139},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1615273592134},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1615273592140},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1615273592140},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1615273592141},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1615273592137},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1615273592141},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1615273592139},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1615273592186},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1615273592187},{"_id":"themes/lemon-lime/_config.yml","hash":"26f0bcf67f2c46433671133daae04e6e487b98c2","modified":1615274023057},{"_id":"themes/lemon-lime/LICENSE","hash":"d005dac625c1bdc5c1fcc0d2e345d33a7710c5dc","modified":1615274023056},{"_id":"themes/lemon-lime/README.md","hash":"725ce737e14bd5de4cac54d90bbd14689c103a21","modified":1615274023057},{"_id":"themes/lemon-lime/languages/zh-Hant.yml","hash":"3cae576387356263461217fe25fd9c5ef723c3c6","modified":1615274023057},{"_id":"themes/lemon-lime/layout/archive.pug","hash":"552584a2a9ad73ca0cb019554b37022486afe001","modified":1615274023058},{"_id":"themes/lemon-lime/languages/en.yml","hash":"df9e059107baef76396e6b01c971bc922227985f","modified":1615274023057},{"_id":"themes/lemon-lime/layout/index.pug","hash":"546a4595edd56124b55b4365ba6b0f403bdf6545","modified":1615274023060},{"_id":"themes/lemon-lime/scripts/config-helper.js","hash":"e8c6c78dd31f1541cb7046c188fdd6422e45099e","modified":1615274023061},{"_id":"themes/lemon-lime/source/CNAME","hash":"004f867e327f98313b066dfca59497b644058832","modified":1615274023061},{"_id":"themes/lemon-lime/languages/zh-Hans.yml","hash":"c58a1cfcb6d799c542cea1485b8a51e7470d7b2d","modified":1615274023057},{"_id":"themes/lemon-lime/layout/analysis/busuanzi.pug","hash":"25d3a56a4e871b5e3aa6d4b38dd777d64c2e5d43","modified":1615274023058},{"_id":"themes/lemon-lime/layout/page.pug","hash":"819a45c262d49b385d102dc6987bb0dc111bd553","modified":1615274023060},{"_id":"themes/lemon-lime/layout/includes/after-footer.pug","hash":"3e47badb67c3959e7b9ef487f04e2ccc4d89b89f","modified":1615274023058},{"_id":"themes/lemon-lime/layout/includes/article-excerpt.pug","hash":"3add94fe85f8b11545f95026751727d2df01d61b","modified":1615274023058},{"_id":"themes/lemon-lime/layout/includes/footer.pug","hash":"22c3da2a97a09e9a539f2319b6b5d48616bbdd23","modified":1615274023059},{"_id":"themes/lemon-lime/layout/includes/from-config.pug","hash":"65f3d2f154cfa3ff41f9dadbb654efa230894890","modified":1615274023059},{"_id":"themes/lemon-lime/layout/post.pug","hash":"35108153959364f7f0c181ae7d76d916149efdc0","modified":1615274023061},{"_id":"themes/lemon-lime/layout/analysis/countWordsAndTime.pug","hash":"96a46c42a8aa44b73a833000d75a4e349314d0df","modified":1615274023058},{"_id":"themes/lemon-lime/layout/includes/layout.pug","hash":"9ac9d22fa6f20faa882c3a92bb4fc99251ad4b9a","modified":1615274023059},{"_id":"themes/lemon-lime/layout/includes/head.pug","hash":"06e47f5a390fb41f2e6d8f18a9cfd5b5a40b1076","modified":1615274023059},{"_id":"themes/lemon-lime/layout/includes/pagination.pug","hash":"8a605a9f61b0ae21911314a22221db969319b868","modified":1615274023060},{"_id":"themes/lemon-lime/layout/includes/header.pug","hash":"dff9b282ba6df85fc45ecc9e1189f1c482e9c16b","modified":1615274023059},{"_id":"themes/lemon-lime/layout/includes/post-archive.pug","hash":"6d5cae936a84e7ed22fdc86b7ab352641c07282e","modified":1615274023060},{"_id":"themes/lemon-lime/layout/includes/nav.pug","hash":"2c274a79595828dbbdfe9e23e046e2bc677adafd","modified":1615274023059},{"_id":"themes/lemon-lime/layout/search/algolia.pug","hash":"121a2e401ff2ef56dcc221a1f068e27c80b683ae","modified":1615274023061},{"_id":"themes/lemon-lime/layout/includes/post-tags.pug","hash":"b59f51b4d8d31ade6b21a7f14e1e71089f3e87f1","modified":1615274023060},{"_id":"themes/lemon-lime/layout/includes/post-categories.pug","hash":"8f923ed319744903279b0488313fd56beed9c99b","modified":1615274023060},{"_id":"themes/lemon-lime/source/compass/config.rb","hash":"c97b6b15be8ca492e3fc774e32726bd2c7532b77","modified":1615274023136},{"_id":"themes/lemon-lime/source/compass/imgs/arrow.png","hash":"a5011ed6f917164aa3daa6820bcd35e231306954","modified":1615274023166},{"_id":"themes/lemon-lime/source/compass/imgs/aLaptopWithDrink.png","hash":"6809bb6f568dd660789b2e957bdeac73ec787caf","modified":1615274023166},{"_id":"themes/lemon-lime/source/compass/imgs/fHangingClothes.png","hash":"949903dc566876ee76523d6ab631ede39de5fe1d","modified":1615274023167},{"_id":"themes/lemon-lime/source/compass/sass/ie.scss","hash":"55d03cbe8dc4482082815585822d80503557fdcb","modified":1615274023170},{"_id":"themes/lemon-lime/source/compass/imgs/logo.png","hash":"1d6aa38d9ad1600f0d4be661cd8a51f0f7540492","modified":1615274023168},{"_id":"themes/lemon-lime/source/compass/js/blog.js","hash":"54694f6a00f097d04a97f475f6a8fc993b35e068","modified":1615274023169},{"_id":"themes/lemon-lime/source/compass/sass/screen.scss","hash":"c8f3d0218ceae49665882006867da83672aa398b","modified":1615274023174},{"_id":"themes/lemon-lime/source/compass/stylesheets/print.css","hash":"5d4514803362274f0bd875bc5a9ba81d6e49dbb0","modified":1615274023175},{"_id":"themes/lemon-lime/source/compass/sass/print.scss","hash":"5d4514803362274f0bd875bc5a9ba81d6e49dbb0","modified":1615274023174},{"_id":"themes/lemon-lime/source/compass/stylesheets/ie.css","hash":"55d03cbe8dc4482082815585822d80503557fdcb","modified":1615274023175},{"_id":"themes/lemon-lime/source/compass/stylesheets/screen.css","hash":"a51352a9d0fb6960632e39b296fe904680959958","modified":1615274023176},{"_id":"themes/lemon-lime/source/compass/.sass-cache/045790a1213d1111369e7072eaf1d1303b27bdda/_base.scssc","hash":"4cce7629bf8894c402966374e607247ee0a0d6aa","modified":1615274023062},{"_id":"themes/lemon-lime/source/compass/.sass-cache/045790a1213d1111369e7072eaf1d1303b27bdda/_embeds.scssc","hash":"450cee1130de48032160372a8ef546a0b2a52ebb","modified":1615274023062},{"_id":"themes/lemon-lime/source/compass/stylesheets/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1615274023175},{"_id":"themes/lemon-lime/source/compass/.sass-cache/045790a1213d1111369e7072eaf1d1303b27bdda/_forms.scssc","hash":"92413f84901840492c27bda53ca292ce22a42a04","modified":1615274023062},{"_id":"themes/lemon-lime/source/compass/.sass-cache/045790a1213d1111369e7072eaf1d1303b27bdda/_groups.scssc","hash":"b1bc828133e5f861692ada9935c0bb85e931cd2a","modified":1615274023063},{"_id":"themes/lemon-lime/source/compass/.sass-cache/045790a1213d1111369e7072eaf1d1303b27bdda/_html5.scssc","hash":"6a3569b9f6217094b13106893617cb5c192b561b","modified":1615274023064},{"_id":"themes/lemon-lime/source/compass/.sass-cache/045790a1213d1111369e7072eaf1d1303b27bdda/_links.scssc","hash":"50a14fb179c6b1035c48fcefa16dbad502de7684","modified":1615274023064},{"_id":"themes/lemon-lime/source/compass/.sass-cache/0fe24dfc41fffed2d6891c797fcd7dee100afa65/_clearfix.scssc","hash":"7396430df01b64ef8768c512f264cff3dae96d45","modified":1615274023065},{"_id":"themes/lemon-lime/source/compass/.sass-cache/045790a1213d1111369e7072eaf1d1303b27bdda/_tables.scssc","hash":"39dc8a860e4a9999642b7e1808811b0b3665cde2","modified":1615274023064},{"_id":"themes/lemon-lime/source/compass/.sass-cache/045790a1213d1111369e7072eaf1d1303b27bdda/_typography.scssc","hash":"35765eecad7f29a50e374849d22adce5412c40b2","modified":1615274023065},{"_id":"themes/lemon-lime/source/compass/.sass-cache/0fe24dfc41fffed2d6891c797fcd7dee100afa65/_float.scssc","hash":"706ed3c71d878d0a8fe799d1ab9b2ec8c3553a4f","modified":1615274023065},{"_id":"themes/lemon-lime/source/compass/.sass-cache/0fe24dfc41fffed2d6891c797fcd7dee100afa65/_min.scssc","hash":"d72c87e3480f49d46209939db116240f87d93d68","modified":1615274023065},{"_id":"themes/lemon-lime/source/compass/.sass-cache/1429ba7c5a6833a9d3e3478b99f475e369a9afe3/ie.scssc","hash":"02f771d7983f180f18f06c1dfc70a38db88d53e9","modified":1615274023066},{"_id":"themes/lemon-lime/source/compass/.sass-cache/0fe24dfc41fffed2d6891c797fcd7dee100afa65/_hacks.scssc","hash":"a5b7fd5d9386c98d7712606ae0fccc982634eca3","modified":1615274023065},{"_id":"themes/lemon-lime/source/compass/.sass-cache/0fe24dfc41fffed2d6891c797fcd7dee100afa65/_tag-cloud.scssc","hash":"17cf7a6a6db3be8bd41bd61cf8931496328bc60b","modified":1615274023066},{"_id":"themes/lemon-lime/source/compass/.sass-cache/1429ba7c5a6833a9d3e3478b99f475e369a9afe3/print.scssc","hash":"e03b1226ccc260d052efba83173b4863876c9e80","modified":1615274023066},{"_id":"themes/lemon-lime/source/compass/.sass-cache/0fe24dfc41fffed2d6891c797fcd7dee100afa65/_reset.scssc","hash":"51cc292dc39e22e11b4bea13eb582046094714eb","modified":1615274023066},{"_id":"themes/lemon-lime/source/compass/.sass-cache/17d03613c125918cd0766f51918feb21dc3c074a/_animation.scssc","hash":"a2db255ee10f6bed347dd5e491ca5458cf6eb633","modified":1615274023067},{"_id":"themes/lemon-lime/source/compass/.sass-cache/1429ba7c5a6833a9d3e3478b99f475e369a9afe3/screen.scssc","hash":"433cae200c094575d0ca8e54c44fd1d6af707312","modified":1615274023066},{"_id":"themes/lemon-lime/source/compass/.sass-cache/17d03613c125918cd0766f51918feb21dc3c074a/_appearance.scssc","hash":"a9fb7e771e153d7ef8f977e0c7a68a49949d66df","modified":1615274023067},{"_id":"themes/lemon-lime/source/compass/.sass-cache/17d03613c125918cd0766f51918feb21dc3c074a/_background-clip.scssc","hash":"8aec06b4c9a89f08531a96f6a534265154b48c98","modified":1615274023067},{"_id":"themes/lemon-lime/source/compass/.sass-cache/17d03613c125918cd0766f51918feb21dc3c074a/_border-radius.scssc","hash":"f9f9389e6c4c5a759ad13e861dcb4db330bfcb28","modified":1615274023068},{"_id":"themes/lemon-lime/source/compass/.sass-cache/17d03613c125918cd0766f51918feb21dc3c074a/_background-size.scssc","hash":"1f8020628a7f50de0140ed747d56a945ab934e32","modified":1615274023067},{"_id":"themes/lemon-lime/source/compass/.sass-cache/17d03613c125918cd0766f51918feb21dc3c074a/_background-origin.scssc","hash":"94879083e890e8addd4b4da695f95bf6904915fa","modified":1615274023067},{"_id":"themes/lemon-lime/source/compass/.sass-cache/17d03613c125918cd0766f51918feb21dc3c074a/_columns.scssc","hash":"f8b6c5b183eaa19b32c3dab7748fd45829554d57","modified":1615274023068},{"_id":"themes/lemon-lime/source/compass/.sass-cache/17d03613c125918cd0766f51918feb21dc3c074a/_box-sizing.scssc","hash":"11114b9a786a95f5a751d677216ddd5c49d9ce9e","modified":1615274023068},{"_id":"themes/lemon-lime/source/compass/.sass-cache/17d03613c125918cd0766f51918feb21dc3c074a/_box-shadow.scssc","hash":"8635db0332fd1c9a4e6f00a59c4ea892a064a47b","modified":1615274023068},{"_id":"themes/lemon-lime/source/compass/.sass-cache/17d03613c125918cd0766f51918feb21dc3c074a/_font-face.scssc","hash":"f537239768bdc37704fce121cb3e08b9bd0e8679","modified":1615274023069},{"_id":"themes/lemon-lime/source/compass/.sass-cache/17d03613c125918cd0766f51918feb21dc3c074a/_filter.scssc","hash":"3f3f7d01e8aabc356267f744efe76f7ac07478c4","modified":1615274023069},{"_id":"themes/lemon-lime/source/compass/.sass-cache/17d03613c125918cd0766f51918feb21dc3c074a/_flexbox.scssc","hash":"0869168395b945cff78b01a43f4fb2086939f687","modified":1615274023069},{"_id":"themes/lemon-lime/source/compass/.sass-cache/17d03613c125918cd0766f51918feb21dc3c074a/_hyphenation.scssc","hash":"b18c7099b66fe1426ecb836591f4f71b9a5783fc","modified":1615274023069},{"_id":"themes/lemon-lime/source/compass/.sass-cache/17d03613c125918cd0766f51918feb21dc3c074a/_images.scssc","hash":"1a0f799fb5e6527d2e60e43081a1f227e362ee75","modified":1615274023070},{"_id":"themes/lemon-lime/source/compass/.sass-cache/17d03613c125918cd0766f51918feb21dc3c074a/_inline-block.scssc","hash":"5c0da25bb217b1a869afbb88396217dfbce6d88e","modified":1615274023070},{"_id":"themes/lemon-lime/source/compass/.sass-cache/17d03613c125918cd0766f51918feb21dc3c074a/_opacity.scssc","hash":"c349cb3e42478acb693a310593c3e3ca8fc2af65","modified":1615274023070},{"_id":"themes/lemon-lime/source/compass/.sass-cache/17d03613c125918cd0766f51918feb21dc3c074a/_text-shadow.scssc","hash":"bb0b0b606731cc33077294f9f9b7c83dbbe64a19","modified":1615274023070},{"_id":"themes/lemon-lime/source/compass/.sass-cache/17d03613c125918cd0766f51918feb21dc3c074a/_regions.scssc","hash":"98207fc5a8e77abeef81d2ffd0d1f3db7df4c16c","modified":1615274023070},{"_id":"themes/lemon-lime/source/compass/.sass-cache/17d03613c125918cd0766f51918feb21dc3c074a/_user-interface.scssc","hash":"7ffa255a4b14cc03a40595b0a106e8fa15400d6c","modified":1615274023071},{"_id":"themes/lemon-lime/source/compass/.sass-cache/17d03613c125918cd0766f51918feb21dc3c074a/_transition.scssc","hash":"a49834d4aaa38931957b953029bfe35d66bf58aa","modified":1615274023071},{"_id":"themes/lemon-lime/source/compass/.sass-cache/27680a50871ee7541594dd9e1edc2282ada83cb4/ie.scssc","hash":"256e88cc5aa2dd8f0733c7fb59f5ec10c65d0995","modified":1615274023071},{"_id":"themes/lemon-lime/source/compass/.sass-cache/27680a50871ee7541594dd9e1edc2282ada83cb4/print.scssc","hash":"c9128cb108e1dfbc4e912de3af8ee8e5bfcb575c","modified":1615274023072},{"_id":"themes/lemon-lime/source/compass/.sass-cache/3dc42df00806de7d8a69305a38a55c4890752fa3/_general.scssc","hash":"404ba771be25090eddfbc6dba4dd77919e0ac241","modified":1615274023072},{"_id":"themes/lemon-lime/source/compass/.sass-cache/27680a50871ee7541594dd9e1edc2282ada83cb4/screen.scssc","hash":"65cca53c27b595094add6a6851ee2f099cb7e20f","modified":1615274023072},{"_id":"themes/lemon-lime/source/compass/.sass-cache/3dc42df00806de7d8a69305a38a55c4890752fa3/_sprites.scssc","hash":"0cbbab682ad9f777b534af5bf989b657a6496681","modified":1615274023072},{"_id":"themes/lemon-lime/source/compass/.sass-cache/4c4479c99682c9672ed1f5cef578b1385f87b274/ie.scssc","hash":"13f672427cd24cc92c05dd68773044e02973e7af","modified":1615274023073},{"_id":"themes/lemon-lime/source/compass/.sass-cache/4c4479c99682c9672ed1f5cef578b1385f87b274/print.scssc","hash":"f035dde12a8c273b53633e5019047b81cf1e7f45","modified":1615274023073},{"_id":"themes/lemon-lime/source/compass/.sass-cache/3dc42df00806de7d8a69305a38a55c4890752fa3/_tables.scssc","hash":"9beee30ca3d71fe89ffa4e1f9ff679850c61dbb5","modified":1615274023073},{"_id":"themes/lemon-lime/source/compass/.sass-cache/3dc42df00806de7d8a69305a38a55c4890752fa3/_color.scssc","hash":"48af2ceba765295950a93cbf55b9b5f436518107","modified":1615274023072},{"_id":"themes/lemon-lime/source/compass/.sass-cache/573835d864b4df5ce94e4258e1e431786e6d4972/_lists.scssc","hash":"ffe703a9f73cf039da2007ea1aba0f9e5f59d78f","modified":1615274023074},{"_id":"themes/lemon-lime/source/compass/.sass-cache/573835d864b4df5ce94e4258e1e431786e6d4972/_links.scssc","hash":"ebbcbd31beb92f3eebf6f8d65b1af9347aa75579","modified":1615274023074},{"_id":"themes/lemon-lime/source/compass/.sass-cache/4c4479c99682c9672ed1f5cef578b1385f87b274/screen.scssc","hash":"71248ceee6b1e1f9c8600d60facf0d40c426ecda","modified":1615274023073},{"_id":"themes/lemon-lime/source/compass/.sass-cache/573835d864b4df5ce94e4258e1e431786e6d4972/_text.scssc","hash":"9d96284636a9dca501a8310590b9e527c3fe24b9","modified":1615274023074},{"_id":"themes/lemon-lime/source/compass/.sass-cache/5a462c574cc9d6048b27e284d2bee463ad06adb0/_base.scssc","hash":"a438db152c47de2af2eca84c309ce5597f475fc4","modified":1615274023075},{"_id":"themes/lemon-lime/source/compass/.sass-cache/5a462c574cc9d6048b27e284d2bee463ad06adb0/_sprite-img.scssc","hash":"e36c665f3cffa83013f292ed6cfca891b45955ee","modified":1615274023075},{"_id":"themes/lemon-lime/source/compass/.sass-cache/56c684407ecd35ac97a172fc2de50c186bd65151/_normalize.scssc","hash":"81b891732579fa08308e7004ea88970563d69dce","modified":1615274023073},{"_id":"themes/lemon-lime/source/compass/.sass-cache/56c684407ecd35ac97a172fc2de50c186bd65151/_normalize-version.scssc","hash":"800d86fb74b216c4f24d48733f53bf2e1617f623","modified":1615274023073},{"_id":"themes/lemon-lime/source/compass/.sass-cache/622f0a367d2abdc892f2af88934fcd5a48a771fe/_brightness.scssc","hash":"5edad44af35655a6af821ea694bd55132306bd5c","modified":1615274023076},{"_id":"themes/lemon-lime/source/compass/.sass-cache/622f0a367d2abdc892f2af88934fcd5a48a771fe/_contrast.scssc","hash":"e1d1777f49025858cd5524b2d43c47dc6d3ce008","modified":1615274023076},{"_id":"themes/lemon-lime/source/compass/.sass-cache/5c1730f32298ffd91557b8d52e7146c95c422f95/_compass.scssc","hash":"53688b264f85fd2c793aaef119e25efd95a8efc8","modified":1615274023076},{"_id":"themes/lemon-lime/source/compass/.sass-cache/62333c48d2da46cd64cb8a7feb8d901e713ee5cb/_default-highlight.scssc","hash":"45342dce6ad760b07ce79315f70c41b1130f4168","modified":1615274023077},{"_id":"themes/lemon-lime/source/compass/.sass-cache/62333c48d2da46cd64cb8a7feb8d901e713ee5cb/_algolia.scssc","hash":"012b62881f7b4e46debedd8be6e0411dc368fba7","modified":1615274023076},{"_id":"themes/lemon-lime/source/compass/.sass-cache/62333c48d2da46cd64cb8a7feb8d901e713ee5cb/_archive.scssc","hash":"4b9c4b68870b76b208b36bd8c2b4c1185899a10b","modified":1615274023077},{"_id":"themes/lemon-lime/source/compass/.sass-cache/62333c48d2da46cd64cb8a7feb8d901e713ee5cb/_footer.scssc","hash":"f25a058c106996e19c2e9d853d25013a2c554d86","modified":1615274023077},{"_id":"themes/lemon-lime/source/compass/.sass-cache/62333c48d2da46cd64cb8a7feb8d901e713ee5cb/_header.scssc","hash":"d52451ea2c1d1c62f28156b01eaa72adb6ee5f45","modified":1615274023078},{"_id":"themes/lemon-lime/source/compass/.sass-cache/62333c48d2da46cd64cb8a7feb8d901e713ee5cb/_article-excerpt.scssc","hash":"4f47eed092e3f05ec14dce88610fe0ecf69884e8","modified":1615274023077},{"_id":"themes/lemon-lime/source/compass/.sass-cache/62333c48d2da46cd64cb8a7feb8d901e713ee5cb/_pagination.scssc","hash":"2b248ad9d32da8b1143df8ccb6603221bcc1d58d","modified":1615274023078},{"_id":"themes/lemon-lime/source/compass/.sass-cache/62333c48d2da46cd64cb8a7feb8d901e713ee5cb/_tableOfConents.scssc","hash":"1242275bda590043acf87606e3242bb8b2b29717","modified":1615274023079},{"_id":"themes/lemon-lime/source/compass/.sass-cache/62333c48d2da46cd64cb8a7feb8d901e713ee5cb/_nav.scssc","hash":"0661cafdf61045bc319fc386f06f95ce94ef8e97","modified":1615274023078},{"_id":"themes/lemon-lime/source/compass/.sass-cache/62333c48d2da46cd64cb8a7feb8d901e713ee5cb/_post-two-cols.scssc","hash":"7bce3343a7d98c1eb68b85208077a6ad93a29d0f","modified":1615274023078},{"_id":"themes/lemon-lime/source/compass/.sass-cache/62333c48d2da46cd64cb8a7feb8d901e713ee5cb/_tag-cloud.scssc","hash":"be057fc58c38fcf2cdeff1e410221aeee251e650","modified":1615274023079},{"_id":"themes/lemon-lime/source/compass/.sass-cache/62333c48d2da46cd64cb8a7feb8d901e713ee5cb/_tags-categories.scssc","hash":"3ea4cee3a303e47fc8bc8d0fd034fa19cc42d2d3","modified":1615274023079},{"_id":"themes/lemon-lime/source/compass/.sass-cache/62333c48d2da46cd64cb8a7feb8d901e713ee5cb/_toc.scssc","hash":"c7f295b2c8420326e4776e623c4a7da02b15fc33","modified":1615274023080},{"_id":"themes/lemon-lime/source/compass/.sass-cache/62333c48d2da46cd64cb8a7feb8d901e713ee5cb/_tags.scssc","hash":"c48fe697d1a9bba0966cef24a17531f713041cb6","modified":1615274023080},{"_id":"themes/lemon-lime/source/compass/.sass-cache/62333c48d2da46cd64cb8a7feb8d901e713ee5cb/archive.scssc","hash":"d6ee77fb38c0a7c5f6ec064743b7765d2e352e87","modified":1615274023080},{"_id":"themes/lemon-lime/source/compass/.sass-cache/656d50c8c63732453f8a41d27c641afe1fcaf58c/_algolia.scssc","hash":"56f900628e160f8d8d105445ed384163cf502626","modified":1615274023080},{"_id":"themes/lemon-lime/source/compass/.sass-cache/656d50c8c63732453f8a41d27c641afe1fcaf58c/_archive.scssc","hash":"0945867bc2ee03cfacf77400b0a843845b388bd3","modified":1615274023081},{"_id":"themes/lemon-lime/source/compass/.sass-cache/656d50c8c63732453f8a41d27c641afe1fcaf58c/_article-excerpt.scssc","hash":"9a398a144280952a4b97f714f0dfde26d363a4e0","modified":1615274023081},{"_id":"themes/lemon-lime/source/compass/.sass-cache/656d50c8c63732453f8a41d27c641afe1fcaf58c/_default-highlight.scssc","hash":"0636371feacceadecf79351e285f987afb1bf7ee","modified":1615274023081},{"_id":"themes/lemon-lime/source/compass/.sass-cache/656d50c8c63732453f8a41d27c641afe1fcaf58c/_footer.scssc","hash":"225aefe52dae12016606dd4eff1f28f48c07d90b","modified":1615274023081},{"_id":"themes/lemon-lime/source/compass/.sass-cache/656d50c8c63732453f8a41d27c641afe1fcaf58c/_header.scssc","hash":"547a2362bed217d098acbd66acee28b19bebb75b","modified":1615274023081},{"_id":"themes/lemon-lime/source/compass/.sass-cache/656d50c8c63732453f8a41d27c641afe1fcaf58c/_nav.scssc","hash":"8b7b6eb5ad37df6cc3759163a4896778b94658ff","modified":1615274023081},{"_id":"themes/lemon-lime/source/compass/.sass-cache/656d50c8c63732453f8a41d27c641afe1fcaf58c/_page-tags-categories.scssc","hash":"597e89ea0d1aca75236f323d9fb8ed81d13e1488","modified":1615274023082},{"_id":"themes/lemon-lime/source/compass/.sass-cache/656d50c8c63732453f8a41d27c641afe1fcaf58c/_pagination.scssc","hash":"7b825752b0d523b0817ea2a1cd4fc7f2bd8248d0","modified":1615274023082},{"_id":"themes/lemon-lime/source/compass/.sass-cache/656d50c8c63732453f8a41d27c641afe1fcaf58c/_post-tags-categories.scssc","hash":"fb9b0e7399b181f46f69cffd59d0cbdc6ffee908","modified":1615274023082},{"_id":"themes/lemon-lime/source/compass/.sass-cache/656d50c8c63732453f8a41d27c641afe1fcaf58c/_post-two-cols.scssc","hash":"93f8e22761a0d414e8daa352c4a85f8fc8dd3353","modified":1615274023082},{"_id":"themes/lemon-lime/source/compass/.sass-cache/65e4c30c131f260ea88c3e4f2e16dfc2ba547e74/_utilities.scssc","hash":"0be248dd0420697c69a108cf7879f0cd1bdd9202","modified":1615274023083},{"_id":"themes/lemon-lime/source/compass/.sass-cache/67b1f137f07d32357d6fe41f15df4a95416e5b09/ie.scssc","hash":"b519b23c0bf48337570dee261f31595811fa3a36","modified":1615274023083},{"_id":"themes/lemon-lime/source/compass/.sass-cache/67b1f137f07d32357d6fe41f15df4a95416e5b09/print.scssc","hash":"c03a007d99f13c155b41f17ca768658dc3fbdc41","modified":1615274023083},{"_id":"themes/lemon-lime/source/compass/.sass-cache/67b1f137f07d32357d6fe41f15df4a95416e5b09/screen.scssc","hash":"61a58bbce960f0d62dfee6dfe037c366d5c237b1","modified":1615274023083},{"_id":"themes/lemon-lime/source/compass/.sass-cache/695d3b5b9b8111ff76d65eecef160c03470d1e4e/_algolia.scssc","hash":"884f29e7f4f264dd0cbc965ace5b3f679f3832f5","modified":1615274023084},{"_id":"themes/lemon-lime/source/compass/.sass-cache/695d3b5b9b8111ff76d65eecef160c03470d1e4e/_archive.scssc","hash":"58f7b85a08fec366e1de37694a2b4ee9210e6bd5","modified":1615274023084},{"_id":"themes/lemon-lime/source/compass/.sass-cache/695d3b5b9b8111ff76d65eecef160c03470d1e4e/_article-excerpt.scssc","hash":"ff94a0a2281f39679757d0e31f4c6e1d1033cac6","modified":1615274023084},{"_id":"themes/lemon-lime/source/compass/.sass-cache/695d3b5b9b8111ff76d65eecef160c03470d1e4e/_default-highlight.scssc","hash":"28c649845360ba77a3b87d75b011dc65c268a5b9","modified":1615274023084},{"_id":"themes/lemon-lime/source/compass/.sass-cache/695d3b5b9b8111ff76d65eecef160c03470d1e4e/_footer.scssc","hash":"02d2b14fba9d81a0c5f5ffde1a2e02956579c33f","modified":1615274023085},{"_id":"themes/lemon-lime/source/compass/.sass-cache/695d3b5b9b8111ff76d65eecef160c03470d1e4e/_header.scssc","hash":"04d1a674829b7c58c6c6f6df978311ee7dc8b41a","modified":1615274023085},{"_id":"themes/lemon-lime/source/compass/.sass-cache/695d3b5b9b8111ff76d65eecef160c03470d1e4e/_nav.scssc","hash":"ae9127e6596fbe50d3e3de34f5829855ae9a2eae","modified":1615274023085},{"_id":"themes/lemon-lime/source/compass/.sass-cache/695d3b5b9b8111ff76d65eecef160c03470d1e4e/_pagination.scssc","hash":"f19301fb96232aa6de66185eec05b31ea5918654","modified":1615274023085},{"_id":"themes/lemon-lime/source/compass/.sass-cache/695d3b5b9b8111ff76d65eecef160c03470d1e4e/_tags-categories.scssc","hash":"a5aee3e2b1742586e1979c141aad53494ee296e7","modified":1615274023085},{"_id":"themes/lemon-lime/source/compass/.sass-cache/6f2ba91ad9dace0622100d3cc2d8be4b4235ef91/_genaral.scssc","hash":"733e60429351c5df632d3a578badef2af478af8f","modified":1615274023086},{"_id":"themes/lemon-lime/source/compass/.sass-cache/695d3b5b9b8111ff76d65eecef160c03470d1e4e/_tag-cloud.scssc","hash":"884a44e4af4554ee6d41e00a657c0d779523cdad","modified":1615274023085},{"_id":"themes/lemon-lime/source/compass/.sass-cache/695d3b5b9b8111ff76d65eecef160c03470d1e4e/_post-two-cols.scssc","hash":"10c7c761615019ef0fec5f93eb91dbc986f6972a","modified":1615274023085},{"_id":"themes/lemon-lime/source/compass/.sass-cache/7dcaa80afe20012d79773fda9d5c6470f682d275/_genaral.scssc","hash":"199f9b8d8e793af3a7d6982b4994db0066683d9e","modified":1615274023106},{"_id":"themes/lemon-lime/source/compass/.sass-cache/782a0bd87992107041654cec56e572d9555410d7/_grid-background.scssc","hash":"6cd4a4c10327b920f8965dcdf6d74ee4a57c537a","modified":1615274023106},{"_id":"themes/lemon-lime/source/compass/.sass-cache/7dcaa80afe20012d79773fda9d5c6470f682d275/_variable.scssc","hash":"1801e28e1b75de7d1776bcc887fb7342834ef961","modified":1615274023108},{"_id":"themes/lemon-lime/source/compass/.sass-cache/6f2ba91ad9dace0622100d3cc2d8be4b4235ef91/_variable.scssc","hash":"7a2b6712db813fc39f3153a200eb689be30dea6a","modified":1615274023086},{"_id":"themes/lemon-lime/source/compass/.sass-cache/98a7ed5264178fbd0870c9038118ca3f0a0ab596/_alternating-rows-and-columns.scssc","hash":"64cce994fcfb5db53c0dc31b860c386cc4036403","modified":1615274023108},{"_id":"themes/lemon-lime/source/compass/.sass-cache/98a7ed5264178fbd0870c9038118ca3f0a0ab596/_scaffolding.scssc","hash":"b492e5c99f022cfcbd9bea601feda3162a6e4302","modified":1615274023109},{"_id":"themes/lemon-lime/source/compass/.sass-cache/98a7ed5264178fbd0870c9038118ca3f0a0ab596/_borders.scssc","hash":"2ca82db3af61a9ea8e476cb3ca183487ef4f5989","modified":1615274023109},{"_id":"themes/lemon-lime/source/compass/.sass-cache/9b10c8ed08abc0cd6f2f5f0ab8e0941dd8e6e0ac/_archive.scssc","hash":"e8504f9f8c25144fd33c8f9f69ec846dff375c27","modified":1615274023110},{"_id":"themes/lemon-lime/source/compass/.sass-cache/9b10c8ed08abc0cd6f2f5f0ab8e0941dd8e6e0ac/_article-excerpt.scssc","hash":"0cd5c8b30a9f0d22c3178985cb32eabb82c897f2","modified":1615274023110},{"_id":"themes/lemon-lime/source/compass/.sass-cache/9b10c8ed08abc0cd6f2f5f0ab8e0941dd8e6e0ac/_algolia.scssc","hash":"1e9ab307ad9ef927080a9bfa73ac0cf8c479344a","modified":1615274023110},{"_id":"themes/lemon-lime/source/compass/.sass-cache/9b10c8ed08abc0cd6f2f5f0ab8e0941dd8e6e0ac/_default-highlight.scssc","hash":"3194cafe0dc8409d963600a6945ab19557afadbb","modified":1615274023111},{"_id":"themes/lemon-lime/source/compass/.sass-cache/9b10c8ed08abc0cd6f2f5f0ab8e0941dd8e6e0ac/_footer.scssc","hash":"ad5c93c5c3eaed142853754708f494cb4aae9d52","modified":1615274023111},{"_id":"themes/lemon-lime/source/compass/.sass-cache/9b10c8ed08abc0cd6f2f5f0ab8e0941dd8e6e0ac/_header.scssc","hash":"0289f65915929cc4295bf44e72b1febde383704a","modified":1615274023111},{"_id":"themes/lemon-lime/source/compass/.sass-cache/9b10c8ed08abc0cd6f2f5f0ab8e0941dd8e6e0ac/_page-tags-categories.scssc","hash":"bf1a310c9664730b6c743fd5be93cf6c693c9b39","modified":1615274023112},{"_id":"themes/lemon-lime/source/compass/.sass-cache/9b10c8ed08abc0cd6f2f5f0ab8e0941dd8e6e0ac/_nav.scssc","hash":"ca1e580b81f6bd5f253b18f7533ac9cc299c507a","modified":1615274023111},{"_id":"themes/lemon-lime/source/compass/.sass-cache/9b10c8ed08abc0cd6f2f5f0ab8e0941dd8e6e0ac/_pagination.scssc","hash":"b84e2d028687de66eb1439bce1e6215904501ec2","modified":1615274023112},{"_id":"themes/lemon-lime/source/compass/.sass-cache/9d529d093af51e828e18e4411ec1c13f542f0dbc/_genaral.scssc","hash":"577db94a45e7e779d4c700ee7f20990eb1a68e4e","modified":1615274023114},{"_id":"themes/lemon-lime/source/compass/.sass-cache/9b10c8ed08abc0cd6f2f5f0ab8e0941dd8e6e0ac/_post-tags-categories.scssc","hash":"5eadfbb18e72f8356f6c9846bd00d96a04505aa6","modified":1615274023112},{"_id":"themes/lemon-lime/source/compass/.sass-cache/9b10c8ed08abc0cd6f2f5f0ab8e0941dd8e6e0ac/_post-two-cols.scssc","hash":"cbd99b9d6f2bae088c3dd9840a0ad2290fbccf3e","modified":1615274023113},{"_id":"themes/lemon-lime/source/compass/.sass-cache/9d529d093af51e828e18e4411ec1c13f542f0dbc/_variable.scssc","hash":"8cfceab52862d9dc6fa1aa7aac1f83bc5277ff35","modified":1615274023114},{"_id":"themes/lemon-lime/source/compass/.sass-cache/a026604b09db0708acd1fe7a540be7b4c4d032d6/_genaral.scssc","hash":"fe4aa6d4595a9f17f14c316f0928856f799c2478","modified":1615274023115},{"_id":"themes/lemon-lime/source/compass/.sass-cache/a026604b09db0708acd1fe7a540be7b4c4d032d6/_variable.scssc","hash":"952dee3855f58b3d2fa3635abfeb35b486474e5e","modified":1615274023115},{"_id":"themes/lemon-lime/source/compass/.sass-cache/a142fac27c1a374688ab8ff8c5d746823a6ebbcb/_algolia.scssc","hash":"9bf339d2b3b14a7fb7c92a480151ddb05fec753c","modified":1615274023116},{"_id":"themes/lemon-lime/source/compass/.sass-cache/a142fac27c1a374688ab8ff8c5d746823a6ebbcb/_archive.scssc","hash":"8b1a1bc0e62e2d77ff7d2221db70e781e9678c7f","modified":1615274023117},{"_id":"themes/lemon-lime/source/compass/.sass-cache/a142fac27c1a374688ab8ff8c5d746823a6ebbcb/_article-excerpt.scssc","hash":"2a5cdf40a4ba7807986bc2efcb907f959968dd0c","modified":1615274023117},{"_id":"themes/lemon-lime/source/compass/.sass-cache/a142fac27c1a374688ab8ff8c5d746823a6ebbcb/_default-highlight.scssc","hash":"656f08785aac3c6fa8086ab3aa321ac0f118567f","modified":1615274023117},{"_id":"themes/lemon-lime/source/compass/.sass-cache/a142fac27c1a374688ab8ff8c5d746823a6ebbcb/_footer.scssc","hash":"53331a9687a3e9e12d61e09bc152d4b62f5094ea","modified":1615274023118},{"_id":"themes/lemon-lime/source/compass/.sass-cache/a142fac27c1a374688ab8ff8c5d746823a6ebbcb/_header.scssc","hash":"fdca935008c03a4f8c7346d6a579210214b6e6a8","modified":1615274023118},{"_id":"themes/lemon-lime/source/compass/.sass-cache/a142fac27c1a374688ab8ff8c5d746823a6ebbcb/_nav.scssc","hash":"45160fcd8f3d382ae72837ac132fc5381a160f50","modified":1615274023118},{"_id":"themes/lemon-lime/source/compass/.sass-cache/a142fac27c1a374688ab8ff8c5d746823a6ebbcb/_page-tags-categories.scssc","hash":"98d49568ace0c864cd66f617246831a3bceaac15","modified":1615274023118},{"_id":"themes/lemon-lime/source/compass/.sass-cache/a142fac27c1a374688ab8ff8c5d746823a6ebbcb/_pagination.scssc","hash":"d1da59b60677751f7a0a490ff3f7a3fbaaa8b845","modified":1615274023118},{"_id":"themes/lemon-lime/source/compass/.sass-cache/a142fac27c1a374688ab8ff8c5d746823a6ebbcb/_post-tags-categories.scssc","hash":"c776bef941c59eb7510f34fd59c55339f9d3305b","modified":1615274023119},{"_id":"themes/lemon-lime/source/compass/.sass-cache/a142fac27c1a374688ab8ff8c5d746823a6ebbcb/_post-two-cols.scssc","hash":"5eb486185b8b699485897ff37dc8aa1a0f266aff","modified":1615274023119},{"_id":"themes/lemon-lime/source/compass/.sass-cache/a142fac27c1a374688ab8ff8c5d746823a6ebbcb/_tag-cloud.scssc","hash":"242832a4f5589c36c374e44546cfdba0fe4e0c85","modified":1615274023120},{"_id":"themes/lemon-lime/source/compass/.sass-cache/a142fac27c1a374688ab8ff8c5d746823a6ebbcb/_tags-categories.scssc","hash":"2d39386d1a3439ba4310f09f63ffae61218b26a8","modified":1615274023120},{"_id":"themes/lemon-lime/source/compass/.sass-cache/af1a5722249b61fe97c5776f7a26e0902a00f406/_css3.scssc","hash":"203b9df7bd85139bd48f61869229853ddf44c774","modified":1615274023120},{"_id":"themes/lemon-lime/source/compass/.sass-cache/af1a5722249b61fe97c5776f7a26e0902a00f406/_reset.scssc","hash":"8940d3d42a9b5e9fd328ef6cda5fe292b52a292d","modified":1615274023120},{"_id":"themes/lemon-lime/source/compass/.sass-cache/af1a5722249b61fe97c5776f7a26e0902a00f406/_typography.scssc","hash":"0daaa156d5271284331981f6e26b3c174cbe0d02","modified":1615274023122},{"_id":"themes/lemon-lime/source/compass/.sass-cache/af1a5722249b61fe97c5776f7a26e0902a00f406/_utilities.scssc","hash":"38b89483d3c0b100e0144b8c13a6d5a38ae7dd39","modified":1615274023123},{"_id":"themes/lemon-lime/source/compass/.sass-cache/b97d58f9801742043a3b5ae0a9ccf7851ca071b3/ie.scssc","hash":"d822180cfea331aab20d8cae5b1ca18d3a7ac266","modified":1615274023124},{"_id":"themes/lemon-lime/source/compass/.sass-cache/b97d58f9801742043a3b5ae0a9ccf7851ca071b3/print.scssc","hash":"66c6a78d948d5b20b94b6b29548d80da0c1430df","modified":1615274023125},{"_id":"themes/lemon-lime/source/compass/.sass-cache/b97d58f9801742043a3b5ae0a9ccf7851ca071b3/screen.scssc","hash":"a9c6c94b5999bcdd50fd9c8e072d72c188fb2beb","modified":1615274023125},{"_id":"themes/lemon-lime/source/compass/.sass-cache/bbe6e3467eb0788de7c874201395cdc9422f15de/_ellipsis.scssc","hash":"4dcadbe92291111b5b76ad9a17a7051bc653568d","modified":1615274023125},{"_id":"themes/lemon-lime/source/compass/.sass-cache/bbe6e3467eb0788de7c874201395cdc9422f15de/_force-wrap.scssc","hash":"3d9f8ff6e9dc41d3b737ca5a7596385725f5531c","modified":1615274023125},{"_id":"themes/lemon-lime/source/compass/.sass-cache/bbe6e3467eb0788de7c874201395cdc9422f15de/_nowrap.scssc","hash":"971b972d258e0dc7191baf166034752046a9d395","modified":1615274023126},{"_id":"themes/lemon-lime/source/compass/.sass-cache/bbe6e3467eb0788de7c874201395cdc9422f15de/_replacement.scssc","hash":"425cb85ccddd7e1a295c24aebb62f2415a23b7f4","modified":1615274023126},{"_id":"themes/lemon-lime/source/compass/.sass-cache/c09b66a8616b1253745429a4010509e2bd8326ea/ie.scssc","hash":"d033980da07a36cf7be6eb39b7121ffe9893effa","modified":1615274023127},{"_id":"themes/lemon-lime/source/compass/.sass-cache/c09b66a8616b1253745429a4010509e2bd8326ea/print.scssc","hash":"d2bce88c9827210d6e40489c413e12e7f76082f8","modified":1615274023127},{"_id":"themes/lemon-lime/source/compass/.sass-cache/c09b66a8616b1253745429a4010509e2bd8326ea/screen.scssc","hash":"a22b920ebe314a60d87c3b0c93eef17dbdd770ff","modified":1615274023127},{"_id":"themes/lemon-lime/source/compass/.sass-cache/cb91afc89e5ff78dce819105aded2cec4e2edf27/_genaral.scssc","hash":"002c810ef5175c5d2cfd1d85d72d7803e2485dab","modified":1615274023128},{"_id":"themes/lemon-lime/source/compass/.sass-cache/cb91afc89e5ff78dce819105aded2cec4e2edf27/_variable.scssc","hash":"59cb34ae76f2c27d77941ca74dea4cced38e2891","modified":1615274023128},{"_id":"themes/lemon-lime/source/compass/.sass-cache/cd57c9b0980d0f25e92ee54d3ee2a16b903b7e86/_bullets.scssc","hash":"c862812bf0c38d23fc417ef1cc6b15a3f7709fa4","modified":1615274023129},{"_id":"themes/lemon-lime/source/compass/.sass-cache/cd57c9b0980d0f25e92ee54d3ee2a16b903b7e86/_horizontal-list.scssc","hash":"28310ed388fcca9b30c99d7f49db77425a16afd7","modified":1615274023129},{"_id":"themes/lemon-lime/source/compass/.sass-cache/cd57c9b0980d0f25e92ee54d3ee2a16b903b7e86/_inline-block-list.scssc","hash":"b52d5bbf18cf0eb8978d4fe701e92216d56ec24b","modified":1615274023130},{"_id":"themes/lemon-lime/source/compass/.sass-cache/cd57c9b0980d0f25e92ee54d3ee2a16b903b7e86/_inline-list.scssc","hash":"ecd909e7e04f2c9dbc4ba8ec16829f9643c83de3","modified":1615274023130},{"_id":"themes/lemon-lime/source/compass/.sass-cache/dc1c3a5f1841c760d2474bc68fdd0a9aed2573db/_algolia.scssc","hash":"e4ec1d54ee82e581cf1d8936332b192a29084663","modified":1615274023130},{"_id":"themes/lemon-lime/source/compass/.sass-cache/dc1c3a5f1841c760d2474bc68fdd0a9aed2573db/_archive.scssc","hash":"0e7d5fa2e92377f526cbe639dba831f3fdf410a1","modified":1615274023131},{"_id":"themes/lemon-lime/source/compass/.sass-cache/dc1c3a5f1841c760d2474bc68fdd0a9aed2573db/_article-excerpt.scssc","hash":"bfd6de9e36650ce3b3bb00ef478dfe5c5c141d22","modified":1615274023131},{"_id":"themes/lemon-lime/source/compass/.sass-cache/dc1c3a5f1841c760d2474bc68fdd0a9aed2573db/_default-highlight.scssc","hash":"e6e7ecc8c52173573fb92784fdf24306861cb879","modified":1615274023131},{"_id":"themes/lemon-lime/source/compass/.sass-cache/dc1c3a5f1841c760d2474bc68fdd0a9aed2573db/_footer.scssc","hash":"81912c5605c7458ef3a8c4a93aa7de23367c9f87","modified":1615274023131},{"_id":"themes/lemon-lime/source/compass/.sass-cache/dc1c3a5f1841c760d2474bc68fdd0a9aed2573db/_header.scssc","hash":"799a4e1d9ad098c5e178f1f7d97f0ec18b34bb08","modified":1615274023132},{"_id":"themes/lemon-lime/source/compass/.sass-cache/dc1c3a5f1841c760d2474bc68fdd0a9aed2573db/_nav.scssc","hash":"67ddede0e27c645ae67aaa3f6b6a8e39dd72653c","modified":1615274023132},{"_id":"themes/lemon-lime/source/compass/.sass-cache/dc1c3a5f1841c760d2474bc68fdd0a9aed2573db/_pagination.scssc","hash":"cf202ffd45966c079e5d6f149b0a253b1aea82f2","modified":1615274023134},{"_id":"themes/lemon-lime/source/compass/.sass-cache/dc1c3a5f1841c760d2474bc68fdd0a9aed2573db/_tag-cloud.scssc","hash":"3f0a41f7ae3ebf341815df68f8f62c8b19ba28e0","modified":1615274023134},{"_id":"themes/lemon-lime/source/compass/.sass-cache/dc1c3a5f1841c760d2474bc68fdd0a9aed2573db/_post-two-cols.scssc","hash":"81a5e64a3d48f45558d7205da6d51f5abffbc378","modified":1615274023134},{"_id":"themes/lemon-lime/source/compass/.sass-cache/dc1c3a5f1841c760d2474bc68fdd0a9aed2573db/_tags-categories.scssc","hash":"adc465e2b5052dd1af24449bec9e4dd7e9cfd668","modified":1615274023134},{"_id":"themes/lemon-lime/source/compass/.sass-cache/e310d2a46e33155c6714303ec9d6870cad712537/ie.scssc","hash":"c02d37be7180d933aa786208c8b73ace5048382d","modified":1615274023134},{"_id":"themes/lemon-lime/source/compass/.sass-cache/e310d2a46e33155c6714303ec9d6870cad712537/print.scssc","hash":"a5b295c60d3b8cd4ab08d7b908d51160677a45f5","modified":1615274023135},{"_id":"themes/lemon-lime/source/compass/.sass-cache/e310d2a46e33155c6714303ec9d6870cad712537/screen.scssc","hash":"35522a26430eb65d7f66e6b2f1b83b2cc808de84","modified":1615274023135},{"_id":"themes/lemon-lime/source/compass/.sass-cache/f0b583b1d6c81e1e2b9e8b4407af3e5c0f58d148/_variable.scssc","hash":"5e88c09f82f5a6afb0fd4b33d5e7e6a81fb10dc8","modified":1615274023135},{"_id":"themes/lemon-lime/source/compass/.sass-cache/f0b583b1d6c81e1e2b9e8b4407af3e5c0f58d148/_genaral.scssc","hash":"c27a37dea40e1649011fd0908c928cbbf6571691","modified":1615274023135},{"_id":"themes/lemon-lime/source/compass/.sass-cache/f80149e2d24d84e9c8bc0e2a066a9d62bc1f6d5b/_hover-link.scssc","hash":"7d0b55e4dc16b69a15b83adad4045137b46b76bc","modified":1615274023136},{"_id":"themes/lemon-lime/source/compass/.sass-cache/f80149e2d24d84e9c8bc0e2a066a9d62bc1f6d5b/_link-colors.scssc","hash":"2419af14b937fe135fba575ed7b9e3d29046275e","modified":1615274023136},{"_id":"themes/lemon-lime/source/compass/.sass-cache/f80149e2d24d84e9c8bc0e2a066a9d62bc1f6d5b/_unstyled-link.scssc","hash":"09960a8162286d5e0fdc211e55b3ac0a7646b927","modified":1615274023136},{"_id":"themes/lemon-lime/source/compass/sass/general/_genaral.scss","hash":"7301e987c81c2623f52b923a05773167cc05ac98","modified":1615274023169},{"_id":"themes/lemon-lime/source/compass/sass/general/_variable.scss","hash":"027f228963e667416a90494c14dfe0af85541e18","modified":1615274023170},{"_id":"themes/lemon-lime/source/compass/sass/layout/_algolia.scss","hash":"22752f3c1d7b299e19942073b168b4093415c952","modified":1615274023170},{"_id":"themes/lemon-lime/source/compass/sass/layout/_archive.scss","hash":"f52beab37da1d79dbf4ba66f3aa793c56d2400bf","modified":1615274023170},{"_id":"themes/lemon-lime/source/compass/sass/layout/_article-excerpt.scss","hash":"4e48f6e4097342e6b6cec4dac4dce38f9e79a8df","modified":1615274023171},{"_id":"themes/lemon-lime/source/compass/sass/layout/_default-highlight.scss","hash":"fe8e90ab2e0f98b89d8beb85e8227599dccdff98","modified":1615274023171},{"_id":"themes/lemon-lime/source/compass/sass/layout/_footer.scss","hash":"af920e4a0cc0d7a4945908f20b0c2fc97d225e95","modified":1615274023172},{"_id":"themes/lemon-lime/source/compass/sass/layout/_header.scss","hash":"9e33f3a84d73ebf417f041aa82aa152ffc4b4e87","modified":1615274023172},{"_id":"themes/lemon-lime/source/compass/sass/layout/_nav.scss","hash":"93ea646b31b313b315b6b663bc1e7ca51964b7b2","modified":1615274023172},{"_id":"themes/lemon-lime/source/compass/sass/layout/_page-tags-categories.scss","hash":"a0e1364e5e8393248c8231959277af93faf66197","modified":1615274023173},{"_id":"themes/lemon-lime/source/compass/sass/layout/_pagination.scss","hash":"6a8f2d8471631c24e8ee162ea2d1a842e8c38d11","modified":1615274023173},{"_id":"themes/lemon-lime/source/compass/sass/layout/_post-tags-categories.scss","hash":"454815fe2e18d4e4162bc101e495c78263e4bd56","modified":1615274023174},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Library/Ruby/Gems/2.0.0/gems/compass-normalize-1.5/stylesheets/_normalize.scssc","hash":"8ec164dd391d3b3b4ba7f7ef8a165e1434f8dc82","modified":1615274023090},{"_id":"themes/lemon-lime/source/compass/sass/layout/_post-two-cols.scss","hash":"6db43d05378d941341919ecdc103de7eba7ccf6f","modified":1615274023174},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.3/stylesheets/compass/_CSS3.scssc","hash":"3d2172926696eec2956474240aeb3e5dd093baa6","modified":1615274023087},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.3/stylesheets/compass/_support.scssc","hash":"55758cdf923b1c2738bec21ccebc3bf9cf576398","modified":1615274023087},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.3/stylesheets/compass/css3/_background-size.scssc","hash":"402df3761b300a55ca00e4cc6d5d2bb3bd3b4dfc","modified":1615274023087},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.3/stylesheets/compass/css3/_images.scssc","hash":"dee8b02f8789b815ac5a4d0c8377d0bfe00ca1a6","modified":1615274023087},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.3/stylesheets/compass/css3/_inline-block.scssc","hash":"9804f4e18ce71ca9c814c2171b10e3d11422ec20","modified":1615274023087},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.3/stylesheets/compass/typography/_links.scssc","hash":"7db96ea5c661aa5a4ebe5f200f1dbe87fbbe84a6","modified":1615274023088},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.3/stylesheets/compass/typography/_lists.scssc","hash":"f18d9381eb650a118638951ca2ab913974e596eb","modified":1615274023088},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.3/stylesheets/compass/typography/_text.scssc","hash":"deeaf69c61bb4cfde52868c90cb1ca304b831253","modified":1615274023088},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/lemon-lime/source/compass/sass/general/_genaral.scssc","hash":"7ff4762a0d097267e2c07e5a9cabb6dd2067ff51","modified":1615274023094},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/lemon-lime/source/compass/sass/general/_variable.scssc","hash":"f91c5ed449c7e85e7b3d07eefca0980c7ab311f9","modified":1615274023094},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/lemon-lime/source/compass/sass/layout/_algolia.scssc","hash":"47a89b5e754957e4e081f2a4a8fb0e503a2d7678","modified":1615274023097},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/lemon-lime/source/compass/sass/layout/_archive.scssc","hash":"92befbc06e0c850d1a2a2a55068fea78a0bcde7d","modified":1615274023097},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/lemon-lime/source/compass/sass/layout/_article-excerpt.scssc","hash":"528246cb86a0297d4772c6528273271b67d01865","modified":1615274023097},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/lemon-lime/source/compass/sass/layout/_default-highlight.scssc","hash":"ace23d35ca209ca88c8f7bef4e665f184ed15b1e","modified":1615274023097},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/lemon-lime/source/compass/sass/layout/_footer.scssc","hash":"dc63c49226e9b558e058d3f66287e7819f767360","modified":1615274023097},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/lemon-lime/source/compass/sass/layout/_pagination.scssc","hash":"b98770b395dd48e7d00f636694e72137c27950da","modified":1615274023098},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/lemon-lime/source/compass/sass/layout/_header.scssc","hash":"ac8d7deda76ea87f510f0120ca36afb8fdf9aeed","modified":1615274023097},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/lemon-lime/source/compass/sass/layout/_nav.scssc","hash":"2c2d42f8e8dd47034580a9898c4745f878abbbdf","modified":1615274023098},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/lemon-lime/source/compass/sass/layout/_post-two-cols.scssc","hash":"8867a1520b02d66594bd0b1f441a4bc8f747d401","modified":1615274023098},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/lemon-lime/source/compass/sass/layout/_page-tags-categories.scssc","hash":"081dd61aa0409912b2a38b6a3666f33bb50d3c22","modified":1615274023098},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/lemon-lime/source/compass/sass/layout/_tags-categories.scssc","hash":"2381b3eaa8b7f178ee7be75243ff99c262a7e991","modified":1615274023099},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/lemon-lime/source/compass/sass/layout/_tag-cloud.scssc","hash":"466e87439ec7493e88fca7ebc2531dc00475267d","modified":1615274023098},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/sketch/source/compass/sass/general/_genaral.scssc","hash":"3e96e785a03a365879fceaeeb569020fb3e48580","modified":1615274023100},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/sketch/source/compass/sass/general/_variable.scssc","hash":"7cebd9e114cfefe532661c931d40a07ae5c697be","modified":1615274023101},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/sketch/source/compass/sass/layout/_algolia.scssc","hash":"d9879f38491b9ed6def66e3bd080c87d266f5014","modified":1615274023101},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/sketch/source/compass/sass/layout/_archive.scssc","hash":"26faa5c17b8ea7b9fbdb6c94b7fb452fbf20e0d3","modified":1615274023102},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/sketch/source/compass/sass/layout/_article-excerpt.scssc","hash":"4426b2fab1c632052340a2b28bdf03cc2d07456c","modified":1615274023102},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/sketch/source/compass/sass/layout/_default-highlight.scssc","hash":"8703801f3eacd60169b3282adce9a9b8c625ad18","modified":1615274023102},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/sketch/source/compass/sass/layout/_footer.scssc","hash":"ab00b69efda0e0434f4bee7330d5ad2b077d447d","modified":1615274023102},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/sketch/source/compass/sass/layout/_header.scssc","hash":"33253c95d50793ecd98aa199b7d30e57a3eb5206","modified":1615274023102},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/sketch/source/compass/sass/layout/_nav.scssc","hash":"2db39843959b4a7cb9fa89e7c5f526cfbd14432d","modified":1615274023103},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/sketch/source/compass/sass/layout/_post-two-cols.scssc","hash":"d3da707fd8c28544bc8cb86198e481601eecd9fc","modified":1615274023104},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/sketch/source/compass/sass/layout/_pagination.scssc","hash":"db9aa41ad97ed653c9fee432c68bcc779679efd9","modified":1615274023103},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/sketch/source/compass/sass/layout/_tag-cloud.scssc","hash":"27f403411909e69d3a116847c0ea7f86e44ac923","modified":1615274023104},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/sketch/source/compass/sass/layout/_tags-categories.scssc","hash":"62d87161f9540f24160acf5a71cbaa4cdf935d78","modified":1615274023104},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/rachelqiublog/themes/sketch/source/compass/sass/layout/_toc.scssc","hash":"fc85586ccf9c857d24af53616437e849c992f9c9","modified":1615274023105},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.3/stylesheets/compass/typography/lists/_bullets.scssc","hash":"d53b279527ded44129aef123da7ae01827072761","modified":1615274023088},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.3/stylesheets/compass/typography/lists/_horizontal-list.scssc","hash":"9f46315151197e5c15849ec295460887ca099bde","modified":1615274023089},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.3/stylesheets/compass/typography/text/_replacement.scssc","hash":"51fa78e3733c77af23623e45e76a3fd0cffb21f8","modified":1615274023089},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.3/stylesheets/compass/utilities/general/_clearfix.scssc","hash":"b8ede5770129eb4e77c2bb0635803c85cabff68a","modified":1615274023089},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.3/stylesheets/compass/utilities/general/_float.scssc","hash":"897e323062cd7c1f315313c7093b3e898600335c","modified":1615274023089},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.3/stylesheets/compass/utilities/general/_hacks.scssc","hash":"299d03b66e0bd84bafbb6c9ad5d335e7a6fe0dd7","modified":1615274023089},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.3/stylesheets/compass/utilities/general/_reset.scssc","hash":"e2d182454b0ad0fd81cce861bf5d5e69d37cd889","modified":1615274023089},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/github/rachelqiublog/themes/lemon-lime/source/compass/sass/general/_variable.scssc","hash":"7ab2257e3d101d8d875e88535a721add32838c18","modified":1615274023091},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/github/rachelqiublog/themes/lemon-lime/source/compass/sass/layout/_archive.scssc","hash":"4b316d571b45736e07446d4df57c916470a62fe8","modified":1615274023091},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/github/rachelqiublog/themes/lemon-lime/source/compass/sass/layout/_article-excerpt.scssc","hash":"c1c77532923129ba3548c4262e551bcfab4892ba","modified":1615274023091},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/github/rachelqiublog/themes/lemon-lime/source/compass/sass/layout/_default-highlight.scssc","hash":"b2c570fd19649362bf79af7cea012c5e1a37eb9d","modified":1615274023092},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/github/rachelqiublog/themes/lemon-lime/source/compass/sass/layout/_footer.scssc","hash":"2ee73f6afb38a7fc4ee61585464aa419d059a5d0","modified":1615274023092},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/github/rachelqiublog/themes/lemon-lime/source/compass/sass/layout/_header.scssc","hash":"1b7fb615a4b197357f2e0b10b1417dd9fceec267","modified":1615274023092},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/github/rachelqiublog/themes/lemon-lime/source/compass/sass/layout/_nav.scssc","hash":"8bec89a5bc78d645944bc3659d7cdeea62ab61e1","modified":1615274023093},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/github/rachelqiublog/themes/lemon-lime/source/compass/sass/layout/_page-tags-categories.scssc","hash":"f463480151a2590b469d244c57f3b243481f4500","modified":1615274023093},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/github/rachelqiublog/themes/lemon-lime/source/compass/sass/layout/_pagination.scssc","hash":"a86b16a8ffba47cf4d16bc5b2d148b7d91038e7b","modified":1615274023093},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/github/rachelqiublog/themes/lemon-lime/source/compass/sass/layout/_post-tags-categories.scssc","hash":"08e53be154d830a3407551b05f3f7b8c30f31cae","modified":1615274023093},{"_id":"themes/lemon-lime/source/compass/.sass-cache/75fcaf1b4852ceb732871195e41567cc2a7d8997/Users/huanqiu/github/rachelqiublog/themes/lemon-lime/source/compass/sass/layout/_post-two-cols.scssc","hash":"42018b2b8ac493687acef0c751dd77ca129a9166","modified":1615274023094},{"_id":"themes/lemon-lime/source/compass/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1615274023165},{"_id":"themes/lemon-lime/source/compass/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1615274023164},{"_id":"themes/lemon-lime/source/compass/imgs/favicon.ico","hash":"028e8dbf3dba7633e826bd1c8d144fda236a2a48","modified":1615274023168},{"_id":"themes/lemon-lime/source/compass/.sass-cache/17d03613c125918cd0766f51918feb21dc3c074a/_deprecated-support.scssc","hash":"e9cb4f8c3bce2c4276fd0d578bdbfd308696adf1","modified":1615274023068},{"_id":"themes/lemon-lime/source/compass/.sass-cache/17d03613c125918cd0766f51918feb21dc3c074a/_transform.scssc","hash":"8f57fa63a68d34b05cde728428f74ab3280501f0","modified":1615274023071},{"_id":"themes/lemon-lime/source/compass/.sass-cache/573835d864b4df5ce94e4258e1e431786e6d4972/_units.scssc","hash":"c2566ecb3c865e36bb499ce87c1cf104aca9215e","modified":1615274023074},{"_id":"themes/lemon-lime/source/compass/.sass-cache/573835d864b4df5ce94e4258e1e431786e6d4972/_vertical_rhythm.scssc","hash":"b59912a0fd7703420433793746d9ebb25cd4cd9d","modified":1615274023075},{"_id":"themes/lemon-lime/source/compass/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1615274023144},{"_id":"themes/lemon-lime/source/compass/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1615274023149},{"_id":"themes/lemon-lime/source/compass/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1615274023163},{"_id":"themes/lemon-lime/source/compass/.sass-cache/af1a5722249b61fe97c5776f7a26e0902a00f406/_support.scssc","hash":"98d15bf9db87658da250af484243e13fbfa7e8e7","modified":1615274023122},{"_id":"themes/lemon-lime/source/compass/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1615274023160},{"_id":"public/2021/03/09/hello-world/index.html","hash":"baf2ca3d8473a1de5a67fad2aa2ce93bc343665b","modified":1615290519718},{"_id":"public/index.html","hash":"cb9079bc99c1677a4be6ebe00048964ac2c8a3c7","modified":1624862481354},{"_id":"public/archives/index.html","hash":"7b8640453a1fd824ab211289bbf9b7e055ddb95b","modified":1624862481354},{"_id":"public/archives/2021/index.html","hash":"b82dee04d84774879b3d143b097d557af17085c8","modified":1624862481354},{"_id":"public/archives/2021/03/index.html","hash":"8786ad476936760de72631fe233a0ca877c8a0ee","modified":1624862481354},{"_id":"public/CNAME","hash":"004f867e327f98313b066dfca59497b644058832","modified":1615275556097},{"_id":"public/compass/config.rb","hash":"c97b6b15be8ca492e3fc774e32726bd2c7532b77","modified":1615275556097},{"_id":"public/compass/imgs/aLaptopWithDrink.png","hash":"6809bb6f568dd660789b2e957bdeac73ec787caf","modified":1615275556097},{"_id":"public/compass/imgs/logo.png","hash":"1d6aa38d9ad1600f0d4be661cd8a51f0f7540492","modified":1615275556097},{"_id":"public/compass/imgs/arrow.png","hash":"a5011ed6f917164aa3daa6820bcd35e231306954","modified":1615275556097},{"_id":"public/compass/imgs/fHangingClothes.png","hash":"949903dc566876ee76523d6ab631ede39de5fe1d","modified":1615275556097},{"_id":"public/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1624862481354},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1624862481354},{"_id":"public/compass/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1615275556097},{"_id":"public/compass/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1615275556097},{"_id":"public/compass/imgs/favicon.ico","hash":"028e8dbf3dba7633e826bd1c8d144fda236a2a48","modified":1615275556097},{"_id":"public/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1624862481354},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1624862481354},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1624862481354},{"_id":"public/compass/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1615275556097},{"_id":"public/compass/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1615275556097},{"_id":"public/compass/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1615275556097},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1624862481354},{"_id":"public/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1624862481354},{"_id":"public/compass/sass/ie.css","hash":"55d03cbe8dc4482082815585822d80503557fdcb","modified":1615275556097},{"_id":"public/compass/sass/screen.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1615275556097},{"_id":"public/compass/sass/print.css","hash":"5d4514803362274f0bd875bc5a9ba81d6e49dbb0","modified":1615275556097},{"_id":"public/compass/js/blog.js","hash":"54694f6a00f097d04a97f475f6a8fc993b35e068","modified":1615275556097},{"_id":"public/compass/stylesheets/ie.css","hash":"55d03cbe8dc4482082815585822d80503557fdcb","modified":1615275556097},{"_id":"public/compass/stylesheets/print.css","hash":"5d4514803362274f0bd875bc5a9ba81d6e49dbb0","modified":1615275556097},{"_id":"public/css/style.css","hash":"8baac59419bd5f861cabe242aa8a3e4758248632","modified":1624862481354},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1624862481354},{"_id":"public/compass/stylesheets/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1615275556097},{"_id":"public/compass/stylesheets/screen.css","hash":"a51352a9d0fb6960632e39b296fe904680959958","modified":1615275556097},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1624862481354},{"_id":"public/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1624862481354},{"_id":"public/compass/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1615275556097},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1624862481354},{"_id":"themes/pure/.gitignore","hash":"dbb41a2f30c98cb9de173d82736c46266c901cda","modified":1615276185332},{"_id":"themes/pure/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1615276185332},{"_id":"themes/pure/README.md","hash":"5861cec81712af9197a210fd5212d007aad8b0de","modified":1615276185332},{"_id":"themes/pure/_config.yml","hash":"7d70a817972b671014ce44b9058792d15ba65471","modified":1615276185333},{"_id":"themes/pure/README.cn.md","hash":"a634af4addbb57088935e060e8ec6035ea7bab76","modified":1615276185332},{"_id":"themes/pure/_config.yml.example","hash":"4714f87fdb6d4a6ea5ece84f4fe37f922337f14d","modified":1615276185333},{"_id":"themes/pure/package.json","hash":"a61723eead5cae2c4d9f0f05cf40d2de7c286fee","modified":1615276185355},{"_id":"themes/pure/languages/en.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1615276185337},{"_id":"themes/pure/languages/default.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1615276185337},{"_id":"themes/pure/languages/zh-CN.yml","hash":"057ebc043f09449af9768791c89c86dfc2938365","modified":1615276185337},{"_id":"themes/pure/languages/zh-TW.yml","hash":"6d27c3114be539b8783ffce944f68b2e26a8c3b9","modified":1615276185337},{"_id":"themes/pure/layout/about.ejs","hash":"4f5c769e183249b12eb9d3141432bc0039519730","modified":1615276185352},{"_id":"themes/pure/layout/archive.ejs","hash":"ded5d953b35666e30f4c6e48e2d2c62af8d95ebf","modified":1615276185352},{"_id":"themes/pure/layout/books.ejs","hash":"6c64719cd7071b5319b01339aa524fdaab391385","modified":1615276185352},{"_id":"themes/pure/layout/categories.ejs","hash":"22a2bc1712dd9ba1a3027e875d636132d334fb00","modified":1615276185353},{"_id":"themes/pure/layout/index.ejs","hash":"07825d8d8b21eb7b694f5585567b9df5c5a91a60","modified":1615276185353},{"_id":"themes/pure/layout/category.ejs","hash":"3ca5651bbce7b0c280c906468f2eb18c2e55ebcb","modified":1615276185353},{"_id":"themes/pure/layout/layout.ejs","hash":"a29ab2e881954a252bfc0dc1a7eb5aa52768dd2a","modified":1615276185354},{"_id":"themes/pure/layout/post.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1615276185354},{"_id":"themes/pure/layout/links.ejs","hash":"77c5d1561e2c606c5b3bb39610133d84324074df","modified":1615276185354},{"_id":"themes/pure/layout/page.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1615276185354},{"_id":"themes/pure/layout/repository.ejs","hash":"fe4b3e051a8b0debe9ee22c2cc2cc935d92ee23f","modified":1615276185354},{"_id":"themes/pure/layout/tags.ejs","hash":"29f19a6ed10f8b1f069259a7aeaaacddcfaa2ed4","modified":1615276185355},{"_id":"themes/pure/layout/tag.ejs","hash":"df60564c162f7ad3422f8959dfea19351857a7cd","modified":1615276185354},{"_id":"themes/pure/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1615276185375},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/bug_report.md","hash":"83d211c67c12e8c1f6e9f796cfd0cecbf5160e15","modified":1615276185331},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/custom.md","hash":"84208538d48505ee8e49812cb336eb9882e08dc7","modified":1615276185331},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/feature_request.md","hash":"f6867a2f0417fe89a0f2008730ee19dd38422021","modified":1615276185331},{"_id":"themes/pure/source/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1615276185388},{"_id":"themes/pure/_source/_data/links.yml","hash":"aa443a4508550820c77c2a4f6abff1d38ad85054","modified":1615276185334},{"_id":"themes/pure/_source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1615276185334},{"_id":"themes/pure/_source/about/index.md","hash":"9c95cabb533409d06daefc4295021ad199761efc","modified":1615276185334},{"_id":"themes/pure/_source/404/index.md","hash":"8d493f624fdd29c8d0266767e56f343d549e16d8","modified":1615276185333},{"_id":"themes/pure/_source/books/index.md","hash":"cf4163959c23244059cbbbc1c0fe379cc3b2cb73","modified":1615276185334},{"_id":"themes/pure/_source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1615276185335},{"_id":"themes/pure/_source/links/index.md","hash":"febcf87eb0ab3c5080578275d25f3970bba39625","modified":1615276185335},{"_id":"themes/pure/_source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1615276185336},{"_id":"themes/pure/_source/tags/index.md","hash":"42e9c904ea63b0a7dd4033e2e8f153225bc5cda5","modified":1615276185336},{"_id":"themes/pure/layout/_common/head.ejs","hash":"a48ef0fa22712b29ec044b9e5134461f3a21c10d","modified":1615276185338},{"_id":"themes/pure/layout/_common/header.ejs","hash":"3d739d1e2b2991927c08ec222db123830a44a519","modified":1615276185338},{"_id":"themes/pure/layout/_common/footer.ejs","hash":"cdc48ec70d9202b947f2a9334234d038d7014a7d","modified":1615276185338},{"_id":"themes/pure/layout/_common/script.ejs","hash":"0031114d2a58f8601c2869f78ceedc75a10be90d","modified":1615276185338},{"_id":"themes/pure/layout/_partial/archive-book.ejs","hash":"977f97f3636947006ad738e502858c46d4cd5ec7","modified":1615276185339},{"_id":"themes/pure/layout/_common/social.ejs","hash":"a35a2610e9da762df96587b76b51470507a88cad","modified":1615276185339},{"_id":"themes/pure/layout/_partial/archive-category.ejs","hash":"9c364fd6b5172890784141802f5f466241d233fd","modified":1615276185339},{"_id":"themes/pure/layout/_partial/archive-link.ejs","hash":"fe4d9bf526d8176683cea89b8561ced571374db0","modified":1615276185339},{"_id":"themes/pure/layout/_partial/archive-list.ejs","hash":"c66c86d6a6a90e00494c380603426fc0f4006311","modified":1615276185339},{"_id":"themes/pure/layout/_partial/archive-repository.ejs","hash":"e39dc762d9fe238cede462532e40eaa3d8651122","modified":1615276185340},{"_id":"themes/pure/layout/_partial/archive.ejs","hash":"4d6793f50d41fbd47dc50aa36b24d496006bba6c","modified":1615276185340},{"_id":"themes/pure/layout/_partial/archive-post.ejs","hash":"13039fec017332029122ef99901755fcecbfc8ea","modified":1615276185340},{"_id":"themes/pure/layout/_partial/article-about.ejs","hash":"7b80319daeb63401d1745b81cd9a6d1d21a4fb60","modified":1615276185340},{"_id":"themes/pure/layout/_partial/article.ejs","hash":"0f9b71de0087d1f777d92c5a0f3873971aec5a5b","modified":1615276185341},{"_id":"themes/pure/layout/_partial/pagination.ejs","hash":"41a319642da5af07d6cfb8525796aa610b721879","modified":1615276185341},{"_id":"themes/pure/layout/_partial/item-post.ejs","hash":"9f755b0da1ea928dece32c2050d8a04b3a9fb13b","modified":1615276185341},{"_id":"themes/pure/layout/_partial/sidebar.ejs","hash":"2aa8a9f90838e7c105e75e6d3d03cbf860bb1239","modified":1615276185345},{"_id":"themes/pure/layout/_partial/sidebar-about.ejs","hash":"e10ea0176ba87e64888234bafedc01c92544352c","modified":1615276185344},{"_id":"themes/pure/layout/_partial/sidebar-toc.ejs","hash":"152538ceceb0fdef65c46470ebf0189f7b891c5b","modified":1615276185345},{"_id":"themes/pure/layout/_script/analytics.ejs","hash":"e756a81f8c20a187fb863b9689f2f1fa15e2f4e1","modified":1615276185348},{"_id":"themes/pure/layout/_script/fancybox.ejs","hash":"8f1be01e70a15b2c31ae57d8c6bce54622ebf8a7","modified":1615276185348},{"_id":"themes/pure/layout/_script/comment.ejs","hash":"6f951510bab9dc15474b6664e0329defccf29a30","modified":1615276185348},{"_id":"themes/pure/layout/_script/mathjax.ejs","hash":"f618393ab971b2faa80d541f2e6a553d9ace9816","modified":1615276185348},{"_id":"themes/pure/layout/_script/douban.ejs","hash":"143087db0573772b0bdaf7f93312553158942ec7","modified":1615276185348},{"_id":"themes/pure/layout/_script/pv.ejs","hash":"fb9b5f16029f2ccef4b83cf4facfdcdd748b65b4","modified":1615276185349},{"_id":"themes/pure/layout/_search/baidu.ejs","hash":"67aab280a3ea34429f086cc5c3de7de17727c567","modified":1615276185349},{"_id":"themes/pure/layout/_search/index-mobile.ejs","hash":"c726e234c0166da69fdfbd3dd613a5eaf4c80258","modified":1615276185349},{"_id":"themes/pure/layout/_script/search.ejs","hash":"7be33dc260ce788aa1a2cd3bd0386d95057533cb","modified":1615276185349},{"_id":"themes/pure/layout/_script/repository.ejs","hash":"14f2e7d4c1055ff6a5f5867dc0e9a9f6f4c28fe1","modified":1615276185349},{"_id":"themes/pure/layout/_search/index.ejs","hash":"f8d5a9c3f777250f5fb6512bba585307f784d5cd","modified":1615276185350},{"_id":"themes/pure/layout/_search/insight.ejs","hash":"4af3e92ef98bedba9680d45699cb04dde4640536","modified":1615276185350},{"_id":"themes/pure/layout/_search/swiftype.ejs","hash":"4baeca36e410181300ae7d47ba1fb4755bcfcff0","modified":1615276185350},{"_id":"themes/pure/layout/_widget/archive.ejs","hash":"af8ad7f62877764b75d5272d9d899fd6c8e3845c","modified":1615276185350},{"_id":"themes/pure/layout/_widget/category.ejs","hash":"331b7642a0f58b9088b937436ab39076a4c5dd7e","modified":1615276185351},{"_id":"themes/pure/layout/_widget/board.ejs","hash":"acd27451be52703e670ce0b313f2da6fa24071e4","modified":1615276185351},{"_id":"themes/pure/layout/_widget/recent_posts.ejs","hash":"8942d60311797a591ba2d157c5cdd23e85ceb694","modified":1615276185351},{"_id":"themes/pure/layout/_widget/tag.ejs","hash":"487628925da5fcac91463cdad3d9e55d071bd5ed","modified":1615276185351},{"_id":"themes/pure/layout/_widget/tagcloud.ejs","hash":"3291108e5411c48b2c5b3e17adace6ffa90d1c29","modified":1615276185351},{"_id":"themes/pure/source/fonts/README.md","hash":"c5772b99ad81291fb137b330813f866bdceea0a3","modified":1615276185389},{"_id":"themes/pure/source/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1615276185390},{"_id":"themes/pure/source/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1615276185398},{"_id":"themes/pure/layout/_partial/archive-tag.ejs","hash":"5de90244c3cedad531cccc03c40e5f9a3aef3c61","modified":1615276185340},{"_id":"themes/pure/source/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1615276185398},{"_id":"themes/pure/source/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1615276185400},{"_id":"themes/pure/source/images/avatar.jpg","hash":"f86eafc318f3900319b25057811720168f24d248","modified":1615276185399},{"_id":"themes/pure/source/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1615276185401},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1615276185400},{"_id":"themes/pure/source/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1615276185401},{"_id":"themes/pure/source/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1615276185401},{"_id":"themes/pure/layout/_partial/post/category.ejs","hash":"fcee6b4aef8b6c4627831ff8dbb2d73478511426","modified":1615276185341},{"_id":"themes/pure/layout/_partial/post/comment.ejs","hash":"3c0da69fcea6ccfd97b82d50e740107a88eec5c4","modified":1615276185342},{"_id":"themes/pure/layout/_partial/post/copyright.ejs","hash":"a9d3d05428e5844a07706c7fcfeb842e44a36a64","modified":1615276185342},{"_id":"themes/pure/layout/_partial/post/date.ejs","hash":"7d4979652998abf92a64bfae8157b70d6e514057","modified":1615276185342},{"_id":"themes/pure/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1615276185343},{"_id":"themes/pure/layout/_partial/post/nav.ejs","hash":"95eabc0fe4033ec61b240a16eeaf7dc62a9e3da1","modified":1615276185343},{"_id":"themes/pure/layout/_partial/post/donate.ejs","hash":"a251dc34d660601a2e8b7d98b3bfe2b9023dbbce","modified":1615276185343},{"_id":"themes/pure/layout/_partial/post/pv.ejs","hash":"ec3ccf322432afc2761f860c5a3000ac34d46e4c","modified":1615276185343},{"_id":"themes/pure/layout/_partial/post/tag.ejs","hash":"39f53ead07f75c181a7ba93e586dd1b8171620f1","modified":1615276185344},{"_id":"themes/pure/layout/_partial/post/thumbnail.ejs","hash":"080d5c5f3e95accf51893a7092695fe32d34a087","modified":1615276185344},{"_id":"themes/pure/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1615276185344},{"_id":"themes/pure/layout/_partial/post/wordcount.ejs","hash":"bd06c4c8449ed96aabf655fe1ae3be1f0707b81e","modified":1615276185344},{"_id":"themes/pure/layout/_script/_analytics/baidu-analytics.ejs","hash":"f314be7860c1d5930f1600d010e3120ba5c85325","modified":1615276185345},{"_id":"themes/pure/layout/_script/_analytics/google-analytics.ejs","hash":"54f1dc9375cbdb65464e0ac1b58847aa5e8bc6a5","modified":1615276185345},{"_id":"themes/pure/layout/_script/_analytics/tencent-analytics.ejs","hash":"77defb41a1613a758ff5a6a5128c6107fc584190","modified":1615276185345},{"_id":"themes/pure/layout/_script/_comment/disqus.ejs","hash":"a051e3eddc75586e69131c29ab8c89d69626e0fd","modified":1615276185346},{"_id":"themes/pure/layout/_script/_comment/gitment.ejs","hash":"a64852076483395738a398deb4c10bdb0f3b7b71","modified":1615276185346},{"_id":"themes/pure/layout/_script/_comment/gitalk.ejs","hash":"fb01f1631c3ae7fe6211dc03233506cb344229be","modified":1615276185346},{"_id":"themes/pure/layout/_script/_comment/valine.ejs","hash":"acf81f9a59dc45f197d723f70484de5fcd166577","modified":1615276185347},{"_id":"themes/pure/layout/_script/_search/baidu.ejs","hash":"9b60ffa2e2725a993e9cecfb81ddedd9b9361011","modified":1615276185347},{"_id":"themes/pure/layout/_script/_comment/livere.ejs","hash":"5ab997d5ee4475d2f89f882fab4a52648dbe0e30","modified":1615276185346},{"_id":"themes/pure/layout/_script/_comment/youyan.ejs","hash":"095649a173573d03b5845c2e331ec7be976b152a","modified":1615276185347},{"_id":"themes/pure/layout/_script/_search/insight.ejs","hash":"3543c11d060feaf9381b5d87564b01ffef0e0a59","modified":1615276185347},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1615276185399},{"_id":"themes/pure/source/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1615276185399},{"_id":"themes/pure/screenshot/pure-theme-black.png","hash":"10b40f398af7eb7e8ba2bf2f2a959d8779fc1fe1","modified":1615276185356},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1615276185399},{"_id":"themes/pure/screenshot/pure-theme-blue.png","hash":"6146890a68d5ea9d343c48d50151ddd5a2a1872c","modified":1615276185357},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1615276185400},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1615276185400},{"_id":"themes/pure/screenshot/pure.png","hash":"8f4cfd8d7edfa4fbffdf375291302d9807f5cc1c","modified":1615276185360},{"_id":"themes/pure/screenshot/pure-theme-purple.png","hash":"9855d2eb0acd23370209354f232471df8f4f72e2","modified":1615276185359},{"_id":"themes/pure/screenshot/pure-theme-green.png","hash":"12ec0c6033cb2762839fdf75434bbb4fbf946022","modified":1615276185358},{"_id":"themes/pure/source/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1615276185406},{"_id":"themes/pure/source/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1615276185402},{"_id":"themes/pure/source/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1615276185408},{"_id":"themes/pure/source/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1615276185387},{"_id":"themes/pure/source/css/style.css","hash":"3b693ce41c2e35ece4773593e94b4c17aeaee02f","modified":1615276185383},{"_id":"themes/pure/source/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1615276185396},{"_id":"themes/pure/source/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1615276185407},{"_id":"themes/pure/screenshot/pure.psd","hash":"a31cea40b45bdc31f051fca2f1e2f4ecbaee1a94","modified":1615276185374},{"_id":"themes/iLiKE/source/js/iLiKE.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1615280422984},{"_id":"themes/iLiKE/LICENSE","hash":"574dd9612d1ac8f8eb021b38bedc378745054f9b","modified":1615280422975},{"_id":"themes/iLiKE/README.md","hash":"77d8087410063f7a9898094686d3be658c7ee0d6","modified":1615280422975},{"_id":"themes/iLiKE/_config.yml","hash":"c0d32d39670ec51fd101b4bb474a29880d8d1056","modified":1615280422975},{"_id":"themes/iLiKE/languages/en.yml","hash":"fb16c093569171bc1c812d1db2c5ab5279e32b07","modified":1615280422975},{"_id":"themes/iLiKE/languages/ru.yml","hash":"c3ad4fa0e45e0a957aa5849416561740bb14fc26","modified":1615280422976},{"_id":"themes/iLiKE/languages/ko.yml","hash":"6585f0e32d028545cebf7112b57e743023dbabf6","modified":1615280422975},{"_id":"themes/iLiKE/languages/ja.yml","hash":"fb13c0da2a155f32a352b097157c9571beb5b976","modified":1615280422975},{"_id":"themes/iLiKE/languages/zh-CN.yml","hash":"29f8ac66123266f73d10710872497f2907691372","modified":1615280422976},{"_id":"themes/iLiKE/layout/category.ejs","hash":"5a86afae1b2e7598f953248d6892ad6c8f4d860a","modified":1615280422976},{"_id":"themes/iLiKE/layout/index.ejs","hash":"33292a0593e9bff8a253ee01dfb433a4f934c6c5","modified":1615280422976},{"_id":"themes/iLiKE/layout/archive.ejs","hash":"4de60672fbac428f5a076a57e669cebc57c853ba","modified":1615280422976},{"_id":"themes/iLiKE/languages/zh-TW.yml","hash":"a83a73a8156605f353a30e3e597408aeeb170383","modified":1615280422976},{"_id":"themes/iLiKE/layout/layout.ejs","hash":"b4bb22cfc8ef397c68c5bcce857ae946de9fd62a","modified":1615280422976},{"_id":"themes/iLiKE/layout/page.ejs","hash":"7a87354d9375c50c72f25b7cfc5bf0345c19265e","modified":1615280422977},{"_id":"themes/iLiKE/layout/post.ejs","hash":"91cd8f310e9c125785fac63947fe64d941ac45fe","modified":1615280422978},{"_id":"themes/iLiKE/layout/partials/article.ejs","hash":"925941f255d5173332bdaed71a8afdc7b2c95f22","modified":1615280422977},{"_id":"themes/iLiKE/layout/tag.ejs","hash":"529edd9b41c37f42ea01321bfb38a7efe6e1b75f","modified":1615280422978},{"_id":"themes/iLiKE/layout/partials/footer.ejs","hash":"325c804e03edb63aec8e9744d7d9110a699ff448","modified":1615280422977},{"_id":"themes/iLiKE/layout/partials/counter.ejs","hash":"240622143d1971ce9387c8f2389abf059d2e2ea3","modified":1615280422977},{"_id":"themes/iLiKE/layout/partials/head.ejs","hash":"7aa8563a3d5df082d9cdb825ffffffecafd3f1a0","modified":1615280422977},{"_id":"themes/iLiKE/layout/partials/paginator.ejs","hash":"9ca74e2fe81aa14a9362dec9ab6e32811eeda9b9","modified":1615280422977},{"_id":"themes/iLiKE/layout/partials/recent-posts.ejs","hash":"f7889c43f4830fc0c91eb7fd47269980218a6ba3","modified":1615280422977},{"_id":"themes/iLiKE/layout/partials/header.ejs","hash":"2aece428b4d2f0e91c8e6914ecdfe93855c5dc73","modified":1615280422977},{"_id":"themes/iLiKE/source/favicon.ico","hash":"96b9a549337c2bec483c2879eeafa4d1f8748fed","modified":1615280422980},{"_id":"themes/iLiKE/layout/partials/social.ejs","hash":"4ac4410c1e4d2b0705e3c9882bb8a8bb96e8bf2a","modified":1615280422978},{"_id":"themes/iLiKE/source/css/archives.styl","hash":"a9c16f9a85a17ad47f5cd05c63a99c194a9aac1e","modified":1615280422978},{"_id":"themes/iLiKE/source/css/article.styl","hash":"f8146f30615dc781d8be4640a60c4fd825460ea2","modified":1615280422978},{"_id":"themes/iLiKE/source/css/footer.styl","hash":"9c8ba9597b41b51e7cc04062ef29c883fe0dd98a","modified":1615280422979},{"_id":"themes/iLiKE/source/css/heighlight.styl","hash":"fb4a84080d82f70095fcda8bfcbdd807d8694105","modified":1615280422979},{"_id":"themes/iLiKE/source/css/header.styl","hash":"9ab993db59221a639cec72f65ab4978300f6ba41","modified":1615280422979},{"_id":"themes/iLiKE/source/css/pagenator.styl","hash":"a198bd69e63ddcf380c5860780d377b08b69dae4","modified":1615280422980},{"_id":"themes/iLiKE/source/css/list.styl","hash":"a6dbca36c83d001cebba6ed5f213b921fa19b82b","modified":1615280422979},{"_id":"themes/iLiKE/source/css/iLiKE.styl","hash":"6c8c7070c89d426803a82d290965393a738fb30f","modified":1615280422979},{"_id":"themes/iLiKE/source/css/social.styl","hash":"0d2d3fd1b77a9d06655c26d3a08adf347bdd2c98","modified":1615280422980},{"_id":"themes/iLiKE/source/image/douban.png","hash":"2e35ecf810a67b87cbdd6b07ca201aca0431a1de","modified":1615280422982},{"_id":"themes/iLiKE/source/image/facebook.png","hash":"fc9b47c085a0934c4ce736373dc4c345795ced87","modified":1615280422982},{"_id":"themes/iLiKE/source/image/email.png","hash":"bc3e6cbf5e02d893c361ada7ca150f46adc29427","modified":1615280422982},{"_id":"themes/iLiKE/source/image/github.png","hash":"8f790f109041d18eeca60c143fed690ceb144798","modified":1615280422982},{"_id":"themes/iLiKE/source/image/google.png","hash":"bd7393e39e99f52acb6573338a347f31426554a6","modified":1615280422983},{"_id":"themes/iLiKE/source/image/instagram.png","hash":"a45c7e8b27e3d8d15dcbf7a02f0b8250e34628ab","modified":1615280422983},{"_id":"themes/iLiKE/source/image/pocket.png","hash":"7d24ef0dd4c94ed29317cf5c8f9dd7ca300ad991","modified":1615280422983},{"_id":"themes/iLiKE/source/image/jianshu.png","hash":"f41fce0ef0abc9f6c9073c7cb6260d706ae64859","modified":1615280422983},{"_id":"themes/iLiKE/source/image/linkedin.png","hash":"84d7e0deb82a1a49fba3343c32127a17024538f1","modified":1615280422983},{"_id":"themes/iLiKE/source/image/tumblr.png","hash":"d35b6c2646ca1393ba8c572c47aa68c5b3923544","modified":1615280422984},{"_id":"themes/iLiKE/source/image/stack-overflow.png","hash":"b4f0371659ec6b005eb5938401b35122e32b2509","modified":1615280422983},{"_id":"themes/iLiKE/source/image/twitter.png","hash":"4595f3aead466b685987d56f4bb7dbf224a57c56","modified":1615280422984},{"_id":"themes/iLiKE/source/image/zhihu.png","hash":"4e6e90aab703f9f70bbc6404c69768afe434b186","modified":1615280422984},{"_id":"themes/iLiKE/source/image/weibo.png","hash":"f9e49f7337c42dd1a611994b917e67f9325e68cb","modified":1615280422984},{"_id":"themes/iLiKE/source/image/Hexo.png","hash":"ed62c12c927dd82a141ebd318db98210ab008ad5","modified":1615280422982},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/README.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1615281226840},{"_id":"themes/hexo-theme-huxblog/.gitignore","hash":"a006beea0877a0aa3610ee00e73f62cb1d45125b","modified":1615281226820},{"_id":"themes/hexo-theme-huxblog/README.md","hash":"712be94104bea7c84d861f4eb158ede4fc92dba2","modified":1615281226820},{"_id":"themes/hexo-theme-huxblog/_config.yml","hash":"17b6db6f20986d5a27ac84b1f945167eabbb97d4","modified":1615281226821},{"_id":"themes/hexo-theme-huxblog/package.json","hash":"dfc9e2a6c4aafb755ff94725cea758190767e917","modified":1615281335737},{"_id":"themes/hexo-theme-huxblog/scaffolds/draft.md","hash":"204ab550ddffa92051ea0eb2484a78d84dac3693","modified":1615281226821},{"_id":"themes/hexo-theme-huxblog/scaffolds/post.md","hash":"e7169dab8ce62d41e3734e30706fa786cc7d46f4","modified":1615281226821},{"_id":"themes/hexo-theme-huxblog/scaffolds/page.md","hash":"f0af1cb10f27d859caa51c8e3704469d9ed842a6","modified":1615281226821},{"_id":"themes/hexo-theme-huxblog/source/404.md","hash":"83c2c6d587beaa967a976e5969d60fa97fcdbe55","modified":1615281226822},{"_id":"themes/hexo-theme-huxblog/source/_posts/hello-2015.markdown","hash":"999910c6056e2f2d680e668fac2621db196cf7c0","modified":1615281226822},{"_id":"themes/hexo-theme-huxblog/source/_posts/js-module-7day.markdown","hash":"e2ad67488d6e38c6844a7203f8c89918847c221f","modified":1615281226823},{"_id":"themes/hexo-theme-huxblog/source/about/index.md","hash":"900b72df10ceb5337e4be7bbb51d077a2b901ba4","modified":1615281226829},{"_id":"themes/hexo-theme-huxblog/source/_posts/js-version.markdown","hash":"325424f7d638c817164b8e977ba2ef2b18876444","modified":1615281226826},{"_id":"themes/hexo-theme-huxblog/source/archives/index.md","hash":"f30bcd9cd0fbe690c2398f21dbf27e56c0c72499","modified":1615281226830},{"_id":"themes/hexo-theme-huxblog/source/_posts/unix-linux-note.markdown","hash":"4f9eefe870a1291f469eef2b2603357c3f1da924","modified":1615281226828},{"_id":"themes/hexo-theme-huxblog/source/img/favicon.ico","hash":"a8ee7712f6560180efccb68546de6ea0d937fff3","modified":1615281226835},{"_id":"themes/hexo-theme-huxblog/source/img/avatar.jpg","hash":"49cfa597392c4a116584c07690efbbc06354acc7","modified":1615281226834},{"_id":"themes/hexo-theme-huxblog/source/_posts/js-module-loader.markdown","hash":"a9bb15f756fed8464a52a5f7131336b27715a34d","modified":1615281226824},{"_id":"themes/hexo-theme-huxblog/source/tags/index.md","hash":"0bc541f4c6a0f21bec67b6717ee86226f0eddf39","modified":1615281226839},{"_id":"themes/hexo-theme-huxblog/source/img/icon_wechat.png","hash":"7fdb00c9017236e05c1b3e6da38a2cc382fd69fa","modified":1615281226838},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/LICENSE","hash":"2b209f06bebeb2a8c2b7e187e436f3e1e1fbc8a7","modified":1615281226840},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/_config.yml","hash":"5d235aa7716657282795ee86d9c9db2374197a66","modified":1615281226840},{"_id":"themes/hexo-theme-huxblog/source/_posts/js-version/keep-calm-and-learn-javascript.png","hash":"49ea101b92ce5e136a19e6b11162f8f4126fe01f","modified":1615281226827},{"_id":"themes/hexo-theme-huxblog/source/_posts/js-version/post-bg-js-version.jpg","hash":"1598a1180c491f36b9036415b622bd9e5ad5d3bc","modified":1615281226828},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/layout/about.ejs","hash":"7f56c71383ef6c156b56d79b3984e07cc466606a","modified":1615281226843},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/layout/archives.ejs","hash":"f0046e58cc1dd876133be2bf927aed2b1821cb3e","modified":1615281226843},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/layout/404.ejs","hash":"a4d73541a53e56b7dd46249c6d27cb59f4d97422","modified":1615281226842},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/layout/archive.ejs","hash":"6c3ed5d914379319efe835a4aa505abbc616c328","modified":1615281226843},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/layout/layout.ejs","hash":"03e278a3b8bc4503183276b6130ac04a8d5b9865","modified":1615281226844},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/layout/post.ejs","hash":"fd68124c3de2bbe7d870cecadcf684df7cf82519","modified":1615281226844},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/layout/index.ejs","hash":"70ac58c46625300a70791e210daf446afa6d1cd4","modified":1615281226843},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/layout/keynote.ejs","hash":"f5689862281e34dbe8402b0e72f632902e53e88b","modified":1615281226843},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/layout/page.ejs","hash":"3fde0787e883274563f9de5aaeb8130b667e132a","modified":1615281226844},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/layout/tags.ejs","hash":"a51bf2828af20939d702de1fdae067439a1153c0","modified":1615281226844},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/languages_to_be_added/de.yml","hash":"424a9c1e6ab69334d7873f6574da02ca960aa572","modified":1615281226840},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/languages_to_be_added/no.yml","hash":"8ca475a3b4f8efe6603030f0013aae39668230e1","modified":1615281226841},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/languages_to_be_added/pl.yml","hash":"de7eb5850ae65ba7638e907c805fea90617a988c","modified":1615281226841},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/languages_to_be_added/default.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1615281226840},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/languages_to_be_added/ru.yml","hash":"42df7afeb7a35dc46d272b7f4fb880a9d9ebcaa5","modified":1615281226841},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/languages_to_be_added/en.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1615281226841},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/languages_to_be_added/es.yml","hash":"cb4eeca0ed3768a77e0cd216300f2b2549628b1b","modified":1615281226841},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/languages_to_be_added/zh-CN.yml","hash":"7bfcb0b8e97d7e5edcfca8ab26d55d9da2573c1c","modified":1615281226841},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/layout/_partial/head.ejs","hash":"87c544a64ea49b835330135a616deb2e9fd39bbb","modified":1615281226842},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/layout/_partial/nav.ejs","hash":"4c905166c960852e9b9a3c9d5c680091e37b481f","modified":1615281226842},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/layout/_partial/pagination.ejs","hash":"557d6bb069a1d48af49ae912994653f44b32a570","modified":1615281226842},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/languages_to_be_added/zh-TW.yml","hash":"9acac6cc4f8002c3fa53ff69fb8cf66c915bd016","modified":1615281226841},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/layout/_partial/footer.ejs","hash":"e325a9953abc1a3751aa1a927bc3ecbdd627803a","modified":1615281226842},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/source/css/hux-blog.css","hash":"c1b0a32ad8075ac09d99fb4d64a9fbc84163abf8","modified":1615281226846},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/source/css/highlight.styl","hash":"e842080e6d580f0f70a7df71fbde3c4e49463c19","modified":1615281226846},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/source/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1615281226847},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/source/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1615281226847},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/source/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1615281226849},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/source/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1615281226850},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/source/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1615281226851},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/source/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1615281226852},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/source/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1615281226852},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/source/js/hux-blog.min.js","hash":"1563e7f70550ac6b30803d6f449719b853200e35","modified":1615281226853},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/source/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1615281226855},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/source/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1615281226855},{"_id":"themes/hexo-theme-huxblog/source/img/tag-bg.jpg","hash":"8844274a812ae19e8f2a3b7e4e465342e63eb852","modified":1615281226839},{"_id":"themes/hexo-theme-huxblog/source/_posts/js-module-loader/post-bg-js-module.jpg","hash":"4a43bfa6b69c79a6ef90bd852fe5756d241733cd","modified":1615281226825},{"_id":"themes/hexo-theme-huxblog/source/_posts/js-version/javascript-java.jpg","hash":"881e35e241a8be40f3c4e3a6f57d5402247c1eb3","modified":1615281226827},{"_id":"themes/hexo-theme-huxblog/source/_posts/unix-linux-note/post-bg-unix-linux.jpg","hash":"e8f3739cb78ea6d1645665d07ebdb79881774fb6","modified":1615281226829},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/source/css/bootstrap.min.css","hash":"973e37a8502921d56bc02bb55321f45b072b6f71","modified":1615281226846},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/source/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1615281226848},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/source/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1615281226852},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/source/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1615281226855},{"_id":"themes/hexo-theme-huxblog/source/img/404-bg.jpg","hash":"68f7d525269a94287e0ad18713ae232fb59dcf71","modified":1615281226832},{"_id":"themes/hexo-theme-huxblog/source/img/home-bg-o.jpg","hash":"990f6f9dd0ecb5348bfcc47305553d58c0d8f326","modified":1615281226837},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/source/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1615281226845},{"_id":"themes/hexo-theme-huxblog/source/img/home-bg.jpg","hash":"a191201c3a98728e6ea66d6827df827ecfcc9d33","modified":1615281226838},{"_id":"themes/hexo-theme-huxblog/source/img/contact-bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1615281226835},{"_id":"themes/hexo-theme-huxblog/source/_posts/hello-2015/post-bg-2015.jpg","hash":"7118d1af8ac638dc55ee63d0b17e704811c6a37a","modified":1615281226823},{"_id":"themes/hexo-theme-huxblog/themes/huxblog/source/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1615281226854},{"_id":"themes/hexo-theme-huxblog/source/img/about-bg.jpg","hash":"b5814b2d10eb38dfda0072365567f3823bc34aba","modified":1615281226833},{"_id":"themes/hexo-theme-huxblog/package-lock.json","hash":"154eaa2ce05aae221902b694687c7103c280c64b","modified":1615281335807},{"_id":"themes/keep/.editorconfig","hash":"a1c91f0a086bf92fddb02ccf23578ec2b51c099c","modified":1615281394891},{"_id":"themes/keep/.gitignore","hash":"b49daa26b8121cc0c7074d61b377c8e7e0880d03","modified":1615281394891},{"_id":"themes/keep/_config.yml","hash":"16f19f1c8dd028b3d4288c4f29e0b1d2b6728f2c","modified":1624861594361},{"_id":"themes/keep/README.md","hash":"f1f4cec957dced139cfbfe4fefcdc5cb438d4bfc","modified":1615281394892},{"_id":"themes/keep/README_zh-CN.md","hash":"4c81a27599e592610ba4f2a5520fe422c448e7fd","modified":1615281394892},{"_id":"themes/keep/LICENSE","hash":"98b8bd28e54ab36ee12396687dfdf88807c6cfdd","modified":1615281394892},{"_id":"themes/keep/package.json","hash":"42ad8ba126932f1890d06960a54b9161257e069d","modified":1615281394902},{"_id":"themes/keep/languages/zh-CN.yml","hash":"de8aec3e9960fa489c0a290cda825dfc1e7528dd","modified":1615281394894},{"_id":"themes/keep/languages/en.yml","hash":"e4f42cfda0ed6ea1715d28fd4b1bba6f89b8cdb0","modified":1615281394893},{"_id":"themes/keep/layout/archive.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1615281394899},{"_id":"themes/keep/layout/article-content.ejs","hash":"ae9fc0712b89af58e80b6c6daf749d01624c4a3c","modified":1615281394899},{"_id":"themes/keep/layout/archive-content.ejs","hash":"cfa8f29b8863534f407136ea3deb18a4b2ff722c","modified":1615281394899},{"_id":"themes/keep/layout/category-list.ejs","hash":"a9390b25238332417fd554d32563a4d9999db90f","modified":1615281394900},{"_id":"themes/keep/layout/category.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1615281394900},{"_id":"themes/keep/layout/category-content.ejs","hash":"aef0c90a395f909be7d2c358eb41d5558a10406f","modified":1615281394900},{"_id":"themes/keep/layout/page.ejs","hash":"4bf34f19bcf18efb5f6e76fcbe7cd36b25ceee6a","modified":1615281394901},{"_id":"themes/keep/layout/home-content.ejs","hash":"79e16c3baa6569afbc07ac6a5d2e3f37b273016a","modified":1615281394900},{"_id":"themes/keep/layout/index.ejs","hash":"f5fee4e079a9c2c23059ebde4cd89ec723e310c6","modified":1615281394900},{"_id":"themes/keep/layout/layout.ejs","hash":"da9dbeba541ad19fed35c41fe187f4016e41f0db","modified":1615281394901},{"_id":"themes/keep/layout/tag-content.ejs","hash":"ce4c8192a4ccd6a626af412a7ba258d1edbc0b95","modified":1615281394902},{"_id":"themes/keep/layout/tag.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1615281394902},{"_id":"themes/keep/scripts/use-source-data.js","hash":"21f6a49e47b7e4d792d67503079ea5b509f18311","modified":1615281394903},{"_id":"themes/keep/layout/_partial/archive-list.ejs","hash":"7c33e49286d54824cd8f3483e30de5579951edc6","modified":1615281394894},{"_id":"themes/keep/layout/_partial/article-copyright-info.ejs","hash":"77e13720374efb902ee3d4d04d13b62de033a3ae","modified":1615281394894},{"_id":"themes/keep/layout/tags.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1615281394902},{"_id":"themes/keep/layout/_partial/article-meta-info.ejs","hash":"54f77621034e39809911a184f15006ce80e0f67b","modified":1615281394894},{"_id":"themes/keep/layout/_partial/first-screen.ejs","hash":"106683de71f01b368c6f0c5417952b54fcdc9611","modified":1615281394895},{"_id":"themes/keep/layout/_partial/friends-link.ejs","hash":"b3dd2feb168c81332845051fe60e9a94cff7fd9a","modified":1615281394896},{"_id":"themes/keep/layout/_partial/footer.ejs","hash":"0b00a5b13d71d5f616079fb8d3a7ce66db36c5e9","modified":1615281394896},{"_id":"themes/keep/layout/_partial/head.ejs","hash":"03eb99b95500c8b2daa7f469aed4f4515f5e994e","modified":1615281394896},{"_id":"themes/keep/layout/_partial/header.ejs","hash":"8f2d389c6db5c9e8e6d30fb1579d99ee1660a485","modified":1615281394896},{"_id":"themes/keep/layout/_partial/home-article-meta-info.ejs","hash":"0aceb1c7c29b65bd5fc2d79a285a564da8c09b63","modified":1615281394896},{"_id":"themes/keep/layout/_partial/image-viewer.ejs","hash":"beb3dec5e08856a29d585fe0eb94a8a6ddade4dd","modified":1615281394897},{"_id":"themes/keep/layout/_partial/local-search.ejs","hash":"6fbcc0a14467da8362a2eaa490d84acb1336d21b","modified":1615281394897},{"_id":"themes/keep/layout/_partial/page-template.ejs","hash":"8fd596f871326b03e707d7defcc96f639cdd628e","modified":1615281394897},{"_id":"themes/keep/layout/_partial/post-tools.ejs","hash":"e8a303fa393a1716c5ff1f731923781eb12322ab","modified":1615281394898},{"_id":"themes/keep/layout/_partial/paginator.ejs","hash":"cfd4d9a30bd20ee0750b79226cb94562439013bf","modified":1615281394897},{"_id":"themes/keep/layout/_partial/progress-bar.ejs","hash":"44af04816b86546e0260e73c2df61353e7404208","modified":1615281394898},{"_id":"themes/keep/layout/_partial/scripts.ejs","hash":"ad75de7966c4d9d923c9ac8cfbfe26b38fbe7aed","modified":1615281394898},{"_id":"themes/keep/scripts/filters/lazyload-handle.js","hash":"2eb08e3b66b57deed5a8645eb804fede0253317d","modified":1615281394902},{"_id":"themes/keep/layout/_partial/side-tools.ejs","hash":"e55d2034d7e2b8b0c1bd5ac7fdc56ffb8bbd4e60","modified":1615281394898},{"_id":"themes/keep/scripts/filters/link-handle.js","hash":"b39cfa42d156b7ad4d4e8246b6f934cd51d8db55","modified":1615281394903},{"_id":"themes/keep/scripts/helpers/export-config.js","hash":"e7c5417a1cd61f0b7c3f97030d4a77419c41b8a5","modified":1615281394903},{"_id":"themes/keep/scripts/helpers/helper.js","hash":"0d2dd8ed72f38d627aefa0a969152f7dcc87b3d3","modified":1615281394903},{"_id":"themes/keep/layout/_partial/tagcloud.ejs","hash":"5968618b53a029922f2255b0c76bf8a9f11712ff","modified":1615281394899},{"_id":"themes/keep/layout/_partial/toc.ejs","hash":"aefc9db612c0fceb4a02fdbed9fa47a6c4e144b5","modified":1615281394899},{"_id":"themes/keep/source/css/font-awesome.min.css","hash":"c508528feb9fd540454f838653cd4863b290df2e","modified":1615281394906},{"_id":"themes/keep/source/images/avatar.svg","hash":"59aab758225591324e94d763344ac38eba39d586","modified":1615282919806},{"_id":"themes/keep/source/css/style.styl","hash":"77b61baccadc3f71d1d06598f5c2b7fc506d77d4","modified":1615281394910},{"_id":"themes/keep/source/images/bg.svg","hash":"f3106cd334dc2ceef885c19012bf59a48498af42","modified":1615281394911},{"_id":"themes/keep/source/images/loading.svg","hash":"eedfa204e08a60ca5c80c620cfe9a3eaa6201585","modified":1615281394911},{"_id":"themes/keep/source/images/logo.svg","hash":"b618728f9964a5698b1dc2548db35b3d06dd115f","modified":1615281394911},{"_id":"themes/keep/source/webfonts/fa-regular-400.eot","hash":"2baa9a8aa68f1d2d4712b3c7205f9105aaf21879","modified":1615281394923},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff2","hash":"fb9648469530a05fa9aac80e47d4d6960472a242","modified":1615281394924},{"_id":"themes/keep/source/webfonts/fa-regular-400.ttf","hash":"d64e58981a419de52bac110c979887d34e366135","modified":1615281394924},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff","hash":"26afc29d39ab9fac6d0b607be7e76db093ff7c3a","modified":1615281394924},{"_id":"themes/keep/source/js/back2top.js","hash":"fc8e85f6704e39ae3a613bbec5dd51d449be8010","modified":1615281394911},{"_id":"themes/keep/source/js/code-copy.js","hash":"3fdabac26f6406a4592336f1f444ec966201b5d9","modified":1615281394911},{"_id":"themes/keep/source/js/dark-light-toggle.js","hash":"223e6f1d4e6e70956e4661b58c430e1c68def125","modified":1615281394912},{"_id":"themes/keep/source/js/header-shrink.js","hash":"167b9b6a9ed63c6cf4081cb3c201dd16bbbfb9ad","modified":1615281394912},{"_id":"themes/keep/source/js/lazyload.js","hash":"95aad532f17d7a8119979fc61ade9e626308a2af","modified":1615281394912},{"_id":"themes/keep/source/js/left-side-toggle.js","hash":"618f7cfc45db4d82b2f1d00d8e9ee936bcf9043b","modified":1615281394912},{"_id":"themes/keep/source/js/local-search.js","hash":"9509ec6d2d7d4466fe37ad624cf606f6639fb3fe","modified":1615281394913},{"_id":"themes/keep/source/js/main.js","hash":"ca8ed228cc0bc234be74428d029cfd047eec0ed6","modified":1615281394913},{"_id":"themes/keep/layout/_partial/comment/gitalk.ejs","hash":"28a0c8b1da66a9b6863e5444aa0b50c8f6b862f0","modified":1615281394895},{"_id":"themes/keep/source/js/toc.js","hash":"ae69bf65d2b30d299b6ca9e2361d3b6e0db3a077","modified":1615281394913},{"_id":"themes/keep/source/js/utils.js","hash":"47c6d222a116498359345777aea383c429975abf","modified":1615281394914},{"_id":"themes/keep/layout/_partial/comment/comment.ejs","hash":"4a7294bbe9aa4be22878e8a638668ed7ade25e2c","modified":1615281394895},{"_id":"themes/keep/source/css/common/animated.styl","hash":"982afcd440646eff077834e42bb03405a8aab637","modified":1615281394904},{"_id":"themes/keep/layout/_partial/comment/twikoo.ejs","hash":"92d858874543c4ba149acd04374d84e784ba0aaf","modified":1615281394895},{"_id":"themes/keep/layout/_partial/comment/valine.ejs","hash":"467cafd412837af791b4c353646cf44ac4458a3f","modified":1615281394895},{"_id":"themes/keep/source/css/common/basic.styl","hash":"c568ed052e2f67f07db816ccf7463965030308c3","modified":1615281394904},{"_id":"themes/keep/layout/_partial/pjax/pjax.ejs","hash":"2060f13718b4c9f79f52de7e47ce262f06c19bd0","modified":1615281394897},{"_id":"themes/keep/source/css/common/keep-theme.styl","hash":"9b6bf080299102571a6667ca99a62f53c9684246","modified":1615281394905},{"_id":"themes/keep/source/css/layout/archive-content.styl","hash":"515ebe2a251f3b53f0cf130cdc48b8bb1fb85952","modified":1615281394910},{"_id":"themes/keep/source/css/common/markdown.styl","hash":"3988a07792cb5f05d03e6f406b802c8278bb5f41","modified":1615281394905},{"_id":"themes/keep/source/css/layout/category-content.styl","hash":"638c3b50d8203c76106f3010fbfeed9a29bfde5c","modified":1615281394910},{"_id":"themes/keep/source/css/common/variables.styl","hash":"7a3e118d0259084a257327ed6d89f2ceeac6d51f","modified":1615281394905},{"_id":"themes/keep/source/css/layout/home-content.styl","hash":"2f2ee2f70020cf5e2ffb5612607bd58772e785a4","modified":1615281394910},{"_id":"themes/keep/source/css/layout/article-content.styl","hash":"327bb874968feaa981093c3f218b48aa34cd1d44","modified":1615281394910},{"_id":"themes/keep/source/css/layout/tag-content.styl","hash":"0d1cc0cc0d263f55b9c7245c1dc023abdcfcd69f","modified":1615281394910},{"_id":"themes/keep/source/css/layout/category-list.styl","hash":"bea0a03fe3de16ed08e7b3b541a46d2074561841","modified":1615281394910},{"_id":"themes/keep/source/js/libs/pjax.min.js","hash":"57ec40cb4898d7ba74a03603d608af378e5431f8","modified":1615281394913},{"_id":"themes/keep/source/css/common/codeblock/highlight.styl","hash":"64ea39fa5503f6c5a21a9ed7c9d3d5103cccad5a","modified":1615281394905},{"_id":"themes/keep/source/css/layout/_partial/article-copyright-info.styl","hash":"6eaa067231bd9e9faa5de2260b8974142faae510","modified":1615281394906},{"_id":"themes/keep/source/css/common/codeblock/code-theme.styl","hash":"fd81f8a76ae4f55bf5da38116bbc4f0e973daad2","modified":1615281394904},{"_id":"themes/keep/source/css/common/codeblock/copy-code.styl","hash":"1edcb0ece1bf4b9838c1937e98eaa845de7f4b3b","modified":1615281394904},{"_id":"themes/keep/source/css/layout/_partial/archive-list.styl","hash":"95c41684691a849d102c5a30efb365300d3d5c6d","modified":1615281394906},{"_id":"themes/keep/source/css/layout/_partial/article-meta-info.styl","hash":"91bf4f2f58217c0d0c6d51ad4792e5e0a00c3165","modified":1615281394907},{"_id":"themes/keep/source/css/layout/_partial/image-viewer.styl","hash":"59525fcc1f88c78abf8c1f0b06e24b16a088698c","modified":1615281394908},{"_id":"themes/keep/source/css/layout/_partial/local-search.styl","hash":"98aa2e22f16b98b2ffdbf36e1ea24363f8e5045b","modified":1615281394908},{"_id":"themes/keep/source/css/layout/_partial/first-screen.styl","hash":"ca67e175a033263256ca3f547747fa413d1c217f","modified":1624861820407},{"_id":"themes/keep/source/css/layout/_partial/header.styl","hash":"4d77c69a897df137b8a1a0c451e95e6aad7d2ad7","modified":1615281394908},{"_id":"themes/keep/source/css/layout/page.styl","hash":"f58cede20abbf250dfe7d38f594632c5b46a61e9","modified":1615281394910},{"_id":"themes/keep/source/css/layout/_partial/page-template.styl","hash":"27d1e19691867a09283facd2983afb9a3404e999","modified":1615281394908},{"_id":"themes/keep/source/css/layout/_partial/paginator.styl","hash":"da5df38b09138af28cb8b3fe9a05aeda9dae5011","modified":1615281394908},{"_id":"themes/keep/source/css/layout/_partial/post-tools.styl","hash":"f78a13e3b03b19cb72b03db0a5659f8c734e742e","modified":1615281394909},{"_id":"themes/keep/source/css/layout/_partial/tagcloud.styl","hash":"61016e73c8e420c74800b3afdbd6c2f890400e51","modified":1615281394909},{"_id":"themes/keep/source/css/layout/_partial/progress-bar.styl","hash":"a64df5515c60a3a0993c427dc50facee33215f2b","modified":1615281394909},{"_id":"themes/keep/source/css/layout/_partial/side-tools.styl","hash":"a68a1e3f21da63ee2d387035e91f9f60e956e234","modified":1615281394909},{"_id":"themes/keep/source/css/layout/_partial/comment/twikoo.styl","hash":"5844874c50a93239031e58b23856698ca9af2725","modified":1615281394907},{"_id":"themes/keep/source/css/layout/_partial/toc.styl","hash":"029ac31a21203a8b86027e67a3ff3a977579325d","modified":1615281394909},{"_id":"themes/keep/source/css/layout/_partial/comment/comment.styl","hash":"f6d9a37520566e38738fc1184ed76817273c3ee5","modified":1615281394907},{"_id":"themes/keep/source/js/libs/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1615281394912},{"_id":"themes/keep/source/css/layout/_partial/footer.styl","hash":"19a8fc0a01bf1efed637e90530c412d57137dfc4","modified":1615281394908},{"_id":"themes/keep/source/css/layout/_partial/comment/gitalk.styl","hash":"b8fccd13e2753c9fe891fb88a6413087048ab830","modified":1615281394907},{"_id":"themes/keep/source/css/layout/_partial/comment/valine.styl","hash":"6b0c7d69fc3f819610576b41e987ec655411ca44","modified":1615281394907},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff","hash":"a42ac4a94f4e0e9333cdb1b2fb6c13c0ae690ff2","modified":1615281394922},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff2","hash":"f726c4275bb494a045fde059175f072de06c01df","modified":1615281394922},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff","hash":"3b86a0ce15d8d534b65e98560e321a933d310688","modified":1615281394934},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff2","hash":"9b592048b9062b00f0b2dd782d70a95b7dc69b83","modified":1615281394935},{"_id":"themes/keep/source/webfonts/fa-brands-400.ttf","hash":"9b49c6c5b0cbdef158ae31b2a4e4814555408389","modified":1615281394921},{"_id":"themes/keep/source/webfonts/fa-brands-400.eot","hash":"c719f4375679ee58e156434f9ba9727be669cf07","modified":1615281394915},{"_id":"themes/keep/source/webfonts/fa-regular-400.svg","hash":"c41a688158d577e3a2738137992d49b05b17ab8f","modified":1615281394923},{"_id":"themes/keep/source/webfonts/fa-solid-900.eot","hash":"c39b89f7fa7b66931ab02a54002db5ffcbff206c","modified":1615281394926},{"_id":"themes/keep/source/webfonts/fa-solid-900.ttf","hash":"d537bf4cc7273ddb3fd754d53f2b241aeafaefe7","modified":1615281394934},{"_id":"themes/keep/source/webfonts/fa-brands-400.svg","hash":"69a0ff79a9d93a451e9fa90bd79ae7008d2a9da5","modified":1615281394920},{"_id":"themes/keep/source/webfonts/fa-solid-900.svg","hash":"36de6a298660ed3feaab37900f7b28c3e981d80e","modified":1615281394931},{"_id":"themes/keep/source/images/bp.jpeg","hash":"18a96ea39d45d41cf645a42f753b8b24ac67a8b2","modified":1614657556321},{"_id":"themes/keep/source/images/golang.svg","hash":"59aab758225591324e94d763344ac38eba39d586","modified":1615282919806},{"_id":"public/baidusitemap.xml","hash":"70d78466a85de1ff45a3fd13b0d42fcfc782baa9","modified":1624862481354},{"_id":"public/content.json","hash":"09ddb225d1724c11f05001f50dfb3167161c3c54","modified":1624862481354},{"_id":"public/sitemap.xml","hash":"0ca567744da5e6ac8143849d6d5d0f14a14d737d","modified":1624862481354},{"_id":"public/atom.xml","hash":"b0eafe396e116ac3f669cf84bda02a91b6fe6b24","modified":1624862481354},{"_id":"public/images/avatar.svg","hash":"59aab758225591324e94d763344ac38eba39d586","modified":1624862481354},{"_id":"public/images/bg.svg","hash":"f3106cd334dc2ceef885c19012bf59a48498af42","modified":1624862481354},{"_id":"public/images/loading.svg","hash":"eedfa204e08a60ca5c80c620cfe9a3eaa6201585","modified":1624862481354},{"_id":"public/webfonts/fa-regular-400.eot","hash":"2baa9a8aa68f1d2d4712b3c7205f9105aaf21879","modified":1624862481354},{"_id":"public/webfonts/fa-regular-400.ttf","hash":"d64e58981a419de52bac110c979887d34e366135","modified":1624862481354},{"_id":"public/webfonts/fa-regular-400.woff","hash":"26afc29d39ab9fac6d0b607be7e76db093ff7c3a","modified":1624862481354},{"_id":"public/webfonts/fa-regular-400.woff2","hash":"fb9648469530a05fa9aac80e47d4d6960472a242","modified":1624862481354},{"_id":"public/images/golang.svg","hash":"59aab758225591324e94d763344ac38eba39d586","modified":1616738011397},{"_id":"public/webfonts/fa-brands-400.woff","hash":"a42ac4a94f4e0e9333cdb1b2fb6c13c0ae690ff2","modified":1624862481354},{"_id":"public/webfonts/fa-brands-400.woff2","hash":"f726c4275bb494a045fde059175f072de06c01df","modified":1624862481354},{"_id":"public/webfonts/fa-solid-900.woff2","hash":"9b592048b9062b00f0b2dd782d70a95b7dc69b83","modified":1624862481354},{"_id":"public/webfonts/fa-solid-900.woff","hash":"3b86a0ce15d8d534b65e98560e321a933d310688","modified":1624862481354},{"_id":"public/webfonts/fa-brands-400.eot","hash":"c719f4375679ee58e156434f9ba9727be669cf07","modified":1624862481354},{"_id":"public/webfonts/fa-brands-400.ttf","hash":"9b49c6c5b0cbdef158ae31b2a4e4814555408389","modified":1624862481354},{"_id":"public/webfonts/fa-regular-400.svg","hash":"c41a688158d577e3a2738137992d49b05b17ab8f","modified":1624862481354},{"_id":"public/js/back2top.js","hash":"fc8e85f6704e39ae3a613bbec5dd51d449be8010","modified":1624862481354},{"_id":"public/js/code-copy.js","hash":"3fdabac26f6406a4592336f1f444ec966201b5d9","modified":1624862481354},{"_id":"public/js/dark-light-toggle.js","hash":"223e6f1d4e6e70956e4661b58c430e1c68def125","modified":1624862481354},{"_id":"public/js/lazyload.js","hash":"95aad532f17d7a8119979fc61ade9e626308a2af","modified":1624862481354},{"_id":"public/js/left-side-toggle.js","hash":"618f7cfc45db4d82b2f1d00d8e9ee936bcf9043b","modified":1624862481354},{"_id":"public/js/local-search.js","hash":"9509ec6d2d7d4466fe37ad624cf606f6639fb3fe","modified":1624862481354},{"_id":"public/js/toc.js","hash":"ae69bf65d2b30d299b6ca9e2361d3b6e0db3a077","modified":1624862481354},{"_id":"public/js/header-shrink.js","hash":"167b9b6a9ed63c6cf4081cb3c201dd16bbbfb9ad","modified":1624862481354},{"_id":"public/js/main.js","hash":"ca8ed228cc0bc234be74428d029cfd047eec0ed6","modified":1624862481354},{"_id":"public/css/common/animated.css","hash":"061e145f3c7ac90dd305bd5260aaee71b1833167","modified":1624862481354},{"_id":"public/css/common/basic.css","hash":"2d666b859829bfee7cf66579f543a0b9c26c8426","modified":1624862481354},{"_id":"public/css/common/markdown.css","hash":"6e058a834eae267ba7edd1517ab6384d54321748","modified":1624862481354},{"_id":"public/css/layout/archive-content.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1624862481354},{"_id":"public/js/utils.js","hash":"47c6d222a116498359345777aea383c429975abf","modified":1624862481354},{"_id":"public/css/layout/article-content.css","hash":"bb2e9b90086c4a014d0dbeb97cd0beedab27fe9c","modified":1624862481354},{"_id":"public/css/layout/category-content.css","hash":"9687f9cbe029092b633fb804c28ecdcb54860511","modified":1624862481354},{"_id":"public/css/layout/category-list.css","hash":"672859a61a4e93c0514772112fb557395306e940","modified":1624862481354},{"_id":"public/css/layout/home-content.css","hash":"be1438b849ebf82cea573986fbbd1deed5334a72","modified":1624862481354},{"_id":"public/css/layout/page.css","hash":"dc57eee2b360ad0e9910d69653d547f033dbbd4c","modified":1624862481354},{"_id":"public/css/layout/tag-content.css","hash":"90b0cff1ef0228035cdca9ade2adef71c6c8fb5e","modified":1624862481354},{"_id":"public/css/common/keep-theme.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1624862481354},{"_id":"public/css/common/variables.css","hash":"74aa9b6370901c80ee916bdf8e4907f48d5b85d9","modified":1624862481354},{"_id":"public/css/common/codeblock/copy-code.css","hash":"fa5f022395fe92b6daea063418a32f8c19be6168","modified":1624862481354},{"_id":"public/css/common/codeblock/code-theme.css","hash":"e1f7d141756aebf3587fb5de8f951c7d7e963300","modified":1624862481354},{"_id":"public/css/common/codeblock/highlight.css","hash":"6a4b0339a26ee74c0b8d947129aafd64ac5947f2","modified":1624862481354},{"_id":"public/webfonts/fa-solid-900.eot","hash":"c39b89f7fa7b66931ab02a54002db5ffcbff206c","modified":1624862481354},{"_id":"public/webfonts/fa-solid-900.ttf","hash":"d537bf4cc7273ddb3fd754d53f2b241aeafaefe7","modified":1624862481354},{"_id":"public/js/libs/pjax.min.js","hash":"57ec40cb4898d7ba74a03603d608af378e5431f8","modified":1624862481354},{"_id":"public/js/libs/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1624862481354},{"_id":"public/css/font-awesome.min.css","hash":"c508528feb9fd540454f838653cd4863b290df2e","modified":1624862481354},{"_id":"public/webfonts/fa-brands-400.svg","hash":"69a0ff79a9d93a451e9fa90bd79ae7008d2a9da5","modified":1624862481354},{"_id":"public/webfonts/fa-solid-900.svg","hash":"36de6a298660ed3feaab37900f7b28c3e981d80e","modified":1624862481354},{"_id":"public/images/bp.jpeg","hash":"18a96ea39d45d41cf645a42f753b8b24ac67a8b2","modified":1624862481354},{"_id":"source/code/compare.go","hash":"c5cca6049c36453fa5f293088073605f09054b13","modified":1615285032836},{"_id":"source/code/compare_test.go","hash":"237fe5601dedcc1b767f3744695b6de1ecc993ce","modified":1615285163804},{"_id":"source/code/insertion.go","hash":"8e77fe6e33963dd271fedc92a73fd2d0f40f55ef","modified":1615285032852},{"_id":"source/code/compare.md","hash":"fff08de94433ae87c8b15d8b4f4cfb1248072cb2","modified":1615285142496},{"_id":"source/code/insertion_test.go","hash":"5af0cda90428ccc30639fe548b97a326098736a0","modified":1615285032876},{"_id":"source/code/merge.go","hash":"93d66c12fdb2e419023974598121531fea60ac32","modified":1615285032880},{"_id":"source/code/quick.go","hash":"6a7ce30934bec106a23870e3b3237083f4678ef2","modified":1615285032844},{"_id":"source/code/merge_test.go","hash":"8645a56e6efb36ed5bdf4deb107b8e58a625e95f","modified":1615285032865},{"_id":"source/code/quick_test.go","hash":"343e643427f9d2fd8593d745bfa1cc16dcd67f22","modified":1615285163816},{"_id":"source/code/selection.go","hash":"9dcb08349c4700e161ee438f6cd6304491feceec","modified":1615285032868},{"_id":"source/code/selection_test.go","hash":"64468f3c1b028490b60bd61b78ea9e9f0d6aa625","modified":1615285032872},{"_id":"source/docker/mv-docker-file.md","hash":"fe6adb8bd82f3bb137928209a850cedb8f120d95","modified":1615285456965},{"_id":"source/istio/.DS_Store","hash":"0b486103f182b4dd3900a101361822c76e2f2c53","modified":1606403685700},{"_id":"source/istio/bookinfo-gateway.yaml","hash":"4f62d332a2a234fc329a3435e76622f250edc583","modified":1605181236761},{"_id":"source/istio/bookinfo.yml","hash":"8c3cdef1df346ce0986c42ef2b6ed4aa9db72ae0","modified":1605181187561},{"_id":"source/istio/kiali.md","hash":"6391ab993b995968c0ef0192fba70310ce723a8b","modified":1615285456955},{"_id":"source/code/testdata/test01.go","hash":"c0144c50c52e0cd1d380a50b72b944682d281e44","modified":1615285163874},{"_id":"source/istio/istio-use.md","hash":"656f71c615b78215ec376fe0fa9c54b0bf27761d","modified":1615285456961},{"_id":"source/code/models/compare.go","hash":"b75f98ef367bbb2062ebd9ed45d6ae0a15af6126","modified":1615285163585},{"_id":"source/code/queue/queue.md","hash":"e0384eb02df78f50520a5aa2a84842d553530244","modified":1605169054964},{"_id":"source/istio/iptables-analysis.md","hash":"83d9b04b47e6cd15d8b5f2f1b17a943f1871e49a","modified":1606875856294},{"_id":"source/istio/2020-11-26-22-33-55.png","hash":"38675626595636471c9496f7d99a125a0091d797","modified":1606401236254},{"_id":"source/istio/bookinfo.png","hash":"716f52a8700cb5f37df00d58818cff222d9bc3fc","modified":1605180870533},{"_id":"source/_posts/queue/queue.md","hash":"e44b06e5b71b3d9003e1f1ff8bc67a0739b9369b","modified":1615285833356},{"_id":"source/_posts/compare.md","hash":"560c95df7043c2810479d7416f13d717cf326d0f","modified":1615300079696},{"_id":"source/_posts/docker/mv-docker-file.md","hash":"fe6adb8bd82f3bb137928209a850cedb8f120d95","modified":1615285833361},{"_id":"source/_posts/istio/bookinfo-gateway.yaml","hash":"4f62d332a2a234fc329a3435e76622f250edc583","modified":1615285833364},{"_id":"source/_posts/istio/bookinfo.yml","hash":"8c3cdef1df346ce0986c42ef2b6ed4aa9db72ae0","modified":1615285833367},{"_id":"source/_posts/istio/iptables-analysis.md","hash":"fc7ae3ad529c7b389176c7c19d8ff661bb262398","modified":1615286040719},{"_id":"source/_posts/istio/kiali.md","hash":"556516c2861bd48adc62bb5bb851db4b4d6d631e","modified":1615286301324},{"_id":"source/_posts/istio/istio-use.md","hash":"656f71c615b78215ec376fe0fa9c54b0bf27761d","modified":1615285833369},{"_id":"source/_posts/istio/2020-11-26-22-33-55.png","hash":"38675626595636471c9496f7d99a125a0091d797","modified":1615285833363},{"_id":"source/_posts/istio/bookinfo.png","hash":"716f52a8700cb5f37df00d58818cff222d9bc3fc","modified":1615285833366},{"_id":"source/_posts/mv-docker-file.md","hash":"fe6adb8bd82f3bb137928209a850cedb8f120d95","modified":1615286274470},{"_id":"source/_posts/kiali.md","hash":"556516c2861bd48adc62bb5bb851db4b4d6d631e","modified":1615286301324},{"_id":"source/_posts/iptables-analysis.md","hash":"869651dc05d4657572aed8e61d7473830f06be07","modified":1615287821262},{"_id":"source/_posts/queue.md","hash":"4e493fec7e0f7e544c8391b75f6d306f5eb11290","modified":1615300038490},{"_id":"source/_posts/istio-use.md","hash":"656f71c615b78215ec376fe0fa9c54b0bf27761d","modified":1615286274453},{"_id":"source/_posts/yaml/bookinfo.yml","hash":"8c3cdef1df346ce0986c42ef2b6ed4aa9db72ae0","modified":1615286274451},{"_id":"source/_posts/yaml/bookinfo-gateway.yaml","hash":"4f62d332a2a234fc329a3435e76622f250edc583","modified":1615286274455},{"_id":"source/_posts/images/bookinfo.png","hash":"716f52a8700cb5f37df00d58818cff222d9bc3fc","modified":1615286274450},{"_id":"source/_posts/images/2020-11-26-22-33-55.png","hash":"38675626595636471c9496f7d99a125a0091d797","modified":1615286274459},{"_id":"source/_posts/docker.md","hash":"682e5bb032b630f0e285cd25a91407b4ec1844bc","modified":1615300110673},{"_id":"source/_posts/iptables-analysis/bookinfo-gateway.yaml","hash":"4f62d332a2a234fc329a3435e76622f250edc583","modified":1615286274455},{"_id":"source/_posts/iptables-analysis/bookinfo.yml","hash":"8c3cdef1df346ce0986c42ef2b6ed4aa9db72ae0","modified":1615286274451},{"_id":"source/_posts/iptables-analysis/2020-11-26-22-33-55.png","hash":"38675626595636471c9496f7d99a125a0091d797","modified":1615286274459},{"_id":"source/_posts/iptables-analysis/bookinfo.png","hash":"716f52a8700cb5f37df00d58818cff222d9bc3fc","modified":1615286274450},{"_id":"source/_posts/analysis.md","hash":"f2154c7aeddae070f5d332759b8c694b50540ec8","modified":1615297886310},{"_id":"source/_posts/analysis/bookinfo-gateway.yaml","hash":"4f62d332a2a234fc329a3435e76622f250edc583","modified":1615286274455},{"_id":"source/_posts/analysis/bookinfo.yml","hash":"8c3cdef1df346ce0986c42ef2b6ed4aa9db72ae0","modified":1615286274451},{"_id":"source/_posts/analysis/bookinfo.png","hash":"716f52a8700cb5f37df00d58818cff222d9bc3fc","modified":1615286274450},{"_id":"source/_posts/analysis/2020-11-26-22-33-55.png","hash":"38675626595636471c9496f7d99a125a0091d797","modified":1615286274459},{"_id":"source/_posts/a.md","hash":"1b16fc8243b9d90e753198ac879d5ac6d72a269b","modified":1615288069135},{"_id":"source/_posts/a/golang.svg","hash":"59aab758225591324e94d763344ac38eba39d586","modified":1615282919806},{"_id":"source/_posts/analysis/iptables.png","hash":"38675626595636471c9496f7d99a125a0091d797","modified":1615288086981},{"_id":"source/_posts/a/a.md","hash":"1b16fc8243b9d90e753198ac879d5ac6d72a269b","modified":1615288069135},{"_id":"source/_posts/k8s/kiali.md","hash":"17356ca36490b9ca05be2ce721bc3b34e2637703","modified":1615300171898},{"_id":"source/_posts/k8s/istio-use.md","hash":"de83e700d2c0e30b1197026884027cba6f7533ae","modified":1615300153300},{"_id":"public/2021/03/09/docker/index.html","hash":"ca66c7640246cb5c46a5c5f24dc9522d3ffdfaa3","modified":1615290519718},{"_id":"public/2021/03/09/queue/index.html","hash":"5915b361e05bacf54f08efd9dac7429139e42819","modified":1615290519718},{"_id":"public/tags/kiali/index.html","hash":"97f455b110d808dabf1722f2e978200cc35e8a00","modified":1624862481354},{"_id":"public/2021/03/09/analysis/index.html","hash":"f00a4665a572897323391fb4228462bd06a82c44","modified":1624862481354},{"_id":"public/2021/03/09/k8s/istio-use/index.html","hash":"e9f57e59242b19634b98ea66214b1c834619a885","modified":1615290519718},{"_id":"public/2021/03/09/compare/index.html","hash":"915dc5fc7e2719231c56d45c71664a5aa571465b","modified":1615290519718},{"_id":"public/2021/03/09/k8s/kiali/index.html","hash":"f4983e1c43c3fb2813be0a615878e4ba5ca77f1e","modified":1615290519718},{"_id":"public/2021/03/09/analysis/bookinfo.png","hash":"716f52a8700cb5f37df00d58818cff222d9bc3fc","modified":1624862481354},{"_id":"public/2021/03/09/analysis/iptables.png","hash":"38675626595636471c9496f7d99a125a0091d797","modified":1624862481354},{"_id":"themes/keep/.DS_Store","hash":"80aed7c007d060f38d963ea5a3e471334414e40a","modified":1615296305034},{"_id":"themes/keep/source/.DS_Store","hash":"495dc0d217dbc3e7cb0c015a4aa9af3e7011d37f","modified":1615297494024},{"_id":"source/about/index.md","hash":"4de51e924891fc52dd718d04ebc348a00b25d312","modified":1615460265843},{"_id":"source/_posts/doc-dev/ops/pkg/local.repo","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1615298775648},{"_id":"source/_posts/doc-dev/.DS_Store","hash":"b2961d0cfcd77a73b340c9907a42f3a6e5f36009","modified":1615298884842},{"_id":"source/_posts/doc-dev/.git/HEAD","hash":"51730d7ec8c9eec2b6fd1f32ac0835b2a68ebc8b","modified":1615298775618},{"_id":"source/_posts/doc-dev/.git/config","hash":"d0b01adfdd11bb30c47819555d45ed3ff3972438","modified":1615298775620},{"_id":"source/_posts/doc-dev/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1615298770331},{"_id":"source/_posts/doc-dev/.git/index","hash":"31c4cc7e3de8534a9f284cf2e451c9aa950a97e9","modified":1615451720322},{"_id":"source/_posts/doc-dev/.git/packed-refs","hash":"7dea5eb89929af5913213ca66c9a8fcabe0cb9d2","modified":1615298775616},{"_id":"source/_posts/doc-dev/basics/dev.md","hash":"4a35a1cfcd45a60b910ab9f4a9a1d27f4fc1d2d3","modified":1615298775626},{"_id":"source/_posts/doc-dev/basics/.DS_Store","hash":"a345b3e8b6c8ccf68bf8f8fdf1c24e820b72452d","modified":1615298894481},{"_id":"source/_posts/doc-dev/basics/git.md","hash":"030f9f659ee5a1c28aaaf6c2a3e8fd3b2f14269b","modified":1615299840617},{"_id":"source/_posts/doc-dev/basics/grpc.md","hash":"f828682005615943d5f1de09cf6e66373f41953f","modified":1615299846656},{"_id":"source/_posts/doc-dev/basics/kafka.md","hash":"1467f2a3a0bc8a782d269a602063fab07f4eb93d","modified":1615299850265},{"_id":"source/_posts/doc-dev/basics/mock.md","hash":"fcb0c56eda741218585606ca8753f77bacf97d6c","modified":1615299866575},{"_id":"source/_posts/doc-dev/basics/mongo.md","hash":"8f126ed74cc8b9aed8da1129f8d3c2614b50e342","modified":1615299872103},{"_id":"source/_posts/doc-dev/basics/mybatis-plus.md","hash":"44566f15fd98d9f18c4be0a4da5dc91901728922","modified":1615299927421},{"_id":"source/_posts/doc-dev/basics/sharding-jdbc.md","hash":"3c040845f679abcd08c73714e6a7416db883d5a2","modified":1615299927994},{"_id":"source/_posts/doc-dev/basics/redis.md","hash":"299704d72293beef0a0beb751603f4a4366c2892","modified":1615299884266},{"_id":"source/_posts/doc-dev/basics/rabiit.md","hash":"3d7c224a2331f7b3e11161cfab30fa94cda3a14e","modified":1615299879751},{"_id":"source/_posts/doc-dev/basics/transactional.md","hash":"2bf3a06bedd552ea7a8c185a260e772845881111","modified":1615299928759},{"_id":"source/_posts/doc-dev/serviceinfo/dev.md","hash":"20c1a83cb13b6343332ed2f6d2c26832fa2eebf2","modified":1615298775650},{"_id":"source/_posts/doc-dev/basics/validate.md","hash":"97085578adf82895b7d8c92d13e7070709a4a3d2","modified":1615299912163},{"_id":"source/_posts/doc-dev/serviceinfo/test.md","hash":"d01f0fae762e42c53a5bdadcab2ab4c008e49771","modified":1615298775650},{"_id":"source/_posts/doc-dev/ops/dns.md","hash":"2e1350381e27bb97bbc22c0530fa031e81170390","modified":1615298775638},{"_id":"source/_posts/doc-dev/ops/graylog.md","hash":"b56f9ec8e03b672772b9df5016a66b7b95158c5b","modified":1615298775638},{"_id":"source/_posts/doc-dev/ops/gitlab-ci.md","hash":"18e21f8dbac0f224932d813edeeffea1d0e81803","modified":1615298775638},{"_id":"source/_posts/doc-dev/ops/k8s-node.md","hash":"904754abd53ee601c21dae908f90bdb7b37a25a9","modified":1615299968687},{"_id":"source/_posts/doc-dev/ops/standard.md","hash":"0933a6277ae0e55f8385632e411ae4d91dc38d67","modified":1615299972864},{"_id":"source/_posts/doc-dev/ops/use_dns.md","hash":"8d717dcaaa08a208021a166fb2c8906e6bb08649","modified":1615299976893},{"_id":"source/_posts/doc-dev/ops/yum.md","hash":"7a0d854d6a05549e56d6327405722e5c8102fcba","modified":1615299982554},{"_id":"source/_posts/doc-dev/standard/Swagger2.md","hash":"def461419fd91b26d40d91bfe786caf07f3ce8a4","modified":1615299989388},{"_id":"source/_posts/doc-dev/standard/logging.md","hash":"e7bc4ee6394bc2920f466206c03792f825fe3e10","modified":1615298775652},{"_id":"source/_posts/doc-dev/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1615298770331},{"_id":"source/_posts/doc-dev/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1615298770331},{"_id":"source/_posts/doc-dev/.git/hooks/fsmonitor-watchman.sample","hash":"55a762007dd48d229ef89fe8d0882256dcbee41a","modified":1615298770331},{"_id":"source/_posts/doc-dev/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1615298770332},{"_id":"source/_posts/doc-dev/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1615298770332},{"_id":"source/_posts/doc-dev/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1615298770331},{"_id":"source/_posts/doc-dev/.git/hooks/pre-merge-commit.sample","hash":"04c64e58bc25c149482ed45dbd79e40effb89eb7","modified":1615298770332},{"_id":"source/_posts/doc-dev/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1615298770332},{"_id":"source/_posts/doc-dev/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1615298770331},{"_id":"source/_posts/doc-dev/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1615298770332},{"_id":"source/_posts/doc-dev/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1615298770332},{"_id":"source/_posts/doc-dev/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1615298770333},{"_id":"source/_posts/doc-dev/.git/logs/HEAD","hash":"db7b4bb82e820c728abb858790394818f66f1d99","modified":1615451720326},{"_id":"source/_posts/doc-dev/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1615298770330},{"_id":"source/_posts/doc-dev/basics/img/ProjectMetadata.png","hash":"1dd75f4c65fc0d1472d879cac91fd501f8dba379","modified":1615298775629},{"_id":"source/_posts/doc-dev/basics/img/NewProject.png","hash":"061df56d377997934b0fa467657adad044da16a3","modified":1615298775628},{"_id":"source/_posts/doc-dev/basics/img/demo-api.png","hash":"0bf50060191fefa51f97ca29b8cea6c15a62f3fc","modified":1615298775629},{"_id":"source/_posts/doc-dev/basics/img/gitlab_settings.png","hash":"60037ce1c26d24473d4fcc4984431ed30e9436b5","modified":1615298775631},{"_id":"source/_posts/doc-dev/basics/pkg/settings.xml","hash":"4576b708706de217aa52cf2f02a6fab822b8b374","modified":1615298775637},{"_id":"source/_posts/doc-dev/ops/pkg/centos7_init.sh","hash":"8c7bcf6b9c0576da211acf7bbe6b7d3c62c7377a","modified":1615298775648},{"_id":"source/_posts/doc-dev/ops/pkg/syncRepo.sh","hash":"f230f45c6a61bcf10d5e8f4cad667d5146fb3bf1","modified":1615298775649},{"_id":"source/_posts/doc-dev/standard/img/hello.jpg","hash":"a787cbd040eee81cbd6af584f17896e5bc2b767c","modified":1615298775651},{"_id":"source/_posts/doc-dev/ops/img/network.jpg","hash":"447c38d72377a6ecf9887659572800c2962534a2","modified":1615298775645},{"_id":"source/_posts/doc-dev/ops/img/yumlist.png","hash":"ecdbbd8dcf2a637962247a889f108fc203150064","modified":1615298775648},{"_id":"source/_posts/doc-dev/.git/objects/pack/pack-37e090b4598324d55776c0e34aa20fdacbfbba1d.idx","hash":"8b803322e29bc98d87f336b0b424b8be7988fe78","modified":1615298775603},{"_id":"source/_posts/doc-dev/.git/logs/refs/heads/development","hash":"db7b4bb82e820c728abb858790394818f66f1d99","modified":1615451720326},{"_id":"source/_posts/doc-dev/.git/refs/heads/development","hash":"d01fdc0c8b379cf59912d5a830eda56e1c364c7a","modified":1615451720326},{"_id":"source/_posts/doc-dev/.git/refs/remotes/origin/HEAD","hash":"85ae59e9b3c1de27b893dbb0755c40108db11edc","modified":1615298775618},{"_id":"source/_posts/doc-dev/.git/logs/refs/remotes/origin/HEAD","hash":"527b5228252575f84de45ff97503b639fcf7958d","modified":1615298775618},{"_id":"source/_posts/doc-dev/basics/img/mongo-insert.png","hash":"dabcb19dc99a3a46073fc54289f11833b4a6aa22","modified":1615298775634},{"_id":"source/_posts/doc-dev/basics/img/mvn-version.png","hash":"2c0c5275b2d854d36d43183f2af96c873eccbf24","modified":1615298775636},{"_id":"source/_posts/doc-dev/standard/img/world.jpg","hash":"23a2008a3e54e811fe9d3ef5b3d57dde96d80318","modified":1615298775652},{"_id":"source/_posts/doc-dev/ops/img/add_runner.jpg","hash":"b9e470b644d17dc4d127c5f640c35a58ef111633","modified":1615298775640},{"_id":"source/_posts/doc-dev/ops/img/adv.jpg","hash":"1a6a75d664ae22e96d25c0f033ea0ce48ffd1595","modified":1615298775641},{"_id":"source/_posts/doc-dev/ops/img/dns.jpg","hash":"087fd3a238541290113a541ca9ec7acdce2c4a51","modified":1615298775642},{"_id":"source/_posts/doc-dev/ops/img/job_list.jpg","hash":"a685b56501dec4c81dcafaa84a120c7291206625","modified":1615298775644},{"_id":"source/_posts/doc-dev/ops/img/proper.jpg","hash":"a27202fbb97d234d0af6bb25ade2dece3a6a5867","modified":1615298775646},{"_id":"source/_posts/doc-dev/ops/img/runner_register.jpg","hash":"19c73cda74a8abf8677af51015bc9a655b0bdab3","modified":1615298775647},{"_id":"source/_posts/doc-dev/ops/img/unlock_runner.jpg","hash":"69e65f2d3a00afe66fab85b927f27bc9d094e310","modified":1615298775648},{"_id":"source/_posts/doc-dev/ops/img/ping.jpg","hash":"d589c9c89c08e740d521bc6bdf0e59ae6163214f","modified":1615298775645},{"_id":"source/_posts/doc-dev/basics/img/idea_downloads.png","hash":"4239a202244ec732bab9b6791eb4121ad17e8a26","modified":1615298775632},{"_id":"source/_posts/doc-dev/ops/img/ipv4.jpg","hash":"353772e2085d5ae9a4b0bcaba5064ba854bc4597","modified":1615298775643},{"_id":"source/_posts/doc-dev/basics/img/mongo-select.png","hash":"1c106de799e72535b62555ffc203071ecebefe42","modified":1615298775635},{"_id":"source/_posts/doc-dev/ops/img/add.jpg","hash":"2adc4aad439d3bc31ae1d0cf999821c2f43af8f5","modified":1615298775639},{"_id":"source/_posts/doc-dev/basics/img/jdk_downloads.png","hash":"3ac8b9ed98ed6958bf5382207c5674bf88d10a16","modified":1615298775634},{"_id":"source/_posts/doc-dev/basics/img/gitlab_profile_keys_new.png","hash":"6b2804c6e657143313729e605e66cd70b38d672d","modified":1615298775631},{"_id":"source/_posts/doc-dev/.git/objects/pack/pack-37e090b4598324d55776c0e34aa20fdacbfbba1d.pack","hash":"8183eccb274ea6650f136fd6ff1045ad7cdbc0f1","modified":1615298775603},{"_id":"public/about/index.html","hash":"e98362352a8d3691e9d4af05745bb917a2a2f1e5","modified":1624862481354},{"_id":"public/2020/09/21/queue/index.html","hash":"afce1f10ba07819dd0643cb61654ebc8960c8e3f","modified":1624862481354},{"_id":"public/2020/09/21/docker/index.html","hash":"1449532c36bd08b79cbf38b00109eef38a836bfb","modified":1624862481354},{"_id":"public/2019/03/12/doc-dev/ops/yum/index.html","hash":"65dfebc838480a4648c048b722ef29ef450d5085","modified":1624862481354},{"_id":"public/2019/03/12/doc-dev/ops/use_dns/index.html","hash":"6ae04917960a3716b5e3dae138f933c87a4f4277","modified":1624862481354},{"_id":"public/2019/03/12/doc-dev/ops/k8s-node/index.html","hash":"f6db96aadbc8812133da0ddc2308541e0077c8d6","modified":1624862481354},{"_id":"public/2018/03/12/doc-dev/basics/transactional/index.html","hash":"a36bb7f9e1f722c866d1b56605316428031e6074","modified":1624862481354},{"_id":"public/2018/03/12/doc-dev/basics/sharding-jdbc/index.html","hash":"6ac8cee266938d1408b325ae7748edf38c4f150e","modified":1624862481354},{"_id":"public/archives/page/2/index.html","hash":"7b8640453a1fd824ab211289bbf9b7e055ddb95b","modified":1624862481354},{"_id":"public/archives/page/3/index.html","hash":"7b8640453a1fd824ab211289bbf9b7e055ddb95b","modified":1624862481354},{"_id":"public/archives/2018/index.html","hash":"3b50a8d62e6d578cef0e5615e57fb3dd4498290a","modified":1624862481354},{"_id":"public/archives/2018/page/2/index.html","hash":"3b50a8d62e6d578cef0e5615e57fb3dd4498290a","modified":1624862481354},{"_id":"public/archives/2018/02/index.html","hash":"8d2b93fa234bb48ca04ac9f67f90050191de2c38","modified":1624862481354},{"_id":"public/archives/2018/03/index.html","hash":"472032c3882cf8706c30ae0400c01104d64d9753","modified":1624862481354},{"_id":"public/archives/2019/index.html","hash":"bfb43ed7842f9954347b01760e9ed7bf14e5b59e","modified":1624862481354},{"_id":"public/archives/2019/03/index.html","hash":"8ed0d5fe34f7c479b400007a66fa4c426e49a4e3","modified":1624862481354},{"_id":"public/archives/2020/index.html","hash":"08412c488de9679dc34b8e712e0208fd4e597f41","modified":1624862481354},{"_id":"public/archives/2020/03/index.html","hash":"5234746be1767397f41d5027b172cc3ef8133a96","modified":1624862481354},{"_id":"public/archives/2020/09/index.html","hash":"da30d260a7a6eed4cde9b77f560587138012e751","modified":1624862481354},{"_id":"public/archives/2021/01/index.html","hash":"fee1c323c16f85af3cad5b590e61fe01dd316a0f","modified":1624862481354},{"_id":"public/categories/istio/index.html","hash":"d796db7b1e665c070ebd127131883312bf7d757b","modified":1624862481354},{"_id":"public/page/3/index.html","hash":"97604397cb221b1072cff5ee70d465a630087bac","modified":1624862481354},{"_id":"public/tags/iptables/index.html","hash":"6dcc83f8f21264ae7c56d582dee15e5b0544b714","modified":1624862481354},{"_id":"public/tags/docker/index.html","hash":"a4f1765e159ae4323092c10e046be3d011dd0145","modified":1624862481354},{"_id":"public/tags/istio/index.html","hash":"cd5d988371f75d28d968574b59b9a6ea920b8e7c","modified":1624862481354},{"_id":"public/2021/01/21/k8s/kiali/index.html","hash":"febefbfffdafa64ec2aac902e97e72dc01677b44","modified":1624862481354},{"_id":"public/2021/01/21/k8s/istio-use/index.html","hash":"6b274d75aa55d965b9f1e9dda27145ba295b84e8","modified":1624862481354},{"_id":"public/2020/03/09/compare/index.html","hash":"691d654d37e10a8dde7a68a69f6805d5ed00a7f1","modified":1624862481354},{"_id":"public/2019/03/12/doc-dev/ops/standard/index.html","hash":"4037d64d136f222d26caee4019b14530729b4990","modified":1624862481354},{"_id":"public/2019/03/12/doc-dev/standard/Swagger2/index.html","hash":"6dfebc98658dde9920be0f3d1ba72fe66f837802","modified":1624862481354},{"_id":"public/2018/03/12/doc-dev/basics/validate/index.html","hash":"8a769b3255f26d4ed8163734d27bc90f627ab813","modified":1624862481354},{"_id":"public/2018/02/26/doc-dev/basics/mongo/index.html","hash":"a46cc48c92fddb06da5e7159b16d5e72dc62fa45","modified":1624862481354},{"_id":"public/2018/02/26/doc-dev/basics/redis/index.html","hash":"294cb82805c5adb0ade293be63fa184dd60550a8","modified":1624862481354},{"_id":"public/2018/02/26/doc-dev/basics/rabiit/index.html","hash":"47e811e54700d9fcf75d2e0e6d0c4981099d0216","modified":1624862481354},{"_id":"public/2018/02/26/doc-dev/basics/mock/index.html","hash":"7419b840eaea8d50f24e81fe6849de91adc0f801","modified":1624862481354},{"_id":"public/2018/02/23/doc-dev/basics/mybatis-plus/index.html","hash":"762566faacc8f3c60c39c947b587f1eb854a9c07","modified":1624862481354},{"_id":"public/2018/02/20/doc-dev/basics/kafka/index.html","hash":"1d27c407d9d8a14295315f9209c53ea587e2169d","modified":1624862481354},{"_id":"public/2018/02/20/doc-dev/basics/git/index.html","hash":"8bef01f35be67952e8826123f2ab194b6f2009be","modified":1624862481354},{"_id":"public/2018/02/20/doc-dev/basics/grpc/index.html","hash":"ddd2b74d6d7a02e3038b3e2e35298a731938d735","modified":1624862481354},{"_id":"public/page/2/index.html","hash":"5f9fb83947250f376524820b865cffb2e8e3cc64","modified":1624862481354},{"_id":"source/_posts/doc-dev/.git/COMMIT_EDITMSG","hash":"44315ed69f4ddc41c624dd8e1f7fc26d0720f773","modified":1615451720324},{"_id":"source/_posts/linux/namespace.md","hash":"6d4d66fa98940906fb86be7d1be9be33d54b9a24","modified":1616033169495},{"_id":"source/_posts/doc-dev/.git/objects/00/b6cefeeedbf10de7ac79f038bf5496e9a0a8fc","hash":"6957d19c23cca43edc72a933d968d7bf6526049b","modified":1615451720290},{"_id":"source/_posts/doc-dev/.git/objects/5a/5797ceb0999383cfed2417e96f22bab4181436","hash":"a27134263d864659b3524e99778038ee97505148","modified":1615451720322},{"_id":"source/_posts/doc-dev/.git/objects/91/b5e378726d4b8067e75341e0696416ce34edf9","hash":"0e56508a5fd9444b65b9b658b11f2a3fdecbcde0","modified":1615451720278},{"_id":"source/_posts/doc-dev/.git/objects/4c/94e14691a3610fb414a936977eadd90ab4dab1","hash":"6315f1d02ac56045692923e2a0928622116ef3f7","modified":1615451720319},{"_id":"source/_posts/doc-dev/.git/objects/25/62b9ffb138c9b3111f788e676285e3de47a9fc","hash":"8e7e1931ed271519fe29c5295986d328645ea424","modified":1615451720285},{"_id":"source/_posts/doc-dev/.git/objects/84/e1b91387ca685b9b1a8ec3e95a10f2e92178d4","hash":"7ffaca80477c7ffd77837d24d2c952611a502096","modified":1615451720289},{"_id":"source/_posts/doc-dev/.git/objects/93/84457edf70efb669fab2b7703161dc887f17d1","hash":"d33c3f40336e4ff1e86ecbdcbc77a1b9b8e0e4d6","modified":1615451720320},{"_id":"source/_posts/doc-dev/.git/objects/a9/28a5ed275ae5c49a0da8a69af88fa5e5961104","hash":"9fb66c036d77f4950dc27940cd08119b77cd843e","modified":1615451720325},{"_id":"source/_posts/doc-dev/.git/objects/b5/db0053a0e4fecd584baca96b941213d88ecc82","hash":"2ed846fdaec0217b9a702df48c358f9c219ac8b9","modified":1615451720277},{"_id":"source/_posts/doc-dev/.git/objects/b9/dbf595292e9491aed5c3d860cb4b6b51a01110","hash":"2593308e6c544c019dfde6803005665459ecafc8","modified":1615451720275},{"_id":"source/_posts/doc-dev/.git/objects/9c/35771612ab22508db13237e623ea8c33d6628d","hash":"71e05a6ea0d76c5ce5cb5b7d640588da5c44d157","modified":1615451720284},{"_id":"source/_posts/doc-dev/.git/objects/a1/aaf4be172bbad35121e4d10df4cc0c277d1f0c","hash":"cdbeb86a51a93a5f2255c5610d70b6b6dcb426fa","modified":1615451720291},{"_id":"source/_posts/doc-dev/.git/objects/c2/e046c636d951c0ade5b228f6419f95a5e0fdd4","hash":"581678baff821db1fed75e7d99a17f62139443c9","modified":1615451720293},{"_id":"source/_posts/doc-dev/.git/objects/a3/251295a77e9b480754eb114168fded756b2d80","hash":"0ebd51d4b20088d7e43fa40a41741529686a6fba","modified":1615451720287},{"_id":"source/_posts/doc-dev/.git/objects/c2/06535836cb34c7551d8fae5f7598f98c0ca316","hash":"9daee1326fdc323845a8d772971367f0be71f864","modified":1615451720280},{"_id":"source/_posts/doc-dev/.git/objects/d0/78441056908687d39eff29b71dcc45c9f828fb","hash":"f44ffe5bdc4d40f3b823772d89675e5e8dac81ff","modified":1615451720294},{"_id":"source/_posts/doc-dev/.git/objects/db/8cc2a19d804d8b6191d0dce6913be3c1cb68c3","hash":"f4312e3374fd3f8205e995f739f6f6bd37c5da0a","modified":1615451720292},{"_id":"source/_posts/doc-dev/.git/objects/dc/7ebad32f26cd86b16a118b919e88283c11f5ac","hash":"4aaaa79419c58899b07738d3b4cc2fdc928fb4ad","modified":1615451720321},{"_id":"source/_posts/doc-dev/.git/objects/c2/012486d386a14076a67ff93361fa13a73e5ec3","hash":"278e6137908fd8f77bc2ad7e210d1fdf4340b1d0","modified":1615451720281},{"_id":"source/_posts/doc-dev/.git/objects/c7/572d4fc93167b6063289c2bb3bd301ac98d952","hash":"b8c56f430d333f9595206c6b52ebfc9988fc96c8","modified":1615451720282},{"_id":"source/_posts/doc-dev/.git/objects/d7/5d1c420e22f982cc665c676d97373aca4e4541","hash":"8b0efceb214a5924a129626b7f5692599a1fe2a2","modified":1615451720288},{"_id":"source/_posts/linux/cgroups.md","hash":"43f9582b541aed5c913a03fd0762f1bbc9708c6d","modified":1615451616010},{"_id":"public/2021/03/10/linux/namespace/index.html","hash":"5cb86c14037f07ba933ff7c656c7878a198cf7c7","modified":1624862481354},{"_id":"public/tags/linux/index.html","hash":"e286b3c9ec3a00b624e4ba788dfb1d8c8b30f18b","modified":1624862481354},{"_id":"public/tags/kernal/index.html","hash":"b987ec034853bc64b0e2b0fe92251634badf1e82","modified":1624862481354},{"_id":"public/2021/03/10/linux/cgroups/index.html","hash":"60cdbefdfe4aac870b2037a390dec6135166435d","modified":1624862481354},{"_id":"source/_posts/route.md","hash":"ad81882a70a44b6263d31b2647a512cae744c4bc","modified":1615652754625},{"_id":"source/_posts/zsh.md","hash":"68eb78b5b6817de1d12f2b622e7e7f8111ee28ef","modified":1615529934283},{"_id":"source/_posts/k8s/ik.md","hash":"741919137a0d2232b5046fa7605ce69ccdb1da4e","modified":1615529750825},{"_id":"source/_posts/linux/bridge.md","hash":"51ed016441d7d6a77cb46d8bca6a5415764284a0","modified":1615649321708},{"_id":"public/2021/03/14/route/index.html","hash":"33bc845b640e89882ebc9bd5eb411cc24517f026","modified":1616033728668},{"_id":"public/2021/03/13/linux/bridge/index.html","hash":"a7f6b23f18c56b0ef448b14dd8786fc2cec29554","modified":1624862481354},{"_id":"public/2021/03/12/zsh/index.html","hash":"f0590cd282966aa0050ff22679e1f5be6d3c333e","modified":1624862481354},{"_id":"public/tags/kubernetes/index.html","hash":"61c34ebdcab0a3f2753d3f87d5e72a1debf85e01","modified":1624862481354},{"_id":"public/tags/network/index.html","hash":"679611ff72f83ac429ee6a6fa1c643640439562b","modified":1624862481354},{"_id":"public/2021/03/12/k8s/ik/index.html","hash":"3d4a8a5af2e75fd543bb23e7f67618eddfe4f13d","modified":1615944988629},{"_id":"source/_posts/linux/lxc.md","hash":"3da219c6bf54fa50b6e1a4fb3fbc6c21432d400a","modified":1615944894081},{"_id":"source/_posts/linux/img_2.png","hash":"f3fc281b3d2f5d7143443617e445bb4e82a9fad3","modified":1615944894080},{"_id":"source/_posts/linux/img_3.png","hash":"e04907fe20d1af1f5354eb46fcf4dad04cca14a2","modified":1615944894081},{"_id":"source/_posts/linux/img.png","hash":"243dfe1c5bba4f832da4f2d8ae729f468f8fae16","modified":1615944894079},{"_id":"public/2021/03/16/linux/lxc/index.html","hash":"c94b1a4ed4913d0278905cec4461de86aaf0ddaf","modified":1624862481354},{"_id":"public/tags/kernel/index.html","hash":"ce968de4a1b47523b1eaac79c342e7c12aea3ca5","modified":1624862481354},{"_id":"source/_posts/k8s/install-k8s.md","hash":"f46f016de04f25365890e7ee23f0b7bc31e24cf8","modified":1615950375934},{"_id":"public/2021/03/12/k8s/install-k8s/index.html","hash":"f9dbc814f0461aa0ea952bbe0bba60254a04432f","modified":1624862481354},{"_id":"source/_posts/linux/namespace/img_3.png","hash":"e04907fe20d1af1f5354eb46fcf4dad04cca14a2","modified":1615944894081},{"_id":"source/_posts/linux/namespace/img_2.png","hash":"f3fc281b3d2f5d7143443617e445bb4e82a9fad3","modified":1615944894080},{"_id":"source/_posts/linux/namespace/img.png","hash":"243dfe1c5bba4f832da4f2d8ae729f468f8fae16","modified":1615944894079},{"_id":"public/2021/03/10/linux/namespace/img_3.png","hash":"e04907fe20d1af1f5354eb46fcf4dad04cca14a2","modified":1624862481354},{"_id":"public/2021/03/10/linux/namespace/img.png","hash":"243dfe1c5bba4f832da4f2d8ae729f468f8fae16","modified":1624862481354},{"_id":"public/2021/03/10/linux/namespace/img_2.png","hash":"f3fc281b3d2f5d7143443617e445bb4e82a9fad3","modified":1624862481354},{"_id":"source/_posts/linux/route.md","hash":"da127efda4afe9fcf4dff35d2d3d3341aa82a1d6","modified":1616038978321},{"_id":"source/_posts/k8s/istio/debug-istio.md","hash":"525cc579b6fe01d530373c8a1bcd0534714b43da","modified":1616736622062},{"_id":"public/2021/03/14/linux/route/index.html","hash":"c02cb89a218b08a07b2d7d497af8282083a05419","modified":1624862481354},{"_id":"public/2021/03/22/k8s/istio/debug-istio/index.html","hash":"7063bca3999b1dc163023e7e9b2b7119887fee96","modified":1624862481354},{"_id":"public/archives/2021/page/2/index.html","hash":"b82dee04d84774879b3d143b097d557af17085c8","modified":1624862481354},{"_id":"source/_posts/k8s/istio/debug-istio/img.png","hash":"e0a5a278c5835da48e7a350a969aa8f936bca09d","modified":1616736558160},{"_id":"public/2021/03/22/k8s/istio/debug-istio/img.png","hash":"e0a5a278c5835da48e7a350a969aa8f936bca09d","modified":1624862481354},{"_id":"source/_posts/.DS_Store","hash":"5896c05105bc39459b90cb5d8be690fa99223a10","modified":1617272821246},{"_id":"source/_posts/analysis/.DS_Store","hash":"c6f33e32f338b4c3c24e8b246f0c665cb14e36c0","modified":1617272821288},{"_id":"source/_posts/k8s/lb.md","hash":"29c88e13ca01cc2bc83a5ae555061c3aff9e52a8","modified":1624859888059},{"_id":"themes/keep/source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1617271933603},{"_id":"themes/keep/source/images/bp.jpg","hash":"c4d7d712bcc9b6ace94f394af2c969e45b2b5037","modified":1624861439139},{"_id":"public/2021/04/07/k8s/lb/index.html","hash":"a86f49618d99df194ac1242750f6a5a1fce42be4","modified":1624862481354},{"_id":"public/page/4/index.html","hash":"941a8822db6c04c0860007bc18a5ca8639123cfb","modified":1624862481354},{"_id":"public/archives/page/4/index.html","hash":"7b8640453a1fd824ab211289bbf9b7e055ddb95b","modified":1624862481354},{"_id":"public/archives/2021/04/index.html","hash":"2c3f0da4d95dcc3e1a3f92763cdb758a21765739","modified":1624862481354},{"_id":"public/images/bp.jpg","hash":"c4d7d712bcc9b6ace94f394af2c969e45b2b5037","modified":1624862481354}],"Category":[{"name":"istio","_id":"ckm22s7h90000nkjr8tgn9998"}],"Data":[],"Page":[{"title":"About","_content":"\n## 关于我\n\n大家好！\n\n欢迎来到我的个人网站！\n\n一个有5年工作经验的码农,主要从事的golang后台开发主要的研究的方向是`istio`和`kubernetes`.\n这里收集了个人认为日常实用的代码， 网上收集的实用代码以及个人感兴趣的各种知识记录。 以下为我给自己设立的要求：\n\n* 记录日常复习中带有重复利用价值的代码及介绍\n* 记录日常突发奇想的算法及想法\n* 记录自学过程中的代码及介绍\n* 记录解决难题过程中的代码及介绍\n* 积极生产小工具和复用性极高的代码以形成自己的个人代码库\n* 以上要求做不到的话， 就随便写点什么吧\n* 从前的我没有把知识记录下来的习惯， 希望现在可以通过我的个人网站来养成这种习惯。\n\n---\n\n## 关于我的信息\n\n昵称： ClareChu\n目前职业： golang工程师\n专业： 软件开发\n目前居住地： 深圳\n家乡： 湖北武汉\n爱好： 看书、 玩游戏、 看动漫、 躺着、 敲代码\n\n### 主要喜欢看`海贼王`和`柯南` 火影啥啥啥的哈哈，随便附上我最爱动漫的一张图片\n\n <img src=\"https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=1144858812,282004609&fm=26&gp=0.jpg\" width = \"300\" height = \"200\" alt=\"海贼王\" /><img src=\"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fc-ssl.duitang.com%2Fuploads%2Fitem%2F201910%2F08%2F20191008145552_xzpug.thumb.700_0.jpg&refer=http%3A%2F%2Fc-ssl.duitang.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1617892818&t=1a0b7a75ec599265ae9bc3fc5f47e7d5\" width = \"200\" height = \"200\" alt=\"海贼王\" />\n\n---\n\n## 联系方式\n\nQQ: 1062186165\nEmail: 1062186165@qq.com\nGithub: https://github.com/ClareChu\n","source":"about/index.md","raw":"---\ntitle: About\n---\n\n## 关于我\n\n大家好！\n\n欢迎来到我的个人网站！\n\n一个有5年工作经验的码农,主要从事的golang后台开发主要的研究的方向是`istio`和`kubernetes`.\n这里收集了个人认为日常实用的代码， 网上收集的实用代码以及个人感兴趣的各种知识记录。 以下为我给自己设立的要求：\n\n* 记录日常复习中带有重复利用价值的代码及介绍\n* 记录日常突发奇想的算法及想法\n* 记录自学过程中的代码及介绍\n* 记录解决难题过程中的代码及介绍\n* 积极生产小工具和复用性极高的代码以形成自己的个人代码库\n* 以上要求做不到的话， 就随便写点什么吧\n* 从前的我没有把知识记录下来的习惯， 希望现在可以通过我的个人网站来养成这种习惯。\n\n---\n\n## 关于我的信息\n\n昵称： ClareChu\n目前职业： golang工程师\n专业： 软件开发\n目前居住地： 深圳\n家乡： 湖北武汉\n爱好： 看书、 玩游戏、 看动漫、 躺着、 敲代码\n\n### 主要喜欢看`海贼王`和`柯南` 火影啥啥啥的哈哈，随便附上我最爱动漫的一张图片\n\n <img src=\"https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=1144858812,282004609&fm=26&gp=0.jpg\" width = \"300\" height = \"200\" alt=\"海贼王\" /><img src=\"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fc-ssl.duitang.com%2Fuploads%2Fitem%2F201910%2F08%2F20191008145552_xzpug.thumb.700_0.jpg&refer=http%3A%2F%2Fc-ssl.duitang.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1617892818&t=1a0b7a75ec599265ae9bc3fc5f47e7d5\" width = \"200\" height = \"200\" alt=\"海贼王\" />\n\n---\n\n## 联系方式\n\nQQ: 1062186165\nEmail: 1062186165@qq.com\nGithub: https://github.com/ClareChu\n","date":"2021-03-11T10:57:45.843Z","updated":"2021-03-11T10:57:45.843Z","path":"about/index.html","_id":"ckm22kzin0000i6jrh8ol97w5","comments":1,"layout":"page","content":"<h2 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h2><p>大家好！</p>\n<p>欢迎来到我的个人网站！</p>\n<p>一个有5年工作经验的码农,主要从事的golang后台开发主要的研究的方向是<code>istio</code>和<code>kubernetes</code>.<br>这里收集了个人认为日常实用的代码， 网上收集的实用代码以及个人感兴趣的各种知识记录。 以下为我给自己设立的要求：</p>\n<ul>\n<li>记录日常复习中带有重复利用价值的代码及介绍</li>\n<li>记录日常突发奇想的算法及想法</li>\n<li>记录自学过程中的代码及介绍</li>\n<li>记录解决难题过程中的代码及介绍</li>\n<li>积极生产小工具和复用性极高的代码以形成自己的个人代码库</li>\n<li>以上要求做不到的话， 就随便写点什么吧</li>\n<li>从前的我没有把知识记录下来的习惯， 希望现在可以通过我的个人网站来养成这种习惯。</li>\n</ul>\n<hr>\n<h2 id=\"关于我的信息\"><a href=\"#关于我的信息\" class=\"headerlink\" title=\"关于我的信息\"></a>关于我的信息</h2><p>昵称： ClareChu<br>目前职业： golang工程师<br>专业： 软件开发<br>目前居住地： 深圳<br>家乡： 湖北武汉<br>爱好： 看书、 玩游戏、 看动漫、 躺着、 敲代码</p>\n<h3 id=\"主要喜欢看海贼王和柯南-火影啥啥啥的哈哈，随便附上我最爱动漫的一张图片\"><a href=\"#主要喜欢看海贼王和柯南-火影啥啥啥的哈哈，随便附上我最爱动漫的一张图片\" class=\"headerlink\" title=\"主要喜欢看海贼王和柯南 火影啥啥啥的哈哈，随便附上我最爱动漫的一张图片\"></a>主要喜欢看<code>海贼王</code>和<code>柯南</code> 火影啥啥啥的哈哈，随便附上我最爱动漫的一张图片</h3><p> <img src=\"https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=1144858812,282004609&fm=26&gp=0.jpg\" width = \"300\" height = \"200\" alt=\"海贼王\" /><img src=\"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fc-ssl.duitang.com%2Fuploads%2Fitem%2F201910%2F08%2F20191008145552_xzpug.thumb.700_0.jpg&refer=http%3A%2F%2Fc-ssl.duitang.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1617892818&t=1a0b7a75ec599265ae9bc3fc5f47e7d5\" width = \"200\" height = \"200\" alt=\"海贼王\" /></p>\n<hr>\n<h2 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h2><p>QQ: 1062186165<br>Email: <a class=\"link\"   href=\"mailto:&#x31;&#x30;&#54;&#x32;&#49;&#x38;&#54;&#49;&#54;&#53;&#x40;&#x71;&#x71;&#x2e;&#x63;&#x6f;&#x6d;\" >&#x31;&#x30;&#54;&#x32;&#49;&#x38;&#54;&#49;&#54;&#53;&#x40;&#x71;&#x71;&#x2e;&#x63;&#x6f;&#x6d;<i class=\"fas fa-external-link-alt\"></i></a><br>Github: <a class=\"link\"   href=\"https://github.com/ClareChu\" >https://github.com/ClareChu<i class=\"fas fa-external-link-alt\"></i></a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h2><p>大家好！</p>\n<p>欢迎来到我的个人网站！</p>\n<p>一个有5年工作经验的码农,主要从事的golang后台开发主要的研究的方向是<code>istio</code>和<code>kubernetes</code>.<br>这里收集了个人认为日常实用的代码， 网上收集的实用代码以及个人感兴趣的各种知识记录。 以下为我给自己设立的要求：</p>\n<ul>\n<li>记录日常复习中带有重复利用价值的代码及介绍</li>\n<li>记录日常突发奇想的算法及想法</li>\n<li>记录自学过程中的代码及介绍</li>\n<li>记录解决难题过程中的代码及介绍</li>\n<li>积极生产小工具和复用性极高的代码以形成自己的个人代码库</li>\n<li>以上要求做不到的话， 就随便写点什么吧</li>\n<li>从前的我没有把知识记录下来的习惯， 希望现在可以通过我的个人网站来养成这种习惯。</li>\n</ul>\n<hr>\n<h2 id=\"关于我的信息\"><a href=\"#关于我的信息\" class=\"headerlink\" title=\"关于我的信息\"></a>关于我的信息</h2><p>昵称： ClareChu<br>目前职业： golang工程师<br>专业： 软件开发<br>目前居住地： 深圳<br>家乡： 湖北武汉<br>爱好： 看书、 玩游戏、 看动漫、 躺着、 敲代码</p>\n<h3 id=\"主要喜欢看海贼王和柯南-火影啥啥啥的哈哈，随便附上我最爱动漫的一张图片\"><a href=\"#主要喜欢看海贼王和柯南-火影啥啥啥的哈哈，随便附上我最爱动漫的一张图片\" class=\"headerlink\" title=\"主要喜欢看海贼王和柯南 火影啥啥啥的哈哈，随便附上我最爱动漫的一张图片\"></a>主要喜欢看<code>海贼王</code>和<code>柯南</code> 火影啥啥啥的哈哈，随便附上我最爱动漫的一张图片</h3><p> <img src=\"https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=1144858812,282004609&fm=26&gp=0.jpg\" width = \"300\" height = \"200\" alt=\"海贼王\" /><img src=\"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fc-ssl.duitang.com%2Fuploads%2Fitem%2F201910%2F08%2F20191008145552_xzpug.thumb.700_0.jpg&refer=http%3A%2F%2Fc-ssl.duitang.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1617892818&t=1a0b7a75ec599265ae9bc3fc5f47e7d5\" width = \"200\" height = \"200\" alt=\"海贼王\" /></p>\n<hr>\n<h2 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h2><p>QQ: 1062186165<br>Email: <a class=\"link\"   href=\"mailto:&#x31;&#x30;&#54;&#x32;&#49;&#x38;&#54;&#49;&#54;&#53;&#x40;&#x71;&#x71;&#x2e;&#x63;&#x6f;&#x6d;\" >&#x31;&#x30;&#54;&#x32;&#49;&#x38;&#54;&#49;&#54;&#53;&#x40;&#x71;&#x71;&#x2e;&#x63;&#x6f;&#x6d;<i class=\"fas fa-external-link-alt\"></i></a><br>Github: <a class=\"link\"   href=\"https://github.com/ClareChu\" >https://github.com/ClareChu<i class=\"fas fa-external-link-alt\"></i></a></p>\n"}],"Post":[{"title":"Compare","date":"2020-03-09T10:36:28.000Z","_content":"\n# Compare\n\n比较大小的基本方法\n\n```go\npackage compare\n\nimport (\n\t\"fmt\"\n\t\"github.com/clarechu/algorithms/code/models\"\n)\n\nfunc show(comparable []*models.Comparable) {\n\tfor i := 0; i < len(comparable); i++ {\n\t\tfmt.Println(comparable[i].Value)\n\t}\n}\n\n//isSorted 查看当前数组是否按照顺序排序\nfunc isSorted(comparable []*models.Comparable) bool {\n\tfor i := 1; i < len(comparable); i++ {\n\t\tif less(comparable[i], comparable[i-1]) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n\n//less v > w\nfunc less(v, w *models.Comparable) bool {\n\treturn v.Value < w.Value\n}\n\n//exchange\nfunc exchange(comparable []*models.Comparable, i, j int) {\n\tc := comparable[i]\n\tcomparable[i] = comparable[j]\n\tcomparable[j] = c\n}\n\n```\n\n选择排序\n\n```go\n\nfunc selectSort(a []*models.Comparable) {\n\tn := len(a)\n\tfor i := 0; i < n; i++ {\n\t\tmin := i\n\t\tfor j := i + 1; j < n; j++ {\n\t\t\tif less(a[j], a[min]) {\n\t\t\t\tmin = j\n\t\t\t}\n\t\t}\n\t\texchange(a, min, i)\n\t}\n}\n\n```\n\n插入排序\n\n\n```go\n\nfunc insertionSort(a []*models.Comparable) {\n\tn := len(a)\n\tfor i := 0; i < n; i++ {\n\t\tfor j := i; j > 0 && less(a[j], a[j-1]); j-- {\n\t\t\texchange(a, j, j-1)\n\t\t}\n\t}\n}\n\n```\n\n归并排序\n\n```go\n\n//Merge Sort 归并排序\nfunc mergeSort(a []*models.Comparable) {\n\tl := len(a)\n\tmSort(a, 0, l-1)\n}\n\nfunc mSort(a []*models.Comparable, lo, hi int) {\n\tif hi <= lo {\n\t\treturn\n\t}\n\tmid := lo + (hi-lo)/2\n\tmSort(a, lo, mid)\n\tmSort(a, mid+1, hi)\n\tmerge(a, lo, mid, hi)\n}\n\n//merge 合并数组\n// lo 初始位置\n// min 中位\n// hi 高位\nfunc merge(a []*models.Comparable, lo, mid, hi int) {\n\ti, j := lo, mid+1\n\td := make([]*models.Comparable, 0)\n\tfor _, k := range a {\n\t\td = append(d, k)\n\t}\n\tfor k := lo; k <= hi; k++ {\n\t\t// 左边取完了 取右边的\n\t\tif i > mid {\n\t\t\ta[k] = d[j]\n\t\t\tj++\n\t\t\t// 右边取完了 取左边的\n\t\t} else if j > hi {\n\t\t\ta[k] = d[i]\n\t\t\ti++\n\n\t\t} else if less(d[j], d[i]) {\n\t\t\ta[k] = d[j]\n\t\t\tj++\n\t\t} else {\n\t\t\ta[k] = d[i]\n\t\t\ti++\n\t\t}\n\t}\n}\n\n```\n\n\n快速排序\n\n\n\n```go\nfunc quick(a []*models.Comparable, lo, hi int) {\n\tif lo >= hi {\n\t\treturn\n\t}\n\tk := a[lo]\n\ti, j := lo, hi\n\tfor {\n\t\tfor ; i < j; j-- {\n\t\t\tif less(a[j], k) {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif i < j {\n\t\t\ta[i] = a[j]\n\t\t\ti++\n\t\t}\n\t\tfor ; i < j; i++ {\n\t\t\tif less(k, a[i]) {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif i < j {\n\t\t\ta[j] = a[i]\n\t\t\tj--\n\t\t}\n\t\tif i >= j {\n\t\t\tbreak\n\t\t}\n\t}\n\ta[i] = k\n\tquick(a, lo, i-1)\n\tquick(a, i+1, hi)\n}\n```","source":"_posts/compare.md","raw":"---\ntitle: Compare\ndate: 2020-03-09 18:36:28\n---\n\n# Compare\n\n比较大小的基本方法\n\n```go\npackage compare\n\nimport (\n\t\"fmt\"\n\t\"github.com/clarechu/algorithms/code/models\"\n)\n\nfunc show(comparable []*models.Comparable) {\n\tfor i := 0; i < len(comparable); i++ {\n\t\tfmt.Println(comparable[i].Value)\n\t}\n}\n\n//isSorted 查看当前数组是否按照顺序排序\nfunc isSorted(comparable []*models.Comparable) bool {\n\tfor i := 1; i < len(comparable); i++ {\n\t\tif less(comparable[i], comparable[i-1]) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n\n//less v > w\nfunc less(v, w *models.Comparable) bool {\n\treturn v.Value < w.Value\n}\n\n//exchange\nfunc exchange(comparable []*models.Comparable, i, j int) {\n\tc := comparable[i]\n\tcomparable[i] = comparable[j]\n\tcomparable[j] = c\n}\n\n```\n\n选择排序\n\n```go\n\nfunc selectSort(a []*models.Comparable) {\n\tn := len(a)\n\tfor i := 0; i < n; i++ {\n\t\tmin := i\n\t\tfor j := i + 1; j < n; j++ {\n\t\t\tif less(a[j], a[min]) {\n\t\t\t\tmin = j\n\t\t\t}\n\t\t}\n\t\texchange(a, min, i)\n\t}\n}\n\n```\n\n插入排序\n\n\n```go\n\nfunc insertionSort(a []*models.Comparable) {\n\tn := len(a)\n\tfor i := 0; i < n; i++ {\n\t\tfor j := i; j > 0 && less(a[j], a[j-1]); j-- {\n\t\t\texchange(a, j, j-1)\n\t\t}\n\t}\n}\n\n```\n\n归并排序\n\n```go\n\n//Merge Sort 归并排序\nfunc mergeSort(a []*models.Comparable) {\n\tl := len(a)\n\tmSort(a, 0, l-1)\n}\n\nfunc mSort(a []*models.Comparable, lo, hi int) {\n\tif hi <= lo {\n\t\treturn\n\t}\n\tmid := lo + (hi-lo)/2\n\tmSort(a, lo, mid)\n\tmSort(a, mid+1, hi)\n\tmerge(a, lo, mid, hi)\n}\n\n//merge 合并数组\n// lo 初始位置\n// min 中位\n// hi 高位\nfunc merge(a []*models.Comparable, lo, mid, hi int) {\n\ti, j := lo, mid+1\n\td := make([]*models.Comparable, 0)\n\tfor _, k := range a {\n\t\td = append(d, k)\n\t}\n\tfor k := lo; k <= hi; k++ {\n\t\t// 左边取完了 取右边的\n\t\tif i > mid {\n\t\t\ta[k] = d[j]\n\t\t\tj++\n\t\t\t// 右边取完了 取左边的\n\t\t} else if j > hi {\n\t\t\ta[k] = d[i]\n\t\t\ti++\n\n\t\t} else if less(d[j], d[i]) {\n\t\t\ta[k] = d[j]\n\t\t\tj++\n\t\t} else {\n\t\t\ta[k] = d[i]\n\t\t\ti++\n\t\t}\n\t}\n}\n\n```\n\n\n快速排序\n\n\n\n```go\nfunc quick(a []*models.Comparable, lo, hi int) {\n\tif lo >= hi {\n\t\treturn\n\t}\n\tk := a[lo]\n\ti, j := lo, hi\n\tfor {\n\t\tfor ; i < j; j-- {\n\t\t\tif less(a[j], k) {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif i < j {\n\t\t\ta[i] = a[j]\n\t\t\ti++\n\t\t}\n\t\tfor ; i < j; i++ {\n\t\t\tif less(k, a[i]) {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif i < j {\n\t\t\ta[j] = a[i]\n\t\t\tj--\n\t\t}\n\t\tif i >= j {\n\t\t\tbreak\n\t\t}\n\t}\n\ta[i] = k\n\tquick(a, lo, i-1)\n\tquick(a, i+1, hi)\n}\n```","slug":"compare","published":1,"updated":"2021-03-09T14:27:59.696Z","_id":"ckm1vm34c0000avjrhuis48lc","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Compare\"><a href=\"#Compare\" class=\"headerlink\" title=\"Compare\"></a>Compare</h1><p>比较大小的基本方法</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> compare</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/clarechu/algorithms/code/models&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">show</span><span class=\"params\">(comparable []*models.Comparable)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; <span class=\"built_in\">len</span>(comparable); i++ &#123;</span><br><span class=\"line\">\t\tfmt.Println(comparable[i].Value)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//isSorted 查看当前数组是否按照顺序排序</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">isSorted</span><span class=\"params\">(comparable []*models.Comparable)</span> <span class=\"title\">bool</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt; <span class=\"built_in\">len</span>(comparable); i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> less(comparable[i], comparable[i<span class=\"number\">-1</span>]) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//less v &gt; w</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">less</span><span class=\"params\">(v, w *models.Comparable)</span> <span class=\"title\">bool</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> v.Value &lt; w.Value</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//exchange</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">exchange</span><span class=\"params\">(comparable []*models.Comparable, i, j <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\tc := comparable[i]</span><br><span class=\"line\">\tcomparable[i] = comparable[j]</span><br><span class=\"line\">\tcomparable[j] = c</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>选择排序</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">selectSort</span><span class=\"params\">(a []*models.Comparable)</span></span> &#123;</span><br><span class=\"line\">\tn := <span class=\"built_in\">len</span>(a)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; n; i++ &#123;</span><br><span class=\"line\">\t\tmin := i</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := i + <span class=\"number\">1</span>; j &lt; n; j++ &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> less(a[j], a[min]) &#123;</span><br><span class=\"line\">\t\t\t\tmin = j</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\texchange(a, min, i)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>插入排序</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">insertionSort</span><span class=\"params\">(a []*models.Comparable)</span></span> &#123;</span><br><span class=\"line\">\tn := <span class=\"built_in\">len</span>(a)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; n; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := i; j &gt; <span class=\"number\">0</span> &amp;&amp; less(a[j], a[j<span class=\"number\">-1</span>]); j-- &#123;</span><br><span class=\"line\">\t\t\texchange(a, j, j<span class=\"number\">-1</span>)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>归并排序</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Merge Sort 归并排序</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">mergeSort</span><span class=\"params\">(a []*models.Comparable)</span></span> &#123;</span><br><span class=\"line\">\tl := <span class=\"built_in\">len</span>(a)</span><br><span class=\"line\">\tmSort(a, <span class=\"number\">0</span>, l<span class=\"number\">-1</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">mSort</span><span class=\"params\">(a []*models.Comparable, lo, hi <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> hi &lt;= lo &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tmid := lo + (hi-lo)/<span class=\"number\">2</span></span><br><span class=\"line\">\tmSort(a, lo, mid)</span><br><span class=\"line\">\tmSort(a, mid+<span class=\"number\">1</span>, hi)</span><br><span class=\"line\">\tmerge(a, lo, mid, hi)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//merge 合并数组</span></span><br><span class=\"line\"><span class=\"comment\">// lo 初始位置</span></span><br><span class=\"line\"><span class=\"comment\">// min 中位</span></span><br><span class=\"line\"><span class=\"comment\">// hi 高位</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">merge</span><span class=\"params\">(a []*models.Comparable, lo, mid, hi <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\ti, j := lo, mid+<span class=\"number\">1</span></span><br><span class=\"line\">\td := <span class=\"built_in\">make</span>([]*models.Comparable, <span class=\"number\">0</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, k := <span class=\"keyword\">range</span> a &#123;</span><br><span class=\"line\">\t\td = <span class=\"built_in\">append</span>(d, k)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> k := lo; k &lt;= hi; k++ &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 左边取完了 取右边的</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> i &gt; mid &#123;</span><br><span class=\"line\">\t\t\ta[k] = d[j]</span><br><span class=\"line\">\t\t\tj++</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 右边取完了 取左边的</span></span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> j &gt; hi &#123;</span><br><span class=\"line\">\t\t\ta[k] = d[i]</span><br><span class=\"line\">\t\t\ti++</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> less(d[j], d[i]) &#123;</span><br><span class=\"line\">\t\t\ta[k] = d[j]</span><br><span class=\"line\">\t\t\tj++</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\ta[k] = d[i]</span><br><span class=\"line\">\t\t\ti++</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>快速排序</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">quick</span><span class=\"params\">(a []*models.Comparable, lo, hi <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> lo &gt;= hi &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tk := a[lo]</span><br><span class=\"line\">\ti, j := lo, hi</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> ; i &lt; j; j-- &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> less(a[j], k) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> i &lt; j &#123;</span><br><span class=\"line\">\t\t\ta[i] = a[j]</span><br><span class=\"line\">\t\t\ti++</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> ; i &lt; j; i++ &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> less(k, a[i]) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> i &lt; j &#123;</span><br><span class=\"line\">\t\t\ta[j] = a[i]</span><br><span class=\"line\">\t\t\tj--</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> i &gt;= j &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ta[i] = k</span><br><span class=\"line\">\tquick(a, lo, i<span class=\"number\">-1</span>)</span><br><span class=\"line\">\tquick(a, i+<span class=\"number\">1</span>, hi)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Compare\"><a href=\"#Compare\" class=\"headerlink\" title=\"Compare\"></a>Compare</h1><p>比较大小的基本方法</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> compare</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/clarechu/algorithms/code/models&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">show</span><span class=\"params\">(comparable []*models.Comparable)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; <span class=\"built_in\">len</span>(comparable); i++ &#123;</span><br><span class=\"line\">\t\tfmt.Println(comparable[i].Value)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//isSorted 查看当前数组是否按照顺序排序</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">isSorted</span><span class=\"params\">(comparable []*models.Comparable)</span> <span class=\"title\">bool</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt; <span class=\"built_in\">len</span>(comparable); i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> less(comparable[i], comparable[i<span class=\"number\">-1</span>]) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//less v &gt; w</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">less</span><span class=\"params\">(v, w *models.Comparable)</span> <span class=\"title\">bool</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> v.Value &lt; w.Value</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//exchange</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">exchange</span><span class=\"params\">(comparable []*models.Comparable, i, j <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\tc := comparable[i]</span><br><span class=\"line\">\tcomparable[i] = comparable[j]</span><br><span class=\"line\">\tcomparable[j] = c</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>选择排序</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">selectSort</span><span class=\"params\">(a []*models.Comparable)</span></span> &#123;</span><br><span class=\"line\">\tn := <span class=\"built_in\">len</span>(a)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; n; i++ &#123;</span><br><span class=\"line\">\t\tmin := i</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := i + <span class=\"number\">1</span>; j &lt; n; j++ &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> less(a[j], a[min]) &#123;</span><br><span class=\"line\">\t\t\t\tmin = j</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\texchange(a, min, i)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>插入排序</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">insertionSort</span><span class=\"params\">(a []*models.Comparable)</span></span> &#123;</span><br><span class=\"line\">\tn := <span class=\"built_in\">len</span>(a)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; n; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := i; j &gt; <span class=\"number\">0</span> &amp;&amp; less(a[j], a[j<span class=\"number\">-1</span>]); j-- &#123;</span><br><span class=\"line\">\t\t\texchange(a, j, j<span class=\"number\">-1</span>)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>归并排序</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Merge Sort 归并排序</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">mergeSort</span><span class=\"params\">(a []*models.Comparable)</span></span> &#123;</span><br><span class=\"line\">\tl := <span class=\"built_in\">len</span>(a)</span><br><span class=\"line\">\tmSort(a, <span class=\"number\">0</span>, l<span class=\"number\">-1</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">mSort</span><span class=\"params\">(a []*models.Comparable, lo, hi <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> hi &lt;= lo &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tmid := lo + (hi-lo)/<span class=\"number\">2</span></span><br><span class=\"line\">\tmSort(a, lo, mid)</span><br><span class=\"line\">\tmSort(a, mid+<span class=\"number\">1</span>, hi)</span><br><span class=\"line\">\tmerge(a, lo, mid, hi)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//merge 合并数组</span></span><br><span class=\"line\"><span class=\"comment\">// lo 初始位置</span></span><br><span class=\"line\"><span class=\"comment\">// min 中位</span></span><br><span class=\"line\"><span class=\"comment\">// hi 高位</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">merge</span><span class=\"params\">(a []*models.Comparable, lo, mid, hi <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\ti, j := lo, mid+<span class=\"number\">1</span></span><br><span class=\"line\">\td := <span class=\"built_in\">make</span>([]*models.Comparable, <span class=\"number\">0</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, k := <span class=\"keyword\">range</span> a &#123;</span><br><span class=\"line\">\t\td = <span class=\"built_in\">append</span>(d, k)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> k := lo; k &lt;= hi; k++ &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 左边取完了 取右边的</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> i &gt; mid &#123;</span><br><span class=\"line\">\t\t\ta[k] = d[j]</span><br><span class=\"line\">\t\t\tj++</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 右边取完了 取左边的</span></span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> j &gt; hi &#123;</span><br><span class=\"line\">\t\t\ta[k] = d[i]</span><br><span class=\"line\">\t\t\ti++</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> less(d[j], d[i]) &#123;</span><br><span class=\"line\">\t\t\ta[k] = d[j]</span><br><span class=\"line\">\t\t\tj++</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\ta[k] = d[i]</span><br><span class=\"line\">\t\t\ti++</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>快速排序</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">quick</span><span class=\"params\">(a []*models.Comparable, lo, hi <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> lo &gt;= hi &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tk := a[lo]</span><br><span class=\"line\">\ti, j := lo, hi</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> ; i &lt; j; j-- &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> less(a[j], k) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> i &lt; j &#123;</span><br><span class=\"line\">\t\t\ta[i] = a[j]</span><br><span class=\"line\">\t\t\ti++</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> ; i &lt; j; i++ &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> less(k, a[i]) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> i &lt; j &#123;</span><br><span class=\"line\">\t\t\ta[j] = a[i]</span><br><span class=\"line\">\t\t\tj--</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> i &gt;= j &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ta[i] = k</span><br><span class=\"line\">\tquick(a, lo, i<span class=\"number\">-1</span>)</span><br><span class=\"line\">\tquick(a, i+<span class=\"number\">1</span>, hi)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"更改docker默认挂载目录","date":"2020-09-20T16:00:00.000Z","_content":"更改docker默认挂载目录\n\n## 场景\n\n生产上运行了一段时间docker后，根分区使用量报警，由于根分区不是lvm类型的，所以无法做扩容，故采用新加一块硬盘，挂载到新目录/docker/，并将docker默认挂载目录改到这个目录的方法解决磁盘将满的问题。\n\n### 新加磁盘并挂载\n\n```bash\nfdisk /dev/vdb\n\n\n过程略\nmkfs.xfs /dev/vdb1\nmkdir /docker\nmount /dev/vdc1 /docker\n```\n\n```bash\n[root@cloud-jumpserver01 ~]# blkid \n/dev/vdc1: UUID=\"27d703ee-41b1-4b7e-860b-aa465b807e39\" TYPE=\"xfs\" \ncat /etc/fstab \nUUID=27d703ee-41b1-4b7e-860b-aa465b807e39 /dev/vdc1               xfs     defaults        1 1\n```\n\n## 更改docker挂载目录\n\n```bash\ncat /etc/docker/daemon.json \n{\"registry-mirrors\": [\"http://f1361db2.m.daocloud.io\"],\n\"data-root\": \"/docker\"\n}\n```\n\n## 加载配置\n\n```bash\nsystemctl daemon-reload\nsystemctl restart docker\n```\n\n## 验证挂载目录是否更改\n\n```bash\ndocker info\nDocker Root Dir: /docker\n\n```\n\n```bash\ndocker ps -a\n```\n\n说明：这时候如果docker ps -a是不会有任何输出的。\n\n## 复制文件到新的挂载目录\n\n```bash\ncp -arp /var/lib/docker/* /docker/\n```\n\n说明：提示是否覆盖文件，选择是。\n\n## 重启docker\n\n```bash\nsystemctl restart docker\n```\n\n## 验证旧容器是否正常\n\n```bash\ndocker ps -a\nCONTAINER ID        IMAGE                            COMMAND             CREATED             STATUS              PORTS                                              NAMES\n11ea907c531e        jumpserver/jms_guacamole:1.5.3   \"/init\"             12 months ago       Up 4 minutes        127.0.0.1:8081->8080/tcp                           jms_guacamole\nc9b5a730f6ec        jumpserver/jms_koko:1.5.3        \"./entrypoint.sh\"   12 months ago       Up 4 minutes        0.0.0.0:2222->2222/tcp, 127.0.0.1:5000->5000/tcp   jms_koko\n```\n","source":"_posts/docker.md","raw":"---\ntitle: 更改docker默认挂载目录\ndate: 2020-09-21\n\ntags: \n- docker\n---\n更改docker默认挂载目录\n\n## 场景\n\n生产上运行了一段时间docker后，根分区使用量报警，由于根分区不是lvm类型的，所以无法做扩容，故采用新加一块硬盘，挂载到新目录/docker/，并将docker默认挂载目录改到这个目录的方法解决磁盘将满的问题。\n\n### 新加磁盘并挂载\n\n```bash\nfdisk /dev/vdb\n\n\n过程略\nmkfs.xfs /dev/vdb1\nmkdir /docker\nmount /dev/vdc1 /docker\n```\n\n```bash\n[root@cloud-jumpserver01 ~]# blkid \n/dev/vdc1: UUID=\"27d703ee-41b1-4b7e-860b-aa465b807e39\" TYPE=\"xfs\" \ncat /etc/fstab \nUUID=27d703ee-41b1-4b7e-860b-aa465b807e39 /dev/vdc1               xfs     defaults        1 1\n```\n\n## 更改docker挂载目录\n\n```bash\ncat /etc/docker/daemon.json \n{\"registry-mirrors\": [\"http://f1361db2.m.daocloud.io\"],\n\"data-root\": \"/docker\"\n}\n```\n\n## 加载配置\n\n```bash\nsystemctl daemon-reload\nsystemctl restart docker\n```\n\n## 验证挂载目录是否更改\n\n```bash\ndocker info\nDocker Root Dir: /docker\n\n```\n\n```bash\ndocker ps -a\n```\n\n说明：这时候如果docker ps -a是不会有任何输出的。\n\n## 复制文件到新的挂载目录\n\n```bash\ncp -arp /var/lib/docker/* /docker/\n```\n\n说明：提示是否覆盖文件，选择是。\n\n## 重启docker\n\n```bash\nsystemctl restart docker\n```\n\n## 验证旧容器是否正常\n\n```bash\ndocker ps -a\nCONTAINER ID        IMAGE                            COMMAND             CREATED             STATUS              PORTS                                              NAMES\n11ea907c531e        jumpserver/jms_guacamole:1.5.3   \"/init\"             12 months ago       Up 4 minutes        127.0.0.1:8081->8080/tcp                           jms_guacamole\nc9b5a730f6ec        jumpserver/jms_koko:1.5.3        \"./entrypoint.sh\"   12 months ago       Up 4 minutes        0.0.0.0:2222->2222/tcp, 127.0.0.1:5000->5000/tcp   jms_koko\n```\n","slug":"docker","published":1,"updated":"2021-03-09T14:28:30.673Z","_id":"ckm1wkytg0000vvjrbnqxfib9","comments":1,"layout":"post","photos":[],"link":"","content":"<p>更改docker默认挂载目录</p>\n<h2 id=\"场景\"><a href=\"#场景\" class=\"headerlink\" title=\"场景\"></a>场景</h2><p>生产上运行了一段时间docker后，根分区使用量报警，由于根分区不是lvm类型的，所以无法做扩容，故采用新加一块硬盘，挂载到新目录/docker/，并将docker默认挂载目录改到这个目录的方法解决磁盘将满的问题。</p>\n<h3 id=\"新加磁盘并挂载\"><a href=\"#新加磁盘并挂载\" class=\"headerlink\" title=\"新加磁盘并挂载\"></a>新加磁盘并挂载</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fdisk /dev/vdb</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">过程略</span><br><span class=\"line\">mkfs.xfs /dev/vdb1</span><br><span class=\"line\">mkdir /docker</span><br><span class=\"line\">mount /dev/vdc1 /docker</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@cloud-jumpserver01 ~]<span class=\"comment\"># blkid </span></span><br><span class=\"line\">/dev/vdc1: UUID=<span class=\"string\">&quot;27d703ee-41b1-4b7e-860b-aa465b807e39&quot;</span> TYPE=<span class=\"string\">&quot;xfs&quot;</span> </span><br><span class=\"line\">cat /etc/fstab </span><br><span class=\"line\">UUID=27d703ee-41b1-4b7e-860b-aa465b807e39 /dev/vdc1               xfs     defaults        1 1</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"更改docker挂载目录\"><a href=\"#更改docker挂载目录\" class=\"headerlink\" title=\"更改docker挂载目录\"></a>更改docker挂载目录</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/docker/daemon.json </span><br><span class=\"line\">&#123;<span class=\"string\">&quot;registry-mirrors&quot;</span>: [<span class=\"string\">&quot;http://f1361db2.m.daocloud.io&quot;</span>],</span><br><span class=\"line\"><span class=\"string\">&quot;data-root&quot;</span>: <span class=\"string\">&quot;/docker&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"加载配置\"><a href=\"#加载配置\" class=\"headerlink\" title=\"加载配置\"></a>加载配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"验证挂载目录是否更改\"><a href=\"#验证挂载目录是否更改\" class=\"headerlink\" title=\"验证挂载目录是否更改\"></a>验证挂载目录是否更改</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker info</span><br><span class=\"line\">Docker Root Dir: /docker</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps -a</span><br></pre></td></tr></table></figure>\n\n<p>说明：这时候如果docker ps -a是不会有任何输出的。</p>\n<h2 id=\"复制文件到新的挂载目录\"><a href=\"#复制文件到新的挂载目录\" class=\"headerlink\" title=\"复制文件到新的挂载目录\"></a>复制文件到新的挂载目录</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp -arp /var/lib/docker/* /docker/</span><br></pre></td></tr></table></figure>\n\n<p>说明：提示是否覆盖文件，选择是。</p>\n<h2 id=\"重启docker\"><a href=\"#重启docker\" class=\"headerlink\" title=\"重启docker\"></a>重启docker</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"验证旧容器是否正常\"><a href=\"#验证旧容器是否正常\" class=\"headerlink\" title=\"验证旧容器是否正常\"></a>验证旧容器是否正常</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps -a</span><br><span class=\"line\">CONTAINER ID        IMAGE                            COMMAND             CREATED             STATUS              PORTS                                              NAMES</span><br><span class=\"line\">11ea907c531e        jumpserver/jms_guacamole:1.5.3   <span class=\"string\">&quot;/init&quot;</span>             12 months ago       Up 4 minutes        127.0.0.1:8081-&gt;8080/tcp                           jms_guacamole</span><br><span class=\"line\">c9b5a730f6ec        jumpserver/jms_koko:1.5.3        <span class=\"string\">&quot;./entrypoint.sh&quot;</span>   12 months ago       Up 4 minutes        0.0.0.0:2222-&gt;2222/tcp, 127.0.0.1:5000-&gt;5000/tcp   jms_koko</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>更改docker默认挂载目录</p>\n<h2 id=\"场景\"><a href=\"#场景\" class=\"headerlink\" title=\"场景\"></a>场景</h2><p>生产上运行了一段时间docker后，根分区使用量报警，由于根分区不是lvm类型的，所以无法做扩容，故采用新加一块硬盘，挂载到新目录/docker/，并将docker默认挂载目录改到这个目录的方法解决磁盘将满的问题。</p>\n<h3 id=\"新加磁盘并挂载\"><a href=\"#新加磁盘并挂载\" class=\"headerlink\" title=\"新加磁盘并挂载\"></a>新加磁盘并挂载</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fdisk /dev/vdb</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">过程略</span><br><span class=\"line\">mkfs.xfs /dev/vdb1</span><br><span class=\"line\">mkdir /docker</span><br><span class=\"line\">mount /dev/vdc1 /docker</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@cloud-jumpserver01 ~]<span class=\"comment\"># blkid </span></span><br><span class=\"line\">/dev/vdc1: UUID=<span class=\"string\">&quot;27d703ee-41b1-4b7e-860b-aa465b807e39&quot;</span> TYPE=<span class=\"string\">&quot;xfs&quot;</span> </span><br><span class=\"line\">cat /etc/fstab </span><br><span class=\"line\">UUID=27d703ee-41b1-4b7e-860b-aa465b807e39 /dev/vdc1               xfs     defaults        1 1</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"更改docker挂载目录\"><a href=\"#更改docker挂载目录\" class=\"headerlink\" title=\"更改docker挂载目录\"></a>更改docker挂载目录</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/docker/daemon.json </span><br><span class=\"line\">&#123;<span class=\"string\">&quot;registry-mirrors&quot;</span>: [<span class=\"string\">&quot;http://f1361db2.m.daocloud.io&quot;</span>],</span><br><span class=\"line\"><span class=\"string\">&quot;data-root&quot;</span>: <span class=\"string\">&quot;/docker&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"加载配置\"><a href=\"#加载配置\" class=\"headerlink\" title=\"加载配置\"></a>加载配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"验证挂载目录是否更改\"><a href=\"#验证挂载目录是否更改\" class=\"headerlink\" title=\"验证挂载目录是否更改\"></a>验证挂载目录是否更改</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker info</span><br><span class=\"line\">Docker Root Dir: /docker</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps -a</span><br></pre></td></tr></table></figure>\n\n<p>说明：这时候如果docker ps -a是不会有任何输出的。</p>\n<h2 id=\"复制文件到新的挂载目录\"><a href=\"#复制文件到新的挂载目录\" class=\"headerlink\" title=\"复制文件到新的挂载目录\"></a>复制文件到新的挂载目录</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp -arp /var/lib/docker/* /docker/</span><br></pre></td></tr></table></figure>\n\n<p>说明：提示是否覆盖文件，选择是。</p>\n<h2 id=\"重启docker\"><a href=\"#重启docker\" class=\"headerlink\" title=\"重启docker\"></a>重启docker</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"验证旧容器是否正常\"><a href=\"#验证旧容器是否正常\" class=\"headerlink\" title=\"验证旧容器是否正常\"></a>验证旧容器是否正常</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps -a</span><br><span class=\"line\">CONTAINER ID        IMAGE                            COMMAND             CREATED             STATUS              PORTS                                              NAMES</span><br><span class=\"line\">11ea907c531e        jumpserver/jms_guacamole:1.5.3   <span class=\"string\">&quot;/init&quot;</span>             12 months ago       Up 4 minutes        127.0.0.1:8081-&gt;8080/tcp                           jms_guacamole</span><br><span class=\"line\">c9b5a730f6ec        jumpserver/jms_koko:1.5.3        <span class=\"string\">&quot;./entrypoint.sh&quot;</span>   12 months ago       Up 4 minutes        0.0.0.0:2222-&gt;2222/tcp, 127.0.0.1:5000-&gt;5000/tcp   jms_koko</span><br></pre></td></tr></table></figure>\n"},{"title":"普通队列","date":"2020-09-20T16:00:00.000Z","_content":"\n普通队列\n\n普通的队列是一种先进先出的数据结构，元素在队列尾追加，而从队列头删除。\n\n# 什么是堆\n\n堆是一颗具有特定性质的二叉树，堆的基本要求就是堆中所有结点的值必须大于或等于（或小于或等于）其孩子结点的值，\n这也称为堆的性质；堆还有另一个性质，就是当 h > 0 时，所有叶子结点都处于第 h 或 h - 1 层（其中 h 为树的高度，完全二叉树），\n也就是说，堆应该是一颗完全二叉树；\n\n# 什么是二叉树\n\n\n\n# 优先队列\n\n优先队列不再遵循先入先出的原则，而是分为两种情况：\n\n最大优先队列，无论入队顺序，当前最大的元素优先出队。\n\n最小优先队列，无论入队顺序，当前最小的元素优先出队。\n\n比如有一个最大优先队列，它的最大元素是8，那么虽然元素8并不是队首元素，但出队的时候仍然让元素8首先出队：\n","source":"_posts/queue.md","raw":"---\ntitle: 普通队列\ndate: 2020-09-21\n\n---\n\n普通队列\n\n普通的队列是一种先进先出的数据结构，元素在队列尾追加，而从队列头删除。\n\n# 什么是堆\n\n堆是一颗具有特定性质的二叉树，堆的基本要求就是堆中所有结点的值必须大于或等于（或小于或等于）其孩子结点的值，\n这也称为堆的性质；堆还有另一个性质，就是当 h > 0 时，所有叶子结点都处于第 h 或 h - 1 层（其中 h 为树的高度，完全二叉树），\n也就是说，堆应该是一颗完全二叉树；\n\n# 什么是二叉树\n\n\n\n# 优先队列\n\n优先队列不再遵循先入先出的原则，而是分为两种情况：\n\n最大优先队列，无论入队顺序，当前最大的元素优先出队。\n\n最小优先队列，无论入队顺序，当前最小的元素优先出队。\n\n比如有一个最大优先队列，它的最大元素是8，那么虽然元素8并不是队首元素，但出队的时候仍然让元素8首先出队：\n","slug":"queue","published":1,"updated":"2021-03-09T14:27:18.490Z","_id":"ckm1wkyui0005vvjr26axhsvo","comments":1,"layout":"post","photos":[],"link":"","content":"<p>普通队列</p>\n<p>普通的队列是一种先进先出的数据结构，元素在队列尾追加，而从队列头删除。</p>\n<h1 id=\"什么是堆\"><a href=\"#什么是堆\" class=\"headerlink\" title=\"什么是堆\"></a>什么是堆</h1><p>堆是一颗具有特定性质的二叉树，堆的基本要求就是堆中所有结点的值必须大于或等于（或小于或等于）其孩子结点的值，<br>这也称为堆的性质；堆还有另一个性质，就是当 h &gt; 0 时，所有叶子结点都处于第 h 或 h - 1 层（其中 h 为树的高度，完全二叉树），<br>也就是说，堆应该是一颗完全二叉树；</p>\n<h1 id=\"什么是二叉树\"><a href=\"#什么是二叉树\" class=\"headerlink\" title=\"什么是二叉树\"></a>什么是二叉树</h1><h1 id=\"优先队列\"><a href=\"#优先队列\" class=\"headerlink\" title=\"优先队列\"></a>优先队列</h1><p>优先队列不再遵循先入先出的原则，而是分为两种情况：</p>\n<p>最大优先队列，无论入队顺序，当前最大的元素优先出队。</p>\n<p>最小优先队列，无论入队顺序，当前最小的元素优先出队。</p>\n<p>比如有一个最大优先队列，它的最大元素是8，那么虽然元素8并不是队首元素，但出队的时候仍然让元素8首先出队：</p>\n","site":{"data":{}},"excerpt":"","more":"<p>普通队列</p>\n<p>普通的队列是一种先进先出的数据结构，元素在队列尾追加，而从队列头删除。</p>\n<h1 id=\"什么是堆\"><a href=\"#什么是堆\" class=\"headerlink\" title=\"什么是堆\"></a>什么是堆</h1><p>堆是一颗具有特定性质的二叉树，堆的基本要求就是堆中所有结点的值必须大于或等于（或小于或等于）其孩子结点的值，<br>这也称为堆的性质；堆还有另一个性质，就是当 h &gt; 0 时，所有叶子结点都处于第 h 或 h - 1 层（其中 h 为树的高度，完全二叉树），<br>也就是说，堆应该是一颗完全二叉树；</p>\n<h1 id=\"什么是二叉树\"><a href=\"#什么是二叉树\" class=\"headerlink\" title=\"什么是二叉树\"></a>什么是二叉树</h1><h1 id=\"优先队列\"><a href=\"#优先队列\" class=\"headerlink\" title=\"优先队列\"></a>优先队列</h1><p>优先队列不再遵循先入先出的原则，而是分为两种情况：</p>\n<p>最大优先队列，无论入队顺序，当前最大的元素优先出队。</p>\n<p>最小优先队列，无论入队顺序，当前最小的元素优先出队。</p>\n<p>比如有一个最大优先队列，它的最大元素是8，那么虽然元素8并不是队首元素，但出队的时候仍然让元素8首先出队：</p>\n"},{"title":"iptables 详解","date":"2021-03-09T11:03:03.000Z","_content":"\n\n# iptables 详解\n\niptables其实不是真正的防火墙，我们可以把它理解成一个客户端代理，用户通过iptables这个代理，将用户的安全设定执行到对应的\"安全框架\"中，这个\"安全框架\"才是真正的防火墙，这个框架的名字叫netfilter\n\nnetfilter才是防火墙真正的安全框架（framework），netfilter位于内核空间。\n\niptables其实是一个命令行工具，位于用户空间，我们用这个工具操作真正的框架。\n\niptables 的表（tables） 和链（chains）\n描述完iptables术语后、相信大家对iptables的表和链有了初步的了解了、默认情况下。Iptables，根据功能和表的定义划分、最常用的有三个表，分别是filter,nat mangle.其中每个表又有各自包含不同的操作链（chains）\n\n![](analysis/iptables.png)\n\n#### 处理动作\n处理动作在iptables中被称为target（这样说并不准确，我们暂且这样称呼），动作也可以分为基本动作和扩展动作。\n\n此处列出一些常用的动作，之后的文章会对它们进行详细的示例与总结：\n\n* `ACCEPT`：允许数据包通过。\n\n* `DROP`：直接丢弃数据包，不给任何回应信息，这时候客户端会感觉自己的请求泥牛入海了，过了超时时间才会有反应。\n\n* `REJECT`：拒绝数据包通过，必要时会给数据发送端一个响应的信息，客户端刚请求就会收到拒绝的信息。\n\n* `SNAT`：源地址转换，解决内网用户用同一个公网地址上网的问题。\n\n* `MASQUERADE`：是SNAT的一种特殊形式，适用于动态的、临时会变的ip上。\n\n* `DNAT`：目标地址转换。\n\n* `REDIRECT`：在本机做端口映射。\n\n* `LOG`：在/var/log/messages文件中记录日志信息，然后将数据包传递给下一条规则，也就是说除了记录以外不对数据包做任何其他操作，仍然让下一条规则去匹配。\n\n### iptables具有以下4个内置表\n\n\n#### 1. Filter\n\n```bash\nFilter表\n\n和主机自身相关、负责防火墙（过滤本机流入、流出数据包）。\n\n是iptables默认使用的表、这个表定义了三个链（chains）说明如下\n\nINPUT  负责过滤所有目标地址是主机（防火墙）地址的数据包、通俗的讲、就是过滤进入主机的数据包。\n\nFORWARD  负责转发流经主机但不进入本机的数据包、起转发作用、和NAT表关系很大、后面会详细介绍\n\nOUTPUT  处理所有原地址是本机地址的数据包、通俗的讲就是处理从主机发出去的数据包。\n```\n\n#### 2. NAT表\n\n```bash\nNAT表\n\n是网络地址转换的意思。即负责来源与目的IP地址和port的转换、和主机本身无关。一般用于局域网多人共享上网或者内网IP映射外网IP及不同端口转换服务等功能。Nat表的功能很重要、这个表定义了三个链（chains）\n\nOUTPUT\n\n主机发出去的数据包有关、在数据包路由之前改变主机产生的数据包的目的地址等。\n\nPREROUTING\n\n在数据包刚到达防火墙时、进行路由判断之前执行的规则、改变包的目的地址（DNAT功能）、端口等（通俗比喻，就是收信时、根据规则重写收件人的地址、这看上去不地道啊、）把公司IP映射到局域网的机器上、此链多用于把外部IP地址端口的服务、映射为内部IP地址及端口\n\nPOSTROUTING\n\n在数据包离开防火墙时进行路由判断之后执行的规则、改变包的源地址（SNAT）、端口等（通俗比喻、就是寄信时写好发件人的地址、要让人家回信是能够有地址可回）刺链多用于局域网共享上网，把所有局域网的地址、转换为公网地址上\n```\n\n#### 3. Mangle\n\n```bash\nMangle\n\n主要负责修改数据包中特殊的路由标记，如TTL、TOS、MARK等、这个表定义了5个链（chains）\n\nINPUT\n\n同filter表的INPUT\n\nFORWARD\n\n同filter表的FORWARD\n\nOUTPUT  同fileter表的OUTPUT\n\nPREROUTING  同nat表的PREROUTING\n\nPOSTOUTING  同nat表的POSTOUTING\n\n```\n\n#### 4. Raw\n\n```bash\n\n\n```\n\n后面在说\n\n### 参数定义\n\n```bash\n-t：指定要操纵的表； `table`\n\n-A：向规则链中添加条目；`Append`\n\n-D：从规则链中删除条目； `delete`\n\n-I：向规则链中插入条目；`insert`\n\n-R：替换规则链中的条目；`replace`\n\n-L：显示规则链中已有的条目；``\n\n-F：清除规则链中已有的条目；`flush`\n\n-Z：清空规则链中的数据包计算器和字节计数器；\n\n-N：创建新的用户自定义规则链；\n\n-P：定义规则链中的默认目标；`policy`\n\n-h：显示帮助信息；`help`\n\n-p：指定要匹配的数据包协议类型；`proto\tprotocol: by number or name, eg. tcp`\n\n-s：指定要匹配的数据包源ip地址；`source`\n\n-d：指定要匹配的数据包目标ip地址；`destination`\n\n-j：指定要跳转的目标；`jump`\n\n-i：指定数据包进入本机的网络接口（网卡）；`input`\n\n-o：指定数据包离开本机的网络接口（网卡）；`onput`\n\n--sport：匹配来源端口号；`source port`\n\n--dport：匹配目标端口号。`destination port`\n\n下述规则允许端口80上的传入HTTP通信。\n```\n\n#### 例如\n\n```bash\n\n$ iptables -A INPUT -i eth1 -p tcp --dport 80 -d 1.2.3.4 -j ACCEPT\n\n```\n\n-A 表示我们正在添加新规则。缺省情况下，除非您指定另一个表，否则iptables会将所有新规则添加到 Filter 表中。\n\n-i 标志指定将规则应用到的设备。如果您未指定设备，则iptables会将规则应用于所有传入流量，而与设备无关。\n\n-p 标志指定要处理的数据包协议，在本例中为TCP。\n\n–dport 标志指定目标端口，该端口为80。\n\n-d 指定目标IP地址，即1.2.3.4。如果未指定目标IP地址，则该规则将适用于eth1上的所有传入流量，而不管IP地址如何。\n\n-j 指定要执行的操作或JUMP操作。在这里，我们使用接受策略来接受数据包。\n\n开放端口指定插入第几行\n\n```bash\n# --line-number 展示行号\n$ iptables -nL  --line-number\n\n# 在第四行插入iptables\n$ iptables -I INPUT 4 -p tcp --dport 1234 -j ACCEPT\n\n```\n\n禁止所有INPUT\n\n```bash\n$ iptables -P INPUT DROP\n$ iptables -P OUTPUT DROP\n```\n\n\n我现在用一个测试软件来测试连通性\n\n### 四、nc搭建简单内网聊天室\n\n本机-本机 ， 单台机器开了两个shell窗口，当一个窗口输入消息时，另一个窗口也会同步显示\n\n```bash\nncat -v -lp 8080\n```\n\n#### 服务端\n\n```bash\n[root@localhost ~]$ ncat -v -lp 8080\nNcat: Version 7.50 ( https://nmap.org/ncat )\nNcat: Listening on :::8080\nNcat: Listening on 0.0.0.0:8080\nNcat: Connection from 127.0.0.1.\nNcat: Connection from 127.0.0.1:45996.\nxxx\nxxx\n```\n\n##### 客户端\n\n```bash\n[root@localhost ~]$ nc -v 127.0.0.1 8080\nNcat: Version 7.50 ( https://nmap.org/ncat )\nNcat: Connected to 127.0.0.1:8080.\nxxx\nxxx\n```\n\n### NAT 作用及使用\n\n我们现在讲一下nat表主要的作用\n\n端口转发\n\n```bash\n\n# 将 8080 转发到80 端口上面\n\n $  iptables -t nat -A PREROUTING -p tcp --dport 8080 -j REDERECT --to-ports 8000\n\n# 如果防火墙默认是关闭的状态\n\n则需要设置以下规则\n\n$ iptables -A INPUT -p tcp --dport 8000 -j ACCEPT\n\n$ iptables -A OUTPUT -p tcp --sport 8000 -j ACCEPT\n\n\n```\n\n#### 流量转发\n\n##### 将流量转发到服务器上面\n\n在 10.10.13.111 上 设置 将 对 10.10.13.111的请求转发到10.10.13.110 并实现 逆转,\n\n```bash\niptables -t nat -I PREROUTING -p tcp --dport 8001 -d 10.10.13.111 -j DNAT --to-destination 10.10.13.110\n\niptables -t nat -I POSTROUTING -p tcp --dport 8001 -d 10.10.13.110 -j SNAT --to-destination 10.10.13.111\n```\n","source":"_posts/analysis.md","raw":"---\ntitle: iptables 详解\ndate: 2021-03-09 19:03:03\ntags:\n- iptables\n---\n\n\n# iptables 详解\n\niptables其实不是真正的防火墙，我们可以把它理解成一个客户端代理，用户通过iptables这个代理，将用户的安全设定执行到对应的\"安全框架\"中，这个\"安全框架\"才是真正的防火墙，这个框架的名字叫netfilter\n\nnetfilter才是防火墙真正的安全框架（framework），netfilter位于内核空间。\n\niptables其实是一个命令行工具，位于用户空间，我们用这个工具操作真正的框架。\n\niptables 的表（tables） 和链（chains）\n描述完iptables术语后、相信大家对iptables的表和链有了初步的了解了、默认情况下。Iptables，根据功能和表的定义划分、最常用的有三个表，分别是filter,nat mangle.其中每个表又有各自包含不同的操作链（chains）\n\n![](analysis/iptables.png)\n\n#### 处理动作\n处理动作在iptables中被称为target（这样说并不准确，我们暂且这样称呼），动作也可以分为基本动作和扩展动作。\n\n此处列出一些常用的动作，之后的文章会对它们进行详细的示例与总结：\n\n* `ACCEPT`：允许数据包通过。\n\n* `DROP`：直接丢弃数据包，不给任何回应信息，这时候客户端会感觉自己的请求泥牛入海了，过了超时时间才会有反应。\n\n* `REJECT`：拒绝数据包通过，必要时会给数据发送端一个响应的信息，客户端刚请求就会收到拒绝的信息。\n\n* `SNAT`：源地址转换，解决内网用户用同一个公网地址上网的问题。\n\n* `MASQUERADE`：是SNAT的一种特殊形式，适用于动态的、临时会变的ip上。\n\n* `DNAT`：目标地址转换。\n\n* `REDIRECT`：在本机做端口映射。\n\n* `LOG`：在/var/log/messages文件中记录日志信息，然后将数据包传递给下一条规则，也就是说除了记录以外不对数据包做任何其他操作，仍然让下一条规则去匹配。\n\n### iptables具有以下4个内置表\n\n\n#### 1. Filter\n\n```bash\nFilter表\n\n和主机自身相关、负责防火墙（过滤本机流入、流出数据包）。\n\n是iptables默认使用的表、这个表定义了三个链（chains）说明如下\n\nINPUT  负责过滤所有目标地址是主机（防火墙）地址的数据包、通俗的讲、就是过滤进入主机的数据包。\n\nFORWARD  负责转发流经主机但不进入本机的数据包、起转发作用、和NAT表关系很大、后面会详细介绍\n\nOUTPUT  处理所有原地址是本机地址的数据包、通俗的讲就是处理从主机发出去的数据包。\n```\n\n#### 2. NAT表\n\n```bash\nNAT表\n\n是网络地址转换的意思。即负责来源与目的IP地址和port的转换、和主机本身无关。一般用于局域网多人共享上网或者内网IP映射外网IP及不同端口转换服务等功能。Nat表的功能很重要、这个表定义了三个链（chains）\n\nOUTPUT\n\n主机发出去的数据包有关、在数据包路由之前改变主机产生的数据包的目的地址等。\n\nPREROUTING\n\n在数据包刚到达防火墙时、进行路由判断之前执行的规则、改变包的目的地址（DNAT功能）、端口等（通俗比喻，就是收信时、根据规则重写收件人的地址、这看上去不地道啊、）把公司IP映射到局域网的机器上、此链多用于把外部IP地址端口的服务、映射为内部IP地址及端口\n\nPOSTROUTING\n\n在数据包离开防火墙时进行路由判断之后执行的规则、改变包的源地址（SNAT）、端口等（通俗比喻、就是寄信时写好发件人的地址、要让人家回信是能够有地址可回）刺链多用于局域网共享上网，把所有局域网的地址、转换为公网地址上\n```\n\n#### 3. Mangle\n\n```bash\nMangle\n\n主要负责修改数据包中特殊的路由标记，如TTL、TOS、MARK等、这个表定义了5个链（chains）\n\nINPUT\n\n同filter表的INPUT\n\nFORWARD\n\n同filter表的FORWARD\n\nOUTPUT  同fileter表的OUTPUT\n\nPREROUTING  同nat表的PREROUTING\n\nPOSTOUTING  同nat表的POSTOUTING\n\n```\n\n#### 4. Raw\n\n```bash\n\n\n```\n\n后面在说\n\n### 参数定义\n\n```bash\n-t：指定要操纵的表； `table`\n\n-A：向规则链中添加条目；`Append`\n\n-D：从规则链中删除条目； `delete`\n\n-I：向规则链中插入条目；`insert`\n\n-R：替换规则链中的条目；`replace`\n\n-L：显示规则链中已有的条目；``\n\n-F：清除规则链中已有的条目；`flush`\n\n-Z：清空规则链中的数据包计算器和字节计数器；\n\n-N：创建新的用户自定义规则链；\n\n-P：定义规则链中的默认目标；`policy`\n\n-h：显示帮助信息；`help`\n\n-p：指定要匹配的数据包协议类型；`proto\tprotocol: by number or name, eg. tcp`\n\n-s：指定要匹配的数据包源ip地址；`source`\n\n-d：指定要匹配的数据包目标ip地址；`destination`\n\n-j：指定要跳转的目标；`jump`\n\n-i：指定数据包进入本机的网络接口（网卡）；`input`\n\n-o：指定数据包离开本机的网络接口（网卡）；`onput`\n\n--sport：匹配来源端口号；`source port`\n\n--dport：匹配目标端口号。`destination port`\n\n下述规则允许端口80上的传入HTTP通信。\n```\n\n#### 例如\n\n```bash\n\n$ iptables -A INPUT -i eth1 -p tcp --dport 80 -d 1.2.3.4 -j ACCEPT\n\n```\n\n-A 表示我们正在添加新规则。缺省情况下，除非您指定另一个表，否则iptables会将所有新规则添加到 Filter 表中。\n\n-i 标志指定将规则应用到的设备。如果您未指定设备，则iptables会将规则应用于所有传入流量，而与设备无关。\n\n-p 标志指定要处理的数据包协议，在本例中为TCP。\n\n–dport 标志指定目标端口，该端口为80。\n\n-d 指定目标IP地址，即1.2.3.4。如果未指定目标IP地址，则该规则将适用于eth1上的所有传入流量，而不管IP地址如何。\n\n-j 指定要执行的操作或JUMP操作。在这里，我们使用接受策略来接受数据包。\n\n开放端口指定插入第几行\n\n```bash\n# --line-number 展示行号\n$ iptables -nL  --line-number\n\n# 在第四行插入iptables\n$ iptables -I INPUT 4 -p tcp --dport 1234 -j ACCEPT\n\n```\n\n禁止所有INPUT\n\n```bash\n$ iptables -P INPUT DROP\n$ iptables -P OUTPUT DROP\n```\n\n\n我现在用一个测试软件来测试连通性\n\n### 四、nc搭建简单内网聊天室\n\n本机-本机 ， 单台机器开了两个shell窗口，当一个窗口输入消息时，另一个窗口也会同步显示\n\n```bash\nncat -v -lp 8080\n```\n\n#### 服务端\n\n```bash\n[root@localhost ~]$ ncat -v -lp 8080\nNcat: Version 7.50 ( https://nmap.org/ncat )\nNcat: Listening on :::8080\nNcat: Listening on 0.0.0.0:8080\nNcat: Connection from 127.0.0.1.\nNcat: Connection from 127.0.0.1:45996.\nxxx\nxxx\n```\n\n##### 客户端\n\n```bash\n[root@localhost ~]$ nc -v 127.0.0.1 8080\nNcat: Version 7.50 ( https://nmap.org/ncat )\nNcat: Connected to 127.0.0.1:8080.\nxxx\nxxx\n```\n\n### NAT 作用及使用\n\n我们现在讲一下nat表主要的作用\n\n端口转发\n\n```bash\n\n# 将 8080 转发到80 端口上面\n\n $  iptables -t nat -A PREROUTING -p tcp --dport 8080 -j REDERECT --to-ports 8000\n\n# 如果防火墙默认是关闭的状态\n\n则需要设置以下规则\n\n$ iptables -A INPUT -p tcp --dport 8000 -j ACCEPT\n\n$ iptables -A OUTPUT -p tcp --sport 8000 -j ACCEPT\n\n\n```\n\n#### 流量转发\n\n##### 将流量转发到服务器上面\n\n在 10.10.13.111 上 设置 将 对 10.10.13.111的请求转发到10.10.13.110 并实现 逆转,\n\n```bash\niptables -t nat -I PREROUTING -p tcp --dport 8001 -d 10.10.13.111 -j DNAT --to-destination 10.10.13.110\n\niptables -t nat -I POSTROUTING -p tcp --dport 8001 -d 10.10.13.110 -j SNAT --to-destination 10.10.13.111\n```\n","slug":"analysis","published":1,"updated":"2021-03-09T13:51:26.310Z","_id":"ckm1wo3ch00001gjrfjuk1djv","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"iptables-详解\"><a href=\"#iptables-详解\" class=\"headerlink\" title=\"iptables 详解\"></a>iptables 详解</h1><p>iptables其实不是真正的防火墙，我们可以把它理解成一个客户端代理，用户通过iptables这个代理，将用户的安全设定执行到对应的”安全框架”中，这个”安全框架”才是真正的防火墙，这个框架的名字叫netfilter</p>\n<p>netfilter才是防火墙真正的安全框架（framework），netfilter位于内核空间。</p>\n<p>iptables其实是一个命令行工具，位于用户空间，我们用这个工具操作真正的框架。</p>\n<p>iptables 的表（tables） 和链（chains）<br>描述完iptables术语后、相信大家对iptables的表和链有了初步的了解了、默认情况下。Iptables，根据功能和表的定义划分、最常用的有三个表，分别是filter,nat mangle.其中每个表又有各自包含不同的操作链（chains）</p>\n<p><img src=\"analysis/iptables.png\"></p>\n<h4 id=\"处理动作\"><a href=\"#处理动作\" class=\"headerlink\" title=\"处理动作\"></a>处理动作</h4><p>处理动作在iptables中被称为target（这样说并不准确，我们暂且这样称呼），动作也可以分为基本动作和扩展动作。</p>\n<p>此处列出一些常用的动作，之后的文章会对它们进行详细的示例与总结：</p>\n<ul>\n<li><p><code>ACCEPT</code>：允许数据包通过。</p>\n</li>\n<li><p><code>DROP</code>：直接丢弃数据包，不给任何回应信息，这时候客户端会感觉自己的请求泥牛入海了，过了超时时间才会有反应。</p>\n</li>\n<li><p><code>REJECT</code>：拒绝数据包通过，必要时会给数据发送端一个响应的信息，客户端刚请求就会收到拒绝的信息。</p>\n</li>\n<li><p><code>SNAT</code>：源地址转换，解决内网用户用同一个公网地址上网的问题。</p>\n</li>\n<li><p><code>MASQUERADE</code>：是SNAT的一种特殊形式，适用于动态的、临时会变的ip上。</p>\n</li>\n<li><p><code>DNAT</code>：目标地址转换。</p>\n</li>\n<li><p><code>REDIRECT</code>：在本机做端口映射。</p>\n</li>\n<li><p><code>LOG</code>：在/var/log/messages文件中记录日志信息，然后将数据包传递给下一条规则，也就是说除了记录以外不对数据包做任何其他操作，仍然让下一条规则去匹配。</p>\n</li>\n</ul>\n<h3 id=\"iptables具有以下4个内置表\"><a href=\"#iptables具有以下4个内置表\" class=\"headerlink\" title=\"iptables具有以下4个内置表\"></a>iptables具有以下4个内置表</h3><h4 id=\"1-Filter\"><a href=\"#1-Filter\" class=\"headerlink\" title=\"1. Filter\"></a>1. Filter</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Filter表</span><br><span class=\"line\"></span><br><span class=\"line\">和主机自身相关、负责防火墙（过滤本机流入、流出数据包）。</span><br><span class=\"line\"></span><br><span class=\"line\">是iptables默认使用的表、这个表定义了三个链（chains）说明如下</span><br><span class=\"line\"></span><br><span class=\"line\">INPUT  负责过滤所有目标地址是主机（防火墙）地址的数据包、通俗的讲、就是过滤进入主机的数据包。</span><br><span class=\"line\"></span><br><span class=\"line\">FORWARD  负责转发流经主机但不进入本机的数据包、起转发作用、和NAT表关系很大、后面会详细介绍</span><br><span class=\"line\"></span><br><span class=\"line\">OUTPUT  处理所有原地址是本机地址的数据包、通俗的讲就是处理从主机发出去的数据包。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-NAT表\"><a href=\"#2-NAT表\" class=\"headerlink\" title=\"2. NAT表\"></a>2. NAT表</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NAT表</span><br><span class=\"line\"></span><br><span class=\"line\">是网络地址转换的意思。即负责来源与目的IP地址和port的转换、和主机本身无关。一般用于局域网多人共享上网或者内网IP映射外网IP及不同端口转换服务等功能。Nat表的功能很重要、这个表定义了三个链（chains）</span><br><span class=\"line\"></span><br><span class=\"line\">OUTPUT</span><br><span class=\"line\"></span><br><span class=\"line\">主机发出去的数据包有关、在数据包路由之前改变主机产生的数据包的目的地址等。</span><br><span class=\"line\"></span><br><span class=\"line\">PREROUTING</span><br><span class=\"line\"></span><br><span class=\"line\">在数据包刚到达防火墙时、进行路由判断之前执行的规则、改变包的目的地址（DNAT功能）、端口等（通俗比喻，就是收信时、根据规则重写收件人的地址、这看上去不地道啊、）把公司IP映射到局域网的机器上、此链多用于把外部IP地址端口的服务、映射为内部IP地址及端口</span><br><span class=\"line\"></span><br><span class=\"line\">POSTROUTING</span><br><span class=\"line\"></span><br><span class=\"line\">在数据包离开防火墙时进行路由判断之后执行的规则、改变包的源地址（SNAT）、端口等（通俗比喻、就是寄信时写好发件人的地址、要让人家回信是能够有地址可回）刺链多用于局域网共享上网，把所有局域网的地址、转换为公网地址上</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-Mangle\"><a href=\"#3-Mangle\" class=\"headerlink\" title=\"3. Mangle\"></a>3. Mangle</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mangle</span><br><span class=\"line\"></span><br><span class=\"line\">主要负责修改数据包中特殊的路由标记，如TTL、TOS、MARK等、这个表定义了5个链（chains）</span><br><span class=\"line\"></span><br><span class=\"line\">INPUT</span><br><span class=\"line\"></span><br><span class=\"line\">同filter表的INPUT</span><br><span class=\"line\"></span><br><span class=\"line\">FORWARD</span><br><span class=\"line\"></span><br><span class=\"line\">同filter表的FORWARD</span><br><span class=\"line\"></span><br><span class=\"line\">OUTPUT  同fileter表的OUTPUT</span><br><span class=\"line\"></span><br><span class=\"line\">PREROUTING  同nat表的PREROUTING</span><br><span class=\"line\"></span><br><span class=\"line\">POSTOUTING  同nat表的POSTOUTING</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-Raw\"><a href=\"#4-Raw\" class=\"headerlink\" title=\"4. Raw\"></a>4. Raw</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>后面在说</p>\n<h3 id=\"参数定义\"><a href=\"#参数定义\" class=\"headerlink\" title=\"参数定义\"></a>参数定义</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-t：指定要操纵的表； `table`</span><br><span class=\"line\"></span><br><span class=\"line\">-A：向规则链中添加条目；`Append`</span><br><span class=\"line\"></span><br><span class=\"line\">-D：从规则链中删除条目； `delete`</span><br><span class=\"line\"></span><br><span class=\"line\">-I：向规则链中插入条目；`insert`</span><br><span class=\"line\"></span><br><span class=\"line\">-R：替换规则链中的条目；`replace`</span><br><span class=\"line\"></span><br><span class=\"line\">-L：显示规则链中已有的条目；``</span><br><span class=\"line\"></span><br><span class=\"line\">-F：清除规则链中已有的条目；`flush`</span><br><span class=\"line\"></span><br><span class=\"line\">-Z：清空规则链中的数据包计算器和字节计数器；</span><br><span class=\"line\"></span><br><span class=\"line\">-N：创建新的用户自定义规则链；</span><br><span class=\"line\"></span><br><span class=\"line\">-P：定义规则链中的默认目标；`policy`</span><br><span class=\"line\"></span><br><span class=\"line\">-h：显示帮助信息；`<span class=\"built_in\">help</span>`</span><br><span class=\"line\"></span><br><span class=\"line\">-p：指定要匹配的数据包协议类型；`proto\tprotocol: by number or name, eg. tcp`</span><br><span class=\"line\"></span><br><span class=\"line\">-s：指定要匹配的数据包源ip地址；`<span class=\"built_in\">source</span>`</span><br><span class=\"line\"></span><br><span class=\"line\">-d：指定要匹配的数据包目标ip地址；`destination`</span><br><span class=\"line\"></span><br><span class=\"line\">-j：指定要跳转的目标；`jump`</span><br><span class=\"line\"></span><br><span class=\"line\">-i：指定数据包进入本机的网络接口（网卡）；`input`</span><br><span class=\"line\"></span><br><span class=\"line\">-o：指定数据包离开本机的网络接口（网卡）；`onput`</span><br><span class=\"line\"></span><br><span class=\"line\">--sport：匹配来源端口号；`<span class=\"built_in\">source</span> port`</span><br><span class=\"line\"></span><br><span class=\"line\">--dport：匹配目标端口号。`destination port`</span><br><span class=\"line\"></span><br><span class=\"line\">下述规则允许端口80上的传入HTTP通信。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"例如\"><a href=\"#例如\" class=\"headerlink\" title=\"例如\"></a>例如</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">$ iptables -A INPUT -i eth1 -p tcp --dport 80 -d 1.2.3.4 -j ACCEPT</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>-A 表示我们正在添加新规则。缺省情况下，除非您指定另一个表，否则iptables会将所有新规则添加到 Filter 表中。</p>\n<p>-i 标志指定将规则应用到的设备。如果您未指定设备，则iptables会将规则应用于所有传入流量，而与设备无关。</p>\n<p>-p 标志指定要处理的数据包协议，在本例中为TCP。</p>\n<p>–dport 标志指定目标端口，该端口为80。</p>\n<p>-d 指定目标IP地址，即1.2.3.4。如果未指定目标IP地址，则该规则将适用于eth1上的所有传入流量，而不管IP地址如何。</p>\n<p>-j 指定要执行的操作或JUMP操作。在这里，我们使用接受策略来接受数据包。</p>\n<p>开放端口指定插入第几行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># --line-number 展示行号</span></span><br><span class=\"line\">$ iptables -nL  --line-number</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在第四行插入iptables</span></span><br><span class=\"line\">$ iptables -I INPUT 4 -p tcp --dport 1234 -j ACCEPT</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>禁止所有INPUT</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ iptables -P INPUT DROP</span><br><span class=\"line\">$ iptables -P OUTPUT DROP</span><br></pre></td></tr></table></figure>\n\n\n<p>我现在用一个测试软件来测试连通性</p>\n<h3 id=\"四、nc搭建简单内网聊天室\"><a href=\"#四、nc搭建简单内网聊天室\" class=\"headerlink\" title=\"四、nc搭建简单内网聊天室\"></a>四、nc搭建简单内网聊天室</h3><p>本机-本机 ， 单台机器开了两个shell窗口，当一个窗口输入消息时，另一个窗口也会同步显示</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ncat -v -lp 8080</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"服务端\"><a href=\"#服务端\" class=\"headerlink\" title=\"服务端\"></a>服务端</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]$ ncat -v -lp 8080</span><br><span class=\"line\">Ncat: Version 7.50 ( https://nmap.org/ncat )</span><br><span class=\"line\">Ncat: Listening on :::8080</span><br><span class=\"line\">Ncat: Listening on 0.0.0.0:8080</span><br><span class=\"line\">Ncat: Connection from 127.0.0.1.</span><br><span class=\"line\">Ncat: Connection from 127.0.0.1:45996.</span><br><span class=\"line\">xxx</span><br><span class=\"line\">xxx</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]$ nc -v 127.0.0.1 8080</span><br><span class=\"line\">Ncat: Version 7.50 ( https://nmap.org/ncat )</span><br><span class=\"line\">Ncat: Connected to 127.0.0.1:8080.</span><br><span class=\"line\">xxx</span><br><span class=\"line\">xxx</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"NAT-作用及使用\"><a href=\"#NAT-作用及使用\" class=\"headerlink\" title=\"NAT 作用及使用\"></a>NAT 作用及使用</h3><p>我们现在讲一下nat表主要的作用</p>\n<p>端口转发</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 8080 转发到80 端口上面</span></span><br><span class=\"line\"></span><br><span class=\"line\"> $  iptables -t nat -A PREROUTING -p tcp --dport 8080 -j REDERECT --to-ports 8000</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果防火墙默认是关闭的状态</span></span><br><span class=\"line\"></span><br><span class=\"line\">则需要设置以下规则</span><br><span class=\"line\"></span><br><span class=\"line\">$ iptables -A INPUT -p tcp --dport 8000 -j ACCEPT</span><br><span class=\"line\"></span><br><span class=\"line\">$ iptables -A OUTPUT -p tcp --sport 8000 -j ACCEPT</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"流量转发\"><a href=\"#流量转发\" class=\"headerlink\" title=\"流量转发\"></a>流量转发</h4><h5 id=\"将流量转发到服务器上面\"><a href=\"#将流量转发到服务器上面\" class=\"headerlink\" title=\"将流量转发到服务器上面\"></a>将流量转发到服务器上面</h5><p>在 10.10.13.111 上 设置 将 对 10.10.13.111的请求转发到10.10.13.110 并实现 逆转,</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iptables -t nat -I PREROUTING -p tcp --dport 8001 -d 10.10.13.111 -j DNAT --to-destination 10.10.13.110</span><br><span class=\"line\"></span><br><span class=\"line\">iptables -t nat -I POSTROUTING -p tcp --dport 8001 -d 10.10.13.110 -j SNAT --to-destination 10.10.13.111</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"iptables-详解\"><a href=\"#iptables-详解\" class=\"headerlink\" title=\"iptables 详解\"></a>iptables 详解</h1><p>iptables其实不是真正的防火墙，我们可以把它理解成一个客户端代理，用户通过iptables这个代理，将用户的安全设定执行到对应的”安全框架”中，这个”安全框架”才是真正的防火墙，这个框架的名字叫netfilter</p>\n<p>netfilter才是防火墙真正的安全框架（framework），netfilter位于内核空间。</p>\n<p>iptables其实是一个命令行工具，位于用户空间，我们用这个工具操作真正的框架。</p>\n<p>iptables 的表（tables） 和链（chains）<br>描述完iptables术语后、相信大家对iptables的表和链有了初步的了解了、默认情况下。Iptables，根据功能和表的定义划分、最常用的有三个表，分别是filter,nat mangle.其中每个表又有各自包含不同的操作链（chains）</p>\n<p><img src=\"analysis/iptables.png\"></p>\n<h4 id=\"处理动作\"><a href=\"#处理动作\" class=\"headerlink\" title=\"处理动作\"></a>处理动作</h4><p>处理动作在iptables中被称为target（这样说并不准确，我们暂且这样称呼），动作也可以分为基本动作和扩展动作。</p>\n<p>此处列出一些常用的动作，之后的文章会对它们进行详细的示例与总结：</p>\n<ul>\n<li><p><code>ACCEPT</code>：允许数据包通过。</p>\n</li>\n<li><p><code>DROP</code>：直接丢弃数据包，不给任何回应信息，这时候客户端会感觉自己的请求泥牛入海了，过了超时时间才会有反应。</p>\n</li>\n<li><p><code>REJECT</code>：拒绝数据包通过，必要时会给数据发送端一个响应的信息，客户端刚请求就会收到拒绝的信息。</p>\n</li>\n<li><p><code>SNAT</code>：源地址转换，解决内网用户用同一个公网地址上网的问题。</p>\n</li>\n<li><p><code>MASQUERADE</code>：是SNAT的一种特殊形式，适用于动态的、临时会变的ip上。</p>\n</li>\n<li><p><code>DNAT</code>：目标地址转换。</p>\n</li>\n<li><p><code>REDIRECT</code>：在本机做端口映射。</p>\n</li>\n<li><p><code>LOG</code>：在/var/log/messages文件中记录日志信息，然后将数据包传递给下一条规则，也就是说除了记录以外不对数据包做任何其他操作，仍然让下一条规则去匹配。</p>\n</li>\n</ul>\n<h3 id=\"iptables具有以下4个内置表\"><a href=\"#iptables具有以下4个内置表\" class=\"headerlink\" title=\"iptables具有以下4个内置表\"></a>iptables具有以下4个内置表</h3><h4 id=\"1-Filter\"><a href=\"#1-Filter\" class=\"headerlink\" title=\"1. Filter\"></a>1. Filter</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Filter表</span><br><span class=\"line\"></span><br><span class=\"line\">和主机自身相关、负责防火墙（过滤本机流入、流出数据包）。</span><br><span class=\"line\"></span><br><span class=\"line\">是iptables默认使用的表、这个表定义了三个链（chains）说明如下</span><br><span class=\"line\"></span><br><span class=\"line\">INPUT  负责过滤所有目标地址是主机（防火墙）地址的数据包、通俗的讲、就是过滤进入主机的数据包。</span><br><span class=\"line\"></span><br><span class=\"line\">FORWARD  负责转发流经主机但不进入本机的数据包、起转发作用、和NAT表关系很大、后面会详细介绍</span><br><span class=\"line\"></span><br><span class=\"line\">OUTPUT  处理所有原地址是本机地址的数据包、通俗的讲就是处理从主机发出去的数据包。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-NAT表\"><a href=\"#2-NAT表\" class=\"headerlink\" title=\"2. NAT表\"></a>2. NAT表</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NAT表</span><br><span class=\"line\"></span><br><span class=\"line\">是网络地址转换的意思。即负责来源与目的IP地址和port的转换、和主机本身无关。一般用于局域网多人共享上网或者内网IP映射外网IP及不同端口转换服务等功能。Nat表的功能很重要、这个表定义了三个链（chains）</span><br><span class=\"line\"></span><br><span class=\"line\">OUTPUT</span><br><span class=\"line\"></span><br><span class=\"line\">主机发出去的数据包有关、在数据包路由之前改变主机产生的数据包的目的地址等。</span><br><span class=\"line\"></span><br><span class=\"line\">PREROUTING</span><br><span class=\"line\"></span><br><span class=\"line\">在数据包刚到达防火墙时、进行路由判断之前执行的规则、改变包的目的地址（DNAT功能）、端口等（通俗比喻，就是收信时、根据规则重写收件人的地址、这看上去不地道啊、）把公司IP映射到局域网的机器上、此链多用于把外部IP地址端口的服务、映射为内部IP地址及端口</span><br><span class=\"line\"></span><br><span class=\"line\">POSTROUTING</span><br><span class=\"line\"></span><br><span class=\"line\">在数据包离开防火墙时进行路由判断之后执行的规则、改变包的源地址（SNAT）、端口等（通俗比喻、就是寄信时写好发件人的地址、要让人家回信是能够有地址可回）刺链多用于局域网共享上网，把所有局域网的地址、转换为公网地址上</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-Mangle\"><a href=\"#3-Mangle\" class=\"headerlink\" title=\"3. Mangle\"></a>3. Mangle</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mangle</span><br><span class=\"line\"></span><br><span class=\"line\">主要负责修改数据包中特殊的路由标记，如TTL、TOS、MARK等、这个表定义了5个链（chains）</span><br><span class=\"line\"></span><br><span class=\"line\">INPUT</span><br><span class=\"line\"></span><br><span class=\"line\">同filter表的INPUT</span><br><span class=\"line\"></span><br><span class=\"line\">FORWARD</span><br><span class=\"line\"></span><br><span class=\"line\">同filter表的FORWARD</span><br><span class=\"line\"></span><br><span class=\"line\">OUTPUT  同fileter表的OUTPUT</span><br><span class=\"line\"></span><br><span class=\"line\">PREROUTING  同nat表的PREROUTING</span><br><span class=\"line\"></span><br><span class=\"line\">POSTOUTING  同nat表的POSTOUTING</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-Raw\"><a href=\"#4-Raw\" class=\"headerlink\" title=\"4. Raw\"></a>4. Raw</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>后面在说</p>\n<h3 id=\"参数定义\"><a href=\"#参数定义\" class=\"headerlink\" title=\"参数定义\"></a>参数定义</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-t：指定要操纵的表； `table`</span><br><span class=\"line\"></span><br><span class=\"line\">-A：向规则链中添加条目；`Append`</span><br><span class=\"line\"></span><br><span class=\"line\">-D：从规则链中删除条目； `delete`</span><br><span class=\"line\"></span><br><span class=\"line\">-I：向规则链中插入条目；`insert`</span><br><span class=\"line\"></span><br><span class=\"line\">-R：替换规则链中的条目；`replace`</span><br><span class=\"line\"></span><br><span class=\"line\">-L：显示规则链中已有的条目；``</span><br><span class=\"line\"></span><br><span class=\"line\">-F：清除规则链中已有的条目；`flush`</span><br><span class=\"line\"></span><br><span class=\"line\">-Z：清空规则链中的数据包计算器和字节计数器；</span><br><span class=\"line\"></span><br><span class=\"line\">-N：创建新的用户自定义规则链；</span><br><span class=\"line\"></span><br><span class=\"line\">-P：定义规则链中的默认目标；`policy`</span><br><span class=\"line\"></span><br><span class=\"line\">-h：显示帮助信息；`<span class=\"built_in\">help</span>`</span><br><span class=\"line\"></span><br><span class=\"line\">-p：指定要匹配的数据包协议类型；`proto\tprotocol: by number or name, eg. tcp`</span><br><span class=\"line\"></span><br><span class=\"line\">-s：指定要匹配的数据包源ip地址；`<span class=\"built_in\">source</span>`</span><br><span class=\"line\"></span><br><span class=\"line\">-d：指定要匹配的数据包目标ip地址；`destination`</span><br><span class=\"line\"></span><br><span class=\"line\">-j：指定要跳转的目标；`jump`</span><br><span class=\"line\"></span><br><span class=\"line\">-i：指定数据包进入本机的网络接口（网卡）；`input`</span><br><span class=\"line\"></span><br><span class=\"line\">-o：指定数据包离开本机的网络接口（网卡）；`onput`</span><br><span class=\"line\"></span><br><span class=\"line\">--sport：匹配来源端口号；`<span class=\"built_in\">source</span> port`</span><br><span class=\"line\"></span><br><span class=\"line\">--dport：匹配目标端口号。`destination port`</span><br><span class=\"line\"></span><br><span class=\"line\">下述规则允许端口80上的传入HTTP通信。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"例如\"><a href=\"#例如\" class=\"headerlink\" title=\"例如\"></a>例如</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">$ iptables -A INPUT -i eth1 -p tcp --dport 80 -d 1.2.3.4 -j ACCEPT</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>-A 表示我们正在添加新规则。缺省情况下，除非您指定另一个表，否则iptables会将所有新规则添加到 Filter 表中。</p>\n<p>-i 标志指定将规则应用到的设备。如果您未指定设备，则iptables会将规则应用于所有传入流量，而与设备无关。</p>\n<p>-p 标志指定要处理的数据包协议，在本例中为TCP。</p>\n<p>–dport 标志指定目标端口，该端口为80。</p>\n<p>-d 指定目标IP地址，即1.2.3.4。如果未指定目标IP地址，则该规则将适用于eth1上的所有传入流量，而不管IP地址如何。</p>\n<p>-j 指定要执行的操作或JUMP操作。在这里，我们使用接受策略来接受数据包。</p>\n<p>开放端口指定插入第几行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># --line-number 展示行号</span></span><br><span class=\"line\">$ iptables -nL  --line-number</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在第四行插入iptables</span></span><br><span class=\"line\">$ iptables -I INPUT 4 -p tcp --dport 1234 -j ACCEPT</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>禁止所有INPUT</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ iptables -P INPUT DROP</span><br><span class=\"line\">$ iptables -P OUTPUT DROP</span><br></pre></td></tr></table></figure>\n\n\n<p>我现在用一个测试软件来测试连通性</p>\n<h3 id=\"四、nc搭建简单内网聊天室\"><a href=\"#四、nc搭建简单内网聊天室\" class=\"headerlink\" title=\"四、nc搭建简单内网聊天室\"></a>四、nc搭建简单内网聊天室</h3><p>本机-本机 ， 单台机器开了两个shell窗口，当一个窗口输入消息时，另一个窗口也会同步显示</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ncat -v -lp 8080</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"服务端\"><a href=\"#服务端\" class=\"headerlink\" title=\"服务端\"></a>服务端</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]$ ncat -v -lp 8080</span><br><span class=\"line\">Ncat: Version 7.50 ( https://nmap.org/ncat )</span><br><span class=\"line\">Ncat: Listening on :::8080</span><br><span class=\"line\">Ncat: Listening on 0.0.0.0:8080</span><br><span class=\"line\">Ncat: Connection from 127.0.0.1.</span><br><span class=\"line\">Ncat: Connection from 127.0.0.1:45996.</span><br><span class=\"line\">xxx</span><br><span class=\"line\">xxx</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]$ nc -v 127.0.0.1 8080</span><br><span class=\"line\">Ncat: Version 7.50 ( https://nmap.org/ncat )</span><br><span class=\"line\">Ncat: Connected to 127.0.0.1:8080.</span><br><span class=\"line\">xxx</span><br><span class=\"line\">xxx</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"NAT-作用及使用\"><a href=\"#NAT-作用及使用\" class=\"headerlink\" title=\"NAT 作用及使用\"></a>NAT 作用及使用</h3><p>我们现在讲一下nat表主要的作用</p>\n<p>端口转发</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 8080 转发到80 端口上面</span></span><br><span class=\"line\"></span><br><span class=\"line\"> $  iptables -t nat -A PREROUTING -p tcp --dport 8080 -j REDERECT --to-ports 8000</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果防火墙默认是关闭的状态</span></span><br><span class=\"line\"></span><br><span class=\"line\">则需要设置以下规则</span><br><span class=\"line\"></span><br><span class=\"line\">$ iptables -A INPUT -p tcp --dport 8000 -j ACCEPT</span><br><span class=\"line\"></span><br><span class=\"line\">$ iptables -A OUTPUT -p tcp --sport 8000 -j ACCEPT</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"流量转发\"><a href=\"#流量转发\" class=\"headerlink\" title=\"流量转发\"></a>流量转发</h4><h5 id=\"将流量转发到服务器上面\"><a href=\"#将流量转发到服务器上面\" class=\"headerlink\" title=\"将流量转发到服务器上面\"></a>将流量转发到服务器上面</h5><p>在 10.10.13.111 上 设置 将 对 10.10.13.111的请求转发到10.10.13.110 并实现 逆转,</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iptables -t nat -I PREROUTING -p tcp --dport 8001 -d 10.10.13.111 -j DNAT --to-destination 10.10.13.110</span><br><span class=\"line\"></span><br><span class=\"line\">iptables -t nat -I POSTROUTING -p tcp --dport 8001 -d 10.10.13.110 -j SNAT --to-destination 10.10.13.111</span><br></pre></td></tr></table></figure>\n"},{"title":"istio 流量管理使用说明","date":"2021-01-20T16:00:00.000Z","_content":"\nistio 流量管理使用说明\n\n### 前提条件\n\n在开始之前，请检查以下先决条件：\n\n1. 检查kubernetes 集群pod和 <font face=\"黑体\" color=green size=3>服务</font>\n2. 使用1.6 以上版本的istio,并检查 pod和服务\n3. 设定 必要的平台设置\n\n### 部署测试服务 bookinfo\n\n我们就使用istio 官方使用的测试服务`BookInfo`\n\nBookinfo应用程序分为四个单独的微服务：\n\nproductpage。该productpage微服务调用details和reviews微服务来填充页面。\ndetails。该details微服务包含图书信息。\nreviews。该reviews微服务包含了书评。它还称为ratings微服务。\nratings。该ratings微服务包含预定伴随书评排名信息。\nreviews微服务有3个版本：\n\n版本v1不会调用该ratings服务。\n版本v2调用该ratings服务，并将每个等级显示为1到5个黑星。\n版本v3调用该ratings服务，并将每个等级显示为1到5个红色星号。\n\n访问关系如下图\n\n![bookInfo](/uploads/istio/images/m_88841685b364bda18fb333e9acb97366_r.png)\n\n首先部署bookinfo服务之前我们需要给 bookinfo 注入\nsidecar,若给namespace打 `istio-injection=enabled`的labels 则istio会给当前namespace下的所有pod自动注入sidecar\n\n假设我们将bookinfo 部署到demo的这个namespace中\n\n```bash\n\n$ kubectl label namespace demo istio-injection=enabled\n```\n\n查看labels是否设置成功\n\n```bash\n$ kubectl get namespace demo --show-labels\n```\n\n然后你就看到一下的效果 如果最后一个字段上面显示`istio-injection=enabled`则代表labels 设置成功\n\n```text\nNAME   STATUS   AGE   LABELS\ndemo   Active   24s   istio-injection=enabled\n```\n\n部署 BookInfo\n\n```bash\n$ kubectl apply -f istio/bookinfo.yml\n```\n\n查看 服务是否正常部署且 成功注入sidecar\n\n```bash\n$ kubectl get po -n demo\n```\n\n确认 所有的service 和pod 都Running \n\n```bash\n$ kubectl get service -n demo \n\nNAME          TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)    AGE\ndetails       ClusterIP   10.0.0.31    <none>        9080/TCP   6m\nkubernetes    ClusterIP   10.0.0.1     <none>        443/TCP    7d\nproductpage   ClusterIP   10.0.0.120   <none>        9080/TCP   6m\nratings       ClusterIP   10.0.0.15    <none>        9080/TCP   6m\nreviews       ClusterIP   10.0.0.170   <none>        9080/TCP   6m\n\n\n$ kubectl get pods -n demo\n\nNAME                             READY     STATUS    RESTARTS   AGE\ndetails-v1-1520924117-48z17      2/2       Running   0          6m\nproductpage-v1-560495357-jk1lz   2/2       Running   0          6m\nratings-v1-734492171-rnr5l       2/2       Running   0          6m\nreviews-v1-874083890-f0qf0       2/2       Running   0          6m\nreviews-v2-1343845940-b34q5      2/2       Running   0          6m\nreviews-v3-1813607990-8ch52      2/2       Running   0          6m\n``` \n\n如果所有pod ready 显示 2/2 则 服务正确注入sidecar\n\n### 流量管理\n\n\n##### 配置服务访问\n\n如何将请求动态路由到微服务的多个版本。\n\nistio Bookinfo示例包含四个单独的微服务，每个微服务具有多个版本。微服务之一的三种不同版本reviews已经部署并同时运行。为了说明此问题，请/productpage在浏览器中访问Bookinfo应用，然后刷新几次。您会注意到，有时书评输出中包含星级，有时则不。这是因为如果没有明确的默认服务版本可路由，Istio将以循环方式将请求路由到所有可用版本。\n\n配置方式如下所示\n\n```yaml\napiVersion: networking.istio.io/v1beta1\nkind: Gateway\nmetadata:\n  name: bookinfo-gateway\n  namespace: demo\nspec:\n  selector:\n    istio: ingressgateway # istio-system 下面的istio-ingressgateway 的labels\n  servers:\n  - hosts:\n    - '*' # 指定访问域名\n    port:\n      name: http \n      number: 80 # 访问端口\n      protocol: HTTP # 访问协议名称\n\n---\napiVersion: networking.istio.io/v1beta1\nkind: VirtualService\nmetadata:\n  name: bookinfo\n  namespace: demo\nspec:\n  gateways:\n  - bookinfo-gateway # 网关gateway的名称\n  hosts:\n  - '*' # 访问的svc 的名称\n  http:\n  - match:\n    - uri:\n        exact: /productpage # 精确匹配 路径\n    - uri:\n        prefix: /static # 前缀匹配路径\n    - uri:\n        exact: /login \n    - uri:\n        exact: /logout\n    - uri:\n        prefix: /api/v1/products\n    route:\n    - destination:\n        host: productpage # 目的服务 svc地址\n        port:\n          number: 9080 # 目的端口\n\n\n```\n\n以上配置的名词解释\n\n网关配置 gateway 必要字段的解释\n\n|  字段名称 | 类型  | 描述  | 是否必须   |\n| ------------ | ------------ | ------------ | ------------ |\n|  selector  | map<string, string>  | 一个或多个标签，指示应在其上应用此网关配置的一组特定的Pod / VM。 默认情况下，基于标签选择器在所有名称空间中搜索工作负载。 这意味着名称空间“ foo”中的网关资源可以基于标签选择名称空间“ bar”中的pod。 可以通过istiod中的`PILOTSCOPEGATEWAYTONAMESPACE`环境变量来控制此行为。 如果将此变量设置为true，则标签搜索的范围将限于存在资源的配置名称空间。 换句话说，网关资源必须与网关工作负载实例位于相同的名称空间中。 如果选择器为零，则网关将应用于所有工作负载。  |  yes |\n|  hosts | []string  | 此网关公开的一台或多台主机。 尽管通常适用于HTTP服务，但也可以将其用于使用TLS和SNI的TCP服务。 主机被指定为带有可选名称空间/前缀的dnsName。 dnsName应该使用FQDN格式指定，可以选择在最左侧的组件中包含通配符（例如prod / *.example.com）。 将dnsName设置为*，以从指定的名称空间（例如prod / *）中选择所有VirtualService主机。可以将名称空间设置为*或。，分别代表任意名称空间或当前名称空间。 例如，* / foo.example.com从任何可用的名称空间中选择服务，而./foo.example.com仅从Sidecar的名称空间中选择服务。 如果未指定名称空间/，则默认值为* /，即从任何名称空间中选择服务。 还将使用所选名称空间中的任何关联的DestinationRule。虚拟服务必须绑定到网关，并且必须具有一个或多个与服务器中指定的主机匹配的主机。 匹配可以是与服务器主机的完全匹配或后缀匹配。 例如，如果服务器的主机指定* .example.com，则具有主机dev.example.com或prod.example.com的VirtualService将匹配。 但是，带有主机example.com或newexample.com的VirtualService将不匹配。注意：仅可以引用导出到网关名称空间的虚拟服务（例如，exportTo值为*）。 私有配置（例如，exportTo设置为）将不可用。 有关详细信息，请参考VirtualService，DestinationRule和ServiceEntry配置中的exportTo设置。 | yes  |\n|port |port |代理应在其上侦听传入连接的端口和协议| yes|\n\n\n\n获取效果如下\n\n```bash\n\n➜  ~ kubectl get gw -n demo\nNAME               AGE\nbookinfo-gateway   11m\n➜  ~ kubectl get vs -n demo\nNAME                         GATEWAYS             HOSTS                                  AGE\nbookinfo                     [bookinfo-gateway]   [*]                                    11m\n```\n\n##### VirtualService\n\n定义了一组寻址主机时要应用的流量路由规则。每个路由规则为特定协议的流量定义匹配条件。如果流量匹配，则将其发送到注册表中定义的命名目标服务（或其子集/版本）。\n\n以下为VirtualService 字段的名词解释\n\n\n|  字段名称 | 类型  | 描述  | 是否必须   |\n| ------------ | ------------ | ------------ | ------------ |\n| hosts   | string[]  | hosts字段适用于HTTP和TCP服务。网格内的服务（即在服务注册表中找到的服务）必须始终使用其字母数字名称进行引用。IP地址仅允许通过网关定义的服务使用。  |  no |\n| gateways   | string[]  | 应应用这些路由的网关和sidecar的名称。其他名称空间中的网关可以由<gateway namespace>/<gateway name>;引用 。指定没有名称空间限定符的网关与指定VirtualService的名称空间相同  |  no |\n|  subset |  string | 服务中子集的名称。仅适用于网格内的服务。该子集必须在相应的DestinationRule中定义。  | node  |\n|  port  | PortSelector  | 指定要寻址的主机上的端口。如果服务仅公开单个端口，则不需要显式选择端口。|  no |\n| http   |  HTTPRoute[] | HTTP流量的路由规则的有序列表。HTTP路由将应用于名为“ http- ” /“ http2- ” /“ grpc- *”的平台服务端口，协议为HTTP / HTTP2 / GRPC / TLS终止的HTTPS的网关端口以及使用HTTP / HTTP2 /的服务入口端口GRPC协议。使用匹配传入请求的第一条规则。|  no |\n| tls   | TLSRoute[]  | 未终止的TLS和HTTPS流量的路由规则的有序列表。路由通常使用ClientHello消息显示的SNI值执行。TLS路由将应用于使用HTTPS / TLS协议（即采用“直通” TLS模式）的名为“ https- ”，“ tls- ”的平台服务端口，未终止的网关端口以及使用HTTPS / TLS协议的服务入口端口。使用匹配传入请求的第一条规则。注意：没有关联虚拟服务的流量“ https- ”或“ tls- ”端口将被视为不透明的TCP流量。  | no  |\n| tcp  | TCPRoute[]  | 不透明TCP流量的路由规则的有序列表。TCP路由将应用于不是HTTP或TLS端口的任何端口。使用匹配传入请求的第一条规则。  | no  |\n\n\n##### HTTP路由\n\n描述用于路由HTTP / 1.1，HTTP2和gRPC通信的匹配条件和操作。有关用法示例，请参见VirtualService。\n\n|  字段名称 | 类型  | 描述  | 是否必须   |\n| ------------ | ------------ | ------------ | ------------ |\n| name  | string   |  分配给路由以进行调试的名称。路由名称将与匹配名称串联在一起，并将被记录在访问日志中，以查找与此路由/匹配匹配的请求。 | no  |\n| match   | HTTPMatchRequest[]  | 匹配要激活的规则要满足的条件。单个匹配块内的所有条件都具有AND语义，而匹配块列表具有OR语义。如果任何一个匹配块成功，则匹配该规则。  |  no |\n| route   |  HTTPRouteDestination[] |  HTTP规则可以重定向或转发（默认）流量。转发目标可以是服务的多个版本之一（请参阅文档开头的词汇表）。与服务版本关联的权重决定了它接收的流量比例。 | no  |\n| redirect   | HTTPRedirect  |  HTTP规则可以重定向或转发（默认）流量。如果在规则中指定了流量通过选项，则将忽略路由/重定向。重定向原语可用于将HTTP 301重定向发送到其他URI或Authority。 | no  |\n|  rewrite  | HTTPRewrite  |  重写HTTP URI和Authority标头。重写不能与重定向原语一起使用。重写将在转发之前执行。 | no |\n| timeout  | \tDuration|HTTP请求超时，默认为禁用。  |  no|\n|retries|HTTPRetry | 重试HTTP请求的策略。| no |\n|headers|Headers|标头操作规则|no|\n|fault|\tHTTPFaultInjection|故障注入策略，适用于客户端的HTTP通信。请注意，如果在客户端启用了错误，则不会启用超时或重试。|没有|\n|mirror|Destination|除了将请求转发到预期目标之外，还将HTTP流量镜像到另一个目标。镜像流量是基于尽力而为的，在这种情况下，边车/网关在从原始目的地返回响应之前不会等待镜像集群响应。将为镜像目标生成统计信息。|no|\n\nhttp 和tcp 、tls 基本上类似 就不重复说明了\n\n访问页面即可看到页面效果如下:\n\n![](/uploads/istio/images/m_f048c09d102e39ddf43a9d3e0ae81d47_r.png)\n\n红色框的地方就是不同版本的 `reviews` 服务\n\n##### 请求超时\n\n要测试Bookinfo应用程序微服务的弹性，请为用户reviews:v2和的ratings微服务之间注入7s的延迟jason。此测试将发现故意引入Bookinfo应用程序的错误。\n\n```yaml\n$ kubectl get virtualservice ratings -o yaml\napiVersion: networking.istio.io/v1beta1\nkind: VirtualService\nmetadata:\n  name: bookinfo-fault-injection\n  namespace: demo\nspec:\n  hosts:\n  - ratings\n  http:\n  - fault:\n      delay:\n        fixedDelay: 7s\n        percentage:\n          value: 100\n    match:\n    - headers:\n        end-user:\n          exact: jason\n    route:\n    - destination:\n        host: ratings\n        subset: v1\n  - route:\n    - destination:\n        host: ratings\n        subset: v1\n```\n\n产生的效果如下所示：\n\n重新加载`productpage`网页。您将看到该页面实际上在大约6秒钟内加载完成。\n\n<font face=\"黑体\" color=red size=3>意义:</font>Istio启用协议特定的故障注入到网络中，而不是杀死pod，延迟或在TCP层破坏数据包。我们的理由是，无论网络级别的故障如何，应用层观察到的故障都是一样的，并且可以在应用层注入更有意义的故障（例如，HTTP错误代码），以锻炼应用的弹性。\n\n运维人员可以为符合特定条件的请求配置故障。运维人员可以进一步限制应该遭受故障的请求的百分比。可以注入两种类型的故障：延迟和中止。延迟是计时故障，模拟增加的网络延迟或过载的上游服务。中止是模拟上游服务的崩溃故障。中止通常以HTTP错误代码或TCP连接失败的形式表现。\n\n\n\n##### 流量分配\n\n一个常见的用例是将流量逐渐从一种微服务版本迁移到另一种。在Istio中，您可以通过配置一系列规则以将一定百分比的流量路由到一项服务或另一项服务来实现此目标。在此任务中，您将发送流量的10％reviews:v1和90％ reviews:v3。然后，您将100％的流量发送到来完成迁移reviews:v3。\n\n现在来创建我的配置吧\n\n```bash\napiVersion: networking.istio.io/v1beta1\nkind: VirtualService\nmetadata:\n  name: bookinfo-traffic-injection\n  namespace: demo\nspec:\n  hosts:\n  - reviews\n  http:\n  - route:\n    - destination:\n        host: reviews\n        subset: v1 # 需要和DestinationRule 资源的名字对应起来\n      weight: 10\n    - destination:\n        host: reviews\n        subset: v3\n      weight: 90\n---\n\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: bookinfo-traffic-injection\n  namespace: demo\nspec:\n  host: reviews\n  subsets:\n  - name: v1 # subset指向的名称\n    labels:\n      version: v1 # 需要路由到pod labels中的version版本对应的值\n  - name: v2\n    labels:\n      version: v2\n  - name: v3\n    labels:\n      version: v3\n```\n\n创建以上配置\n\n```yaml\n$ kubectl apply -f bookinfo-traffic-injection.yaml\n```\n\n\n将istio-system下面的kiali的svc地址改成`nodeport` 访问即可， 默认登陆的用户名密码是 admin/admin\n\n![](/uploads/istio/images/m_2d6a4a0feac0159ee65ac3aee53ecaaf_r.png)\n\n以上是我们还没有配置分配流量时的流量视图，我们可以看到`reviews`这个服务的三个不同版本的pod都是平均分配的 大约所占比例是33%左右。\n\n现在我们配置了流量分配再看看是什么样子的。\n\n我们会发现红色星的次数明显要多余没有星的次数多很多\n\n我们现在可以借助kiali来看看我们请求的流量视图\n\n![](/uploads/istio/images/m_010ffca5e15ec7eb30397a2e97db1268_r.png)\n\n可以看到`reviews`不同版本的服务所占比例分别是\n\n`v1 --->14.3% ，v2 ---> 0% ,  v3 ---> 85.7%`\n\n现在我们istio的流量分配的设置已经成功了，那么istio的流量分配的意义在哪里，有什么作用呢?\n\n<font face=\"黑体\" color=red size=3>意义:</font>您可以通过 istio 指定特定服务按照你的设定指定转到金丝雀版本，而不必考虑金丝雀部署的大小，或根据请求的内容将流量发送到特定版本。\n\n##### 给服务注入故障\n\n##### 熔断\n\n##### 流量镜像\n\n##### 问题定位\n\n在istio中有一个很麻烦的问题 就是配置出错以后很难定位是什么配置错误导致访问出错的问题，所以我们需要专门的工具来定位是什么导致的配置问题。\n\n\n#### 安全\n\n##### 证书管理\n\n##### 认证方式\n\n### 参考文档","source":"_posts/k8s/istio-use.md","raw":"---\ntitle: istio 流量管理使用说明\ndate: 2021-01-21\ntags:\n- istio\n---\n\nistio 流量管理使用说明\n\n### 前提条件\n\n在开始之前，请检查以下先决条件：\n\n1. 检查kubernetes 集群pod和 <font face=\"黑体\" color=green size=3>服务</font>\n2. 使用1.6 以上版本的istio,并检查 pod和服务\n3. 设定 必要的平台设置\n\n### 部署测试服务 bookinfo\n\n我们就使用istio 官方使用的测试服务`BookInfo`\n\nBookinfo应用程序分为四个单独的微服务：\n\nproductpage。该productpage微服务调用details和reviews微服务来填充页面。\ndetails。该details微服务包含图书信息。\nreviews。该reviews微服务包含了书评。它还称为ratings微服务。\nratings。该ratings微服务包含预定伴随书评排名信息。\nreviews微服务有3个版本：\n\n版本v1不会调用该ratings服务。\n版本v2调用该ratings服务，并将每个等级显示为1到5个黑星。\n版本v3调用该ratings服务，并将每个等级显示为1到5个红色星号。\n\n访问关系如下图\n\n![bookInfo](/uploads/istio/images/m_88841685b364bda18fb333e9acb97366_r.png)\n\n首先部署bookinfo服务之前我们需要给 bookinfo 注入\nsidecar,若给namespace打 `istio-injection=enabled`的labels 则istio会给当前namespace下的所有pod自动注入sidecar\n\n假设我们将bookinfo 部署到demo的这个namespace中\n\n```bash\n\n$ kubectl label namespace demo istio-injection=enabled\n```\n\n查看labels是否设置成功\n\n```bash\n$ kubectl get namespace demo --show-labels\n```\n\n然后你就看到一下的效果 如果最后一个字段上面显示`istio-injection=enabled`则代表labels 设置成功\n\n```text\nNAME   STATUS   AGE   LABELS\ndemo   Active   24s   istio-injection=enabled\n```\n\n部署 BookInfo\n\n```bash\n$ kubectl apply -f istio/bookinfo.yml\n```\n\n查看 服务是否正常部署且 成功注入sidecar\n\n```bash\n$ kubectl get po -n demo\n```\n\n确认 所有的service 和pod 都Running \n\n```bash\n$ kubectl get service -n demo \n\nNAME          TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)    AGE\ndetails       ClusterIP   10.0.0.31    <none>        9080/TCP   6m\nkubernetes    ClusterIP   10.0.0.1     <none>        443/TCP    7d\nproductpage   ClusterIP   10.0.0.120   <none>        9080/TCP   6m\nratings       ClusterIP   10.0.0.15    <none>        9080/TCP   6m\nreviews       ClusterIP   10.0.0.170   <none>        9080/TCP   6m\n\n\n$ kubectl get pods -n demo\n\nNAME                             READY     STATUS    RESTARTS   AGE\ndetails-v1-1520924117-48z17      2/2       Running   0          6m\nproductpage-v1-560495357-jk1lz   2/2       Running   0          6m\nratings-v1-734492171-rnr5l       2/2       Running   0          6m\nreviews-v1-874083890-f0qf0       2/2       Running   0          6m\nreviews-v2-1343845940-b34q5      2/2       Running   0          6m\nreviews-v3-1813607990-8ch52      2/2       Running   0          6m\n``` \n\n如果所有pod ready 显示 2/2 则 服务正确注入sidecar\n\n### 流量管理\n\n\n##### 配置服务访问\n\n如何将请求动态路由到微服务的多个版本。\n\nistio Bookinfo示例包含四个单独的微服务，每个微服务具有多个版本。微服务之一的三种不同版本reviews已经部署并同时运行。为了说明此问题，请/productpage在浏览器中访问Bookinfo应用，然后刷新几次。您会注意到，有时书评输出中包含星级，有时则不。这是因为如果没有明确的默认服务版本可路由，Istio将以循环方式将请求路由到所有可用版本。\n\n配置方式如下所示\n\n```yaml\napiVersion: networking.istio.io/v1beta1\nkind: Gateway\nmetadata:\n  name: bookinfo-gateway\n  namespace: demo\nspec:\n  selector:\n    istio: ingressgateway # istio-system 下面的istio-ingressgateway 的labels\n  servers:\n  - hosts:\n    - '*' # 指定访问域名\n    port:\n      name: http \n      number: 80 # 访问端口\n      protocol: HTTP # 访问协议名称\n\n---\napiVersion: networking.istio.io/v1beta1\nkind: VirtualService\nmetadata:\n  name: bookinfo\n  namespace: demo\nspec:\n  gateways:\n  - bookinfo-gateway # 网关gateway的名称\n  hosts:\n  - '*' # 访问的svc 的名称\n  http:\n  - match:\n    - uri:\n        exact: /productpage # 精确匹配 路径\n    - uri:\n        prefix: /static # 前缀匹配路径\n    - uri:\n        exact: /login \n    - uri:\n        exact: /logout\n    - uri:\n        prefix: /api/v1/products\n    route:\n    - destination:\n        host: productpage # 目的服务 svc地址\n        port:\n          number: 9080 # 目的端口\n\n\n```\n\n以上配置的名词解释\n\n网关配置 gateway 必要字段的解释\n\n|  字段名称 | 类型  | 描述  | 是否必须   |\n| ------------ | ------------ | ------------ | ------------ |\n|  selector  | map<string, string>  | 一个或多个标签，指示应在其上应用此网关配置的一组特定的Pod / VM。 默认情况下，基于标签选择器在所有名称空间中搜索工作负载。 这意味着名称空间“ foo”中的网关资源可以基于标签选择名称空间“ bar”中的pod。 可以通过istiod中的`PILOTSCOPEGATEWAYTONAMESPACE`环境变量来控制此行为。 如果将此变量设置为true，则标签搜索的范围将限于存在资源的配置名称空间。 换句话说，网关资源必须与网关工作负载实例位于相同的名称空间中。 如果选择器为零，则网关将应用于所有工作负载。  |  yes |\n|  hosts | []string  | 此网关公开的一台或多台主机。 尽管通常适用于HTTP服务，但也可以将其用于使用TLS和SNI的TCP服务。 主机被指定为带有可选名称空间/前缀的dnsName。 dnsName应该使用FQDN格式指定，可以选择在最左侧的组件中包含通配符（例如prod / *.example.com）。 将dnsName设置为*，以从指定的名称空间（例如prod / *）中选择所有VirtualService主机。可以将名称空间设置为*或。，分别代表任意名称空间或当前名称空间。 例如，* / foo.example.com从任何可用的名称空间中选择服务，而./foo.example.com仅从Sidecar的名称空间中选择服务。 如果未指定名称空间/，则默认值为* /，即从任何名称空间中选择服务。 还将使用所选名称空间中的任何关联的DestinationRule。虚拟服务必须绑定到网关，并且必须具有一个或多个与服务器中指定的主机匹配的主机。 匹配可以是与服务器主机的完全匹配或后缀匹配。 例如，如果服务器的主机指定* .example.com，则具有主机dev.example.com或prod.example.com的VirtualService将匹配。 但是，带有主机example.com或newexample.com的VirtualService将不匹配。注意：仅可以引用导出到网关名称空间的虚拟服务（例如，exportTo值为*）。 私有配置（例如，exportTo设置为）将不可用。 有关详细信息，请参考VirtualService，DestinationRule和ServiceEntry配置中的exportTo设置。 | yes  |\n|port |port |代理应在其上侦听传入连接的端口和协议| yes|\n\n\n\n获取效果如下\n\n```bash\n\n➜  ~ kubectl get gw -n demo\nNAME               AGE\nbookinfo-gateway   11m\n➜  ~ kubectl get vs -n demo\nNAME                         GATEWAYS             HOSTS                                  AGE\nbookinfo                     [bookinfo-gateway]   [*]                                    11m\n```\n\n##### VirtualService\n\n定义了一组寻址主机时要应用的流量路由规则。每个路由规则为特定协议的流量定义匹配条件。如果流量匹配，则将其发送到注册表中定义的命名目标服务（或其子集/版本）。\n\n以下为VirtualService 字段的名词解释\n\n\n|  字段名称 | 类型  | 描述  | 是否必须   |\n| ------------ | ------------ | ------------ | ------------ |\n| hosts   | string[]  | hosts字段适用于HTTP和TCP服务。网格内的服务（即在服务注册表中找到的服务）必须始终使用其字母数字名称进行引用。IP地址仅允许通过网关定义的服务使用。  |  no |\n| gateways   | string[]  | 应应用这些路由的网关和sidecar的名称。其他名称空间中的网关可以由<gateway namespace>/<gateway name>;引用 。指定没有名称空间限定符的网关与指定VirtualService的名称空间相同  |  no |\n|  subset |  string | 服务中子集的名称。仅适用于网格内的服务。该子集必须在相应的DestinationRule中定义。  | node  |\n|  port  | PortSelector  | 指定要寻址的主机上的端口。如果服务仅公开单个端口，则不需要显式选择端口。|  no |\n| http   |  HTTPRoute[] | HTTP流量的路由规则的有序列表。HTTP路由将应用于名为“ http- ” /“ http2- ” /“ grpc- *”的平台服务端口，协议为HTTP / HTTP2 / GRPC / TLS终止的HTTPS的网关端口以及使用HTTP / HTTP2 /的服务入口端口GRPC协议。使用匹配传入请求的第一条规则。|  no |\n| tls   | TLSRoute[]  | 未终止的TLS和HTTPS流量的路由规则的有序列表。路由通常使用ClientHello消息显示的SNI值执行。TLS路由将应用于使用HTTPS / TLS协议（即采用“直通” TLS模式）的名为“ https- ”，“ tls- ”的平台服务端口，未终止的网关端口以及使用HTTPS / TLS协议的服务入口端口。使用匹配传入请求的第一条规则。注意：没有关联虚拟服务的流量“ https- ”或“ tls- ”端口将被视为不透明的TCP流量。  | no  |\n| tcp  | TCPRoute[]  | 不透明TCP流量的路由规则的有序列表。TCP路由将应用于不是HTTP或TLS端口的任何端口。使用匹配传入请求的第一条规则。  | no  |\n\n\n##### HTTP路由\n\n描述用于路由HTTP / 1.1，HTTP2和gRPC通信的匹配条件和操作。有关用法示例，请参见VirtualService。\n\n|  字段名称 | 类型  | 描述  | 是否必须   |\n| ------------ | ------------ | ------------ | ------------ |\n| name  | string   |  分配给路由以进行调试的名称。路由名称将与匹配名称串联在一起，并将被记录在访问日志中，以查找与此路由/匹配匹配的请求。 | no  |\n| match   | HTTPMatchRequest[]  | 匹配要激活的规则要满足的条件。单个匹配块内的所有条件都具有AND语义，而匹配块列表具有OR语义。如果任何一个匹配块成功，则匹配该规则。  |  no |\n| route   |  HTTPRouteDestination[] |  HTTP规则可以重定向或转发（默认）流量。转发目标可以是服务的多个版本之一（请参阅文档开头的词汇表）。与服务版本关联的权重决定了它接收的流量比例。 | no  |\n| redirect   | HTTPRedirect  |  HTTP规则可以重定向或转发（默认）流量。如果在规则中指定了流量通过选项，则将忽略路由/重定向。重定向原语可用于将HTTP 301重定向发送到其他URI或Authority。 | no  |\n|  rewrite  | HTTPRewrite  |  重写HTTP URI和Authority标头。重写不能与重定向原语一起使用。重写将在转发之前执行。 | no |\n| timeout  | \tDuration|HTTP请求超时，默认为禁用。  |  no|\n|retries|HTTPRetry | 重试HTTP请求的策略。| no |\n|headers|Headers|标头操作规则|no|\n|fault|\tHTTPFaultInjection|故障注入策略，适用于客户端的HTTP通信。请注意，如果在客户端启用了错误，则不会启用超时或重试。|没有|\n|mirror|Destination|除了将请求转发到预期目标之外，还将HTTP流量镜像到另一个目标。镜像流量是基于尽力而为的，在这种情况下，边车/网关在从原始目的地返回响应之前不会等待镜像集群响应。将为镜像目标生成统计信息。|no|\n\nhttp 和tcp 、tls 基本上类似 就不重复说明了\n\n访问页面即可看到页面效果如下:\n\n![](/uploads/istio/images/m_f048c09d102e39ddf43a9d3e0ae81d47_r.png)\n\n红色框的地方就是不同版本的 `reviews` 服务\n\n##### 请求超时\n\n要测试Bookinfo应用程序微服务的弹性，请为用户reviews:v2和的ratings微服务之间注入7s的延迟jason。此测试将发现故意引入Bookinfo应用程序的错误。\n\n```yaml\n$ kubectl get virtualservice ratings -o yaml\napiVersion: networking.istio.io/v1beta1\nkind: VirtualService\nmetadata:\n  name: bookinfo-fault-injection\n  namespace: demo\nspec:\n  hosts:\n  - ratings\n  http:\n  - fault:\n      delay:\n        fixedDelay: 7s\n        percentage:\n          value: 100\n    match:\n    - headers:\n        end-user:\n          exact: jason\n    route:\n    - destination:\n        host: ratings\n        subset: v1\n  - route:\n    - destination:\n        host: ratings\n        subset: v1\n```\n\n产生的效果如下所示：\n\n重新加载`productpage`网页。您将看到该页面实际上在大约6秒钟内加载完成。\n\n<font face=\"黑体\" color=red size=3>意义:</font>Istio启用协议特定的故障注入到网络中，而不是杀死pod，延迟或在TCP层破坏数据包。我们的理由是，无论网络级别的故障如何，应用层观察到的故障都是一样的，并且可以在应用层注入更有意义的故障（例如，HTTP错误代码），以锻炼应用的弹性。\n\n运维人员可以为符合特定条件的请求配置故障。运维人员可以进一步限制应该遭受故障的请求的百分比。可以注入两种类型的故障：延迟和中止。延迟是计时故障，模拟增加的网络延迟或过载的上游服务。中止是模拟上游服务的崩溃故障。中止通常以HTTP错误代码或TCP连接失败的形式表现。\n\n\n\n##### 流量分配\n\n一个常见的用例是将流量逐渐从一种微服务版本迁移到另一种。在Istio中，您可以通过配置一系列规则以将一定百分比的流量路由到一项服务或另一项服务来实现此目标。在此任务中，您将发送流量的10％reviews:v1和90％ reviews:v3。然后，您将100％的流量发送到来完成迁移reviews:v3。\n\n现在来创建我的配置吧\n\n```bash\napiVersion: networking.istio.io/v1beta1\nkind: VirtualService\nmetadata:\n  name: bookinfo-traffic-injection\n  namespace: demo\nspec:\n  hosts:\n  - reviews\n  http:\n  - route:\n    - destination:\n        host: reviews\n        subset: v1 # 需要和DestinationRule 资源的名字对应起来\n      weight: 10\n    - destination:\n        host: reviews\n        subset: v3\n      weight: 90\n---\n\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: bookinfo-traffic-injection\n  namespace: demo\nspec:\n  host: reviews\n  subsets:\n  - name: v1 # subset指向的名称\n    labels:\n      version: v1 # 需要路由到pod labels中的version版本对应的值\n  - name: v2\n    labels:\n      version: v2\n  - name: v3\n    labels:\n      version: v3\n```\n\n创建以上配置\n\n```yaml\n$ kubectl apply -f bookinfo-traffic-injection.yaml\n```\n\n\n将istio-system下面的kiali的svc地址改成`nodeport` 访问即可， 默认登陆的用户名密码是 admin/admin\n\n![](/uploads/istio/images/m_2d6a4a0feac0159ee65ac3aee53ecaaf_r.png)\n\n以上是我们还没有配置分配流量时的流量视图，我们可以看到`reviews`这个服务的三个不同版本的pod都是平均分配的 大约所占比例是33%左右。\n\n现在我们配置了流量分配再看看是什么样子的。\n\n我们会发现红色星的次数明显要多余没有星的次数多很多\n\n我们现在可以借助kiali来看看我们请求的流量视图\n\n![](/uploads/istio/images/m_010ffca5e15ec7eb30397a2e97db1268_r.png)\n\n可以看到`reviews`不同版本的服务所占比例分别是\n\n`v1 --->14.3% ，v2 ---> 0% ,  v3 ---> 85.7%`\n\n现在我们istio的流量分配的设置已经成功了，那么istio的流量分配的意义在哪里，有什么作用呢?\n\n<font face=\"黑体\" color=red size=3>意义:</font>您可以通过 istio 指定特定服务按照你的设定指定转到金丝雀版本，而不必考虑金丝雀部署的大小，或根据请求的内容将流量发送到特定版本。\n\n##### 给服务注入故障\n\n##### 熔断\n\n##### 流量镜像\n\n##### 问题定位\n\n在istio中有一个很麻烦的问题 就是配置出错以后很难定位是什么配置错误导致访问出错的问题，所以我们需要专门的工具来定位是什么导致的配置问题。\n\n\n#### 安全\n\n##### 证书管理\n\n##### 认证方式\n\n### 参考文档","slug":"k8s/istio-use","published":1,"updated":"2021-03-09T14:29:13.300Z","_id":"ckm1y9qzm0000jbjrfnzn40bu","comments":1,"layout":"post","photos":[],"link":"","content":"<p>istio 流量管理使用说明</p>\n<h3 id=\"前提条件\"><a href=\"#前提条件\" class=\"headerlink\" title=\"前提条件\"></a>前提条件</h3><p>在开始之前，请检查以下先决条件：</p>\n<ol>\n<li>检查kubernetes 集群pod和 <font face=\"黑体\" color=green size=3>服务</font></li>\n<li>使用1.6 以上版本的istio,并检查 pod和服务</li>\n<li>设定 必要的平台设置</li>\n</ol>\n<h3 id=\"部署测试服务-bookinfo\"><a href=\"#部署测试服务-bookinfo\" class=\"headerlink\" title=\"部署测试服务 bookinfo\"></a>部署测试服务 bookinfo</h3><p>我们就使用istio 官方使用的测试服务<code>BookInfo</code></p>\n<p>Bookinfo应用程序分为四个单独的微服务：</p>\n<p>productpage。该productpage微服务调用details和reviews微服务来填充页面。<br>details。该details微服务包含图书信息。<br>reviews。该reviews微服务包含了书评。它还称为ratings微服务。<br>ratings。该ratings微服务包含预定伴随书评排名信息。<br>reviews微服务有3个版本：</p>\n<p>版本v1不会调用该ratings服务。<br>版本v2调用该ratings服务，并将每个等级显示为1到5个黑星。<br>版本v3调用该ratings服务，并将每个等级显示为1到5个红色星号。</p>\n<p>访问关系如下图</p>\n<p><img src=\"/uploads/istio/images/m_88841685b364bda18fb333e9acb97366_r.png\" alt=\"bookInfo\"></p>\n<p>首先部署bookinfo服务之前我们需要给 bookinfo 注入<br>sidecar,若给namespace打 <code>istio-injection=enabled</code>的labels 则istio会给当前namespace下的所有pod自动注入sidecar</p>\n<p>假设我们将bookinfo 部署到demo的这个namespace中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">$ kubectl label namespace demo istio-injection=enabled</span><br></pre></td></tr></table></figure>\n\n<p>查看labels是否设置成功</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get namespace demo --show-labels</span><br></pre></td></tr></table></figure>\n\n<p>然后你就看到一下的效果 如果最后一个字段上面显示<code>istio-injection=enabled</code>则代表labels 设置成功</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NAME   STATUS   AGE   LABELS</span><br><span class=\"line\">demo   Active   24s   istio-injection=enabled</span><br></pre></td></tr></table></figure>\n\n<p>部署 BookInfo</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl apply -f istio/bookinfo.yml</span><br></pre></td></tr></table></figure>\n\n<p>查看 服务是否正常部署且 成功注入sidecar</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get po -n demo</span><br></pre></td></tr></table></figure>\n\n<p>确认 所有的service 和pod 都Running </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get service -n demo </span><br><span class=\"line\"></span><br><span class=\"line\">NAME          TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)    AGE</span><br><span class=\"line\">details       ClusterIP   10.0.0.31    &lt;none&gt;        9080/TCP   6m</span><br><span class=\"line\">kubernetes    ClusterIP   10.0.0.1     &lt;none&gt;        443/TCP    7d</span><br><span class=\"line\">productpage   ClusterIP   10.0.0.120   &lt;none&gt;        9080/TCP   6m</span><br><span class=\"line\">ratings       ClusterIP   10.0.0.15    &lt;none&gt;        9080/TCP   6m</span><br><span class=\"line\">reviews       ClusterIP   10.0.0.170   &lt;none&gt;        9080/TCP   6m</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">$ kubectl get pods -n demo</span><br><span class=\"line\"></span><br><span class=\"line\">NAME                             READY     STATUS    RESTARTS   AGE</span><br><span class=\"line\">details-v1-1520924117-48z17      2/2       Running   0          6m</span><br><span class=\"line\">productpage-v1-560495357-jk1lz   2/2       Running   0          6m</span><br><span class=\"line\">ratings-v1-734492171-rnr5l       2/2       Running   0          6m</span><br><span class=\"line\">reviews-v1-874083890-f0qf0       2/2       Running   0          6m</span><br><span class=\"line\">reviews-v2-1343845940-b34q5      2/2       Running   0          6m</span><br><span class=\"line\">reviews-v3-1813607990-8ch52      2/2       Running   0          6m</span><br></pre></td></tr></table></figure>\n\n<p>如果所有pod ready 显示 2/2 则 服务正确注入sidecar</p>\n<h3 id=\"流量管理\"><a href=\"#流量管理\" class=\"headerlink\" title=\"流量管理\"></a>流量管理</h3><h5 id=\"配置服务访问\"><a href=\"#配置服务访问\" class=\"headerlink\" title=\"配置服务访问\"></a>配置服务访问</h5><p>如何将请求动态路由到微服务的多个版本。</p>\n<p>istio Bookinfo示例包含四个单独的微服务，每个微服务具有多个版本。微服务之一的三种不同版本reviews已经部署并同时运行。为了说明此问题，请/productpage在浏览器中访问Bookinfo应用，然后刷新几次。您会注意到，有时书评输出中包含星级，有时则不。这是因为如果没有明确的默认服务版本可路由，Istio将以循环方式将请求路由到所有可用版本。</p>\n<p>配置方式如下所示</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">networking.istio.io/v1beta1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Gateway</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">bookinfo-gateway</span></span><br><span class=\"line\">  <span class=\"attr\">namespace:</span> <span class=\"string\">demo</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">selector:</span></span><br><span class=\"line\">    <span class=\"attr\">istio:</span> <span class=\"string\">ingressgateway</span> <span class=\"comment\"># istio-system 下面的istio-ingressgateway 的labels</span></span><br><span class=\"line\">  <span class=\"attr\">servers:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">hosts:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*&#x27;</span> <span class=\"comment\"># 指定访问域名</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span></span><br><span class=\"line\">      <span class=\"attr\">name:</span> <span class=\"string\">http</span> </span><br><span class=\"line\">      <span class=\"attr\">number:</span> <span class=\"number\">80</span> <span class=\"comment\"># 访问端口</span></span><br><span class=\"line\">      <span class=\"attr\">protocol:</span> <span class=\"string\">HTTP</span> <span class=\"comment\"># 访问协议名称</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">networking.istio.io/v1beta1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">VirtualService</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">bookinfo</span></span><br><span class=\"line\">  <span class=\"attr\">namespace:</span> <span class=\"string\">demo</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">gateways:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">bookinfo-gateway</span> <span class=\"comment\"># 网关gateway的名称</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*&#x27;</span> <span class=\"comment\"># 访问的svc 的名称</span></span><br><span class=\"line\">  <span class=\"attr\">http:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">match:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">uri:</span></span><br><span class=\"line\">        <span class=\"attr\">exact:</span> <span class=\"string\">/productpage</span> <span class=\"comment\"># 精确匹配 路径</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">uri:</span></span><br><span class=\"line\">        <span class=\"attr\">prefix:</span> <span class=\"string\">/static</span> <span class=\"comment\"># 前缀匹配路径</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">uri:</span></span><br><span class=\"line\">        <span class=\"attr\">exact:</span> <span class=\"string\">/login</span> </span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">uri:</span></span><br><span class=\"line\">        <span class=\"attr\">exact:</span> <span class=\"string\">/logout</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">uri:</span></span><br><span class=\"line\">        <span class=\"attr\">prefix:</span> <span class=\"string\">/api/v1/products</span></span><br><span class=\"line\">    <span class=\"attr\">route:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">destination:</span></span><br><span class=\"line\">        <span class=\"attr\">host:</span> <span class=\"string\">productpage</span> <span class=\"comment\"># 目的服务 svc地址</span></span><br><span class=\"line\">        <span class=\"attr\">port:</span></span><br><span class=\"line\">          <span class=\"attr\">number:</span> <span class=\"number\">9080</span> <span class=\"comment\"># 目的端口</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>以上配置的名词解释</p>\n<p>网关配置 gateway 必要字段的解释</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>类型</th>\n<th>描述</th>\n<th>是否必须</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>selector</td>\n<td>map&lt;string, string&gt;</td>\n<td>一个或多个标签，指示应在其上应用此网关配置的一组特定的Pod / VM。 默认情况下，基于标签选择器在所有名称空间中搜索工作负载。 这意味着名称空间“ foo”中的网关资源可以基于标签选择名称空间“ bar”中的pod。 可以通过istiod中的<code>PILOTSCOPEGATEWAYTONAMESPACE</code>环境变量来控制此行为。 如果将此变量设置为true，则标签搜索的范围将限于存在资源的配置名称空间。 换句话说，网关资源必须与网关工作负载实例位于相同的名称空间中。 如果选择器为零，则网关将应用于所有工作负载。</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>hosts</td>\n<td>[]string</td>\n<td>此网关公开的一台或多台主机。 尽管通常适用于HTTP服务，但也可以将其用于使用TLS和SNI的TCP服务。 主机被指定为带有可选名称空间/前缀的dnsName。 dnsName应该使用FQDN格式指定，可以选择在最左侧的组件中包含通配符（例如prod / <em>.example.com）。 将dnsName设置为</em>，以从指定的名称空间（例如prod / <em>）中选择所有VirtualService主机。可以将名称空间设置为</em>或。，分别代表任意名称空间或当前名称空间。 例如，* / foo.example.com从任何可用的名称空间中选择服务，而./foo.example.com仅从Sidecar的名称空间中选择服务。 如果未指定名称空间/，则默认值为* /，即从任何名称空间中选择服务。 还将使用所选名称空间中的任何关联的DestinationRule。虚拟服务必须绑定到网关，并且必须具有一个或多个与服务器中指定的主机匹配的主机。 匹配可以是与服务器主机的完全匹配或后缀匹配。 例如，如果服务器的主机指定* .example.com，则具有主机dev.example.com或prod.example.com的VirtualService将匹配。 但是，带有主机example.com或newexample.com的VirtualService将不匹配。注意：仅可以引用导出到网关名称空间的虚拟服务（例如，exportTo值为*）。 私有配置（例如，exportTo设置为）将不可用。 有关详细信息，请参考VirtualService，DestinationRule和ServiceEntry配置中的exportTo设置。</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>port</td>\n<td>port</td>\n<td>代理应在其上侦听传入连接的端口和协议</td>\n<td>yes</td>\n</tr>\n</tbody></table>\n<p>获取效果如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">➜  ~ kubectl get gw -n demo</span><br><span class=\"line\">NAME               AGE</span><br><span class=\"line\">bookinfo-gateway   11m</span><br><span class=\"line\">➜  ~ kubectl get vs -n demo</span><br><span class=\"line\">NAME                         GATEWAYS             HOSTS                                  AGE</span><br><span class=\"line\">bookinfo                     [bookinfo-gateway]   [*]                                    11m</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"VirtualService\"><a href=\"#VirtualService\" class=\"headerlink\" title=\"VirtualService\"></a>VirtualService</h5><p>定义了一组寻址主机时要应用的流量路由规则。每个路由规则为特定协议的流量定义匹配条件。如果流量匹配，则将其发送到注册表中定义的命名目标服务（或其子集/版本）。</p>\n<p>以下为VirtualService 字段的名词解释</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>类型</th>\n<th>描述</th>\n<th>是否必须</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>hosts</td>\n<td>string[]</td>\n<td>hosts字段适用于HTTP和TCP服务。网格内的服务（即在服务注册表中找到的服务）必须始终使用其字母数字名称进行引用。IP地址仅允许通过网关定义的服务使用。</td>\n<td>no</td>\n</tr>\n<tr>\n<td>gateways</td>\n<td>string[]</td>\n<td>应应用这些路由的网关和sidecar的名称。其他名称空间中的网关可以由<gateway namespace>/<gateway name>;引用 。指定没有名称空间限定符的网关与指定VirtualService的名称空间相同</td>\n<td>no</td>\n</tr>\n<tr>\n<td>subset</td>\n<td>string</td>\n<td>服务中子集的名称。仅适用于网格内的服务。该子集必须在相应的DestinationRule中定义。</td>\n<td>node</td>\n</tr>\n<tr>\n<td>port</td>\n<td>PortSelector</td>\n<td>指定要寻址的主机上的端口。如果服务仅公开单个端口，则不需要显式选择端口。</td>\n<td>no</td>\n</tr>\n<tr>\n<td>http</td>\n<td>HTTPRoute[]</td>\n<td>HTTP流量的路由规则的有序列表。HTTP路由将应用于名为“ http- ” /“ http2- ” /“ grpc- *”的平台服务端口，协议为HTTP / HTTP2 / GRPC / TLS终止的HTTPS的网关端口以及使用HTTP / HTTP2 /的服务入口端口GRPC协议。使用匹配传入请求的第一条规则。</td>\n<td>no</td>\n</tr>\n<tr>\n<td>tls</td>\n<td>TLSRoute[]</td>\n<td>未终止的TLS和HTTPS流量的路由规则的有序列表。路由通常使用ClientHello消息显示的SNI值执行。TLS路由将应用于使用HTTPS / TLS协议（即采用“直通” TLS模式）的名为“ https- ”，“ tls- ”的平台服务端口，未终止的网关端口以及使用HTTPS / TLS协议的服务入口端口。使用匹配传入请求的第一条规则。注意：没有关联虚拟服务的流量“ https- ”或“ tls- ”端口将被视为不透明的TCP流量。</td>\n<td>no</td>\n</tr>\n<tr>\n<td>tcp</td>\n<td>TCPRoute[]</td>\n<td>不透明TCP流量的路由规则的有序列表。TCP路由将应用于不是HTTP或TLS端口的任何端口。使用匹配传入请求的第一条规则。</td>\n<td>no</td>\n</tr>\n</tbody></table>\n<h5 id=\"HTTP路由\"><a href=\"#HTTP路由\" class=\"headerlink\" title=\"HTTP路由\"></a>HTTP路由</h5><p>描述用于路由HTTP / 1.1，HTTP2和gRPC通信的匹配条件和操作。有关用法示例，请参见VirtualService。</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>类型</th>\n<th>描述</th>\n<th>是否必须</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>name</td>\n<td>string</td>\n<td>分配给路由以进行调试的名称。路由名称将与匹配名称串联在一起，并将被记录在访问日志中，以查找与此路由/匹配匹配的请求。</td>\n<td>no</td>\n</tr>\n<tr>\n<td>match</td>\n<td>HTTPMatchRequest[]</td>\n<td>匹配要激活的规则要满足的条件。单个匹配块内的所有条件都具有AND语义，而匹配块列表具有OR语义。如果任何一个匹配块成功，则匹配该规则。</td>\n<td>no</td>\n</tr>\n<tr>\n<td>route</td>\n<td>HTTPRouteDestination[]</td>\n<td>HTTP规则可以重定向或转发（默认）流量。转发目标可以是服务的多个版本之一（请参阅文档开头的词汇表）。与服务版本关联的权重决定了它接收的流量比例。</td>\n<td>no</td>\n</tr>\n<tr>\n<td>redirect</td>\n<td>HTTPRedirect</td>\n<td>HTTP规则可以重定向或转发（默认）流量。如果在规则中指定了流量通过选项，则将忽略路由/重定向。重定向原语可用于将HTTP 301重定向发送到其他URI或Authority。</td>\n<td>no</td>\n</tr>\n<tr>\n<td>rewrite</td>\n<td>HTTPRewrite</td>\n<td>重写HTTP URI和Authority标头。重写不能与重定向原语一起使用。重写将在转发之前执行。</td>\n<td>no</td>\n</tr>\n<tr>\n<td>timeout</td>\n<td>Duration</td>\n<td>HTTP请求超时，默认为禁用。</td>\n<td>no</td>\n</tr>\n<tr>\n<td>retries</td>\n<td>HTTPRetry</td>\n<td>重试HTTP请求的策略。</td>\n<td>no</td>\n</tr>\n<tr>\n<td>headers</td>\n<td>Headers</td>\n<td>标头操作规则</td>\n<td>no</td>\n</tr>\n<tr>\n<td>fault</td>\n<td>HTTPFaultInjection</td>\n<td>故障注入策略，适用于客户端的HTTP通信。请注意，如果在客户端启用了错误，则不会启用超时或重试。</td>\n<td>没有</td>\n</tr>\n<tr>\n<td>mirror</td>\n<td>Destination</td>\n<td>除了将请求转发到预期目标之外，还将HTTP流量镜像到另一个目标。镜像流量是基于尽力而为的，在这种情况下，边车/网关在从原始目的地返回响应之前不会等待镜像集群响应。将为镜像目标生成统计信息。</td>\n<td>no</td>\n</tr>\n</tbody></table>\n<p>http 和tcp 、tls 基本上类似 就不重复说明了</p>\n<p>访问页面即可看到页面效果如下:</p>\n<p><img src=\"/uploads/istio/images/m_f048c09d102e39ddf43a9d3e0ae81d47_r.png\"></p>\n<p>红色框的地方就是不同版本的 <code>reviews</code> 服务</p>\n<h5 id=\"请求超时\"><a href=\"#请求超时\" class=\"headerlink\" title=\"请求超时\"></a>请求超时</h5><p>要测试Bookinfo应用程序微服务的弹性，请为用户reviews:v2和的ratings微服务之间注入7s的延迟jason。此测试将发现故意引入Bookinfo应用程序的错误。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">$</span> <span class=\"string\">kubectl</span> <span class=\"string\">get</span> <span class=\"string\">virtualservice</span> <span class=\"string\">ratings</span> <span class=\"string\">-o</span> <span class=\"string\">yaml</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">networking.istio.io/v1beta1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">VirtualService</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">bookinfo-fault-injection</span></span><br><span class=\"line\">  <span class=\"attr\">namespace:</span> <span class=\"string\">demo</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ratings</span></span><br><span class=\"line\">  <span class=\"attr\">http:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">fault:</span></span><br><span class=\"line\">      <span class=\"attr\">delay:</span></span><br><span class=\"line\">        <span class=\"attr\">fixedDelay:</span> <span class=\"string\">7s</span></span><br><span class=\"line\">        <span class=\"attr\">percentage:</span></span><br><span class=\"line\">          <span class=\"attr\">value:</span> <span class=\"number\">100</span></span><br><span class=\"line\">    <span class=\"attr\">match:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">headers:</span></span><br><span class=\"line\">        <span class=\"attr\">end-user:</span></span><br><span class=\"line\">          <span class=\"attr\">exact:</span> <span class=\"string\">jason</span></span><br><span class=\"line\">    <span class=\"attr\">route:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">destination:</span></span><br><span class=\"line\">        <span class=\"attr\">host:</span> <span class=\"string\">ratings</span></span><br><span class=\"line\">        <span class=\"attr\">subset:</span> <span class=\"string\">v1</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">route:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">destination:</span></span><br><span class=\"line\">        <span class=\"attr\">host:</span> <span class=\"string\">ratings</span></span><br><span class=\"line\">        <span class=\"attr\">subset:</span> <span class=\"string\">v1</span></span><br></pre></td></tr></table></figure>\n\n<p>产生的效果如下所示：</p>\n<p>重新加载<code>productpage</code>网页。您将看到该页面实际上在大约6秒钟内加载完成。</p>\n<p><font face=\"黑体\" color=red size=3>意义:</font>Istio启用协议特定的故障注入到网络中，而不是杀死pod，延迟或在TCP层破坏数据包。我们的理由是，无论网络级别的故障如何，应用层观察到的故障都是一样的，并且可以在应用层注入更有意义的故障（例如，HTTP错误代码），以锻炼应用的弹性。</p>\n<p>运维人员可以为符合特定条件的请求配置故障。运维人员可以进一步限制应该遭受故障的请求的百分比。可以注入两种类型的故障：延迟和中止。延迟是计时故障，模拟增加的网络延迟或过载的上游服务。中止是模拟上游服务的崩溃故障。中止通常以HTTP错误代码或TCP连接失败的形式表现。</p>\n<h5 id=\"流量分配\"><a href=\"#流量分配\" class=\"headerlink\" title=\"流量分配\"></a>流量分配</h5><p>一个常见的用例是将流量逐渐从一种微服务版本迁移到另一种。在Istio中，您可以通过配置一系列规则以将一定百分比的流量路由到一项服务或另一项服务来实现此目标。在此任务中，您将发送流量的10％reviews:v1和90％ reviews:v3。然后，您将100％的流量发送到来完成迁移reviews:v3。</p>\n<p>现在来创建我的配置吧</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apiVersion: networking.istio.io/v1beta1</span><br><span class=\"line\">kind: VirtualService</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: bookinfo-traffic-injection</span><br><span class=\"line\">  namespace: demo</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  hosts:</span><br><span class=\"line\">  - reviews</span><br><span class=\"line\">  http:</span><br><span class=\"line\">  - route:</span><br><span class=\"line\">    - destination:</span><br><span class=\"line\">        host: reviews</span><br><span class=\"line\">        subset: v1 <span class=\"comment\"># 需要和DestinationRule 资源的名字对应起来</span></span><br><span class=\"line\">      weight: 10</span><br><span class=\"line\">    - destination:</span><br><span class=\"line\">        host: reviews</span><br><span class=\"line\">        subset: v3</span><br><span class=\"line\">      weight: 90</span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br><span class=\"line\">apiVersion: networking.istio.io/v1alpha3</span><br><span class=\"line\">kind: DestinationRule</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: bookinfo-traffic-injection</span><br><span class=\"line\">  namespace: demo</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  host: reviews</span><br><span class=\"line\">  subsets:</span><br><span class=\"line\">  - name: v1 <span class=\"comment\"># subset指向的名称</span></span><br><span class=\"line\">    labels:</span><br><span class=\"line\">      version: v1 <span class=\"comment\"># 需要路由到pod labels中的version版本对应的值</span></span><br><span class=\"line\">  - name: v2</span><br><span class=\"line\">    labels:</span><br><span class=\"line\">      version: v2</span><br><span class=\"line\">  - name: v3</span><br><span class=\"line\">    labels:</span><br><span class=\"line\">      version: v3</span><br></pre></td></tr></table></figure>\n\n<p>创建以上配置</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">$</span> <span class=\"string\">kubectl</span> <span class=\"string\">apply</span> <span class=\"string\">-f</span> <span class=\"string\">bookinfo-traffic-injection.yaml</span></span><br></pre></td></tr></table></figure>\n\n\n<p>将istio-system下面的kiali的svc地址改成<code>nodeport</code> 访问即可， 默认登陆的用户名密码是 admin/admin</p>\n<p><img src=\"/uploads/istio/images/m_2d6a4a0feac0159ee65ac3aee53ecaaf_r.png\"></p>\n<p>以上是我们还没有配置分配流量时的流量视图，我们可以看到<code>reviews</code>这个服务的三个不同版本的pod都是平均分配的 大约所占比例是33%左右。</p>\n<p>现在我们配置了流量分配再看看是什么样子的。</p>\n<p>我们会发现红色星的次数明显要多余没有星的次数多很多</p>\n<p>我们现在可以借助kiali来看看我们请求的流量视图</p>\n<p><img src=\"/uploads/istio/images/m_010ffca5e15ec7eb30397a2e97db1268_r.png\"></p>\n<p>可以看到<code>reviews</code>不同版本的服务所占比例分别是</p>\n<p><code>v1 ---&gt;14.3% ，v2 ---&gt; 0% ,  v3 ---&gt; 85.7%</code></p>\n<p>现在我们istio的流量分配的设置已经成功了，那么istio的流量分配的意义在哪里，有什么作用呢?</p>\n<p><font face=\"黑体\" color=red size=3>意义:</font>您可以通过 istio 指定特定服务按照你的设定指定转到金丝雀版本，而不必考虑金丝雀部署的大小，或根据请求的内容将流量发送到特定版本。</p>\n<h5 id=\"给服务注入故障\"><a href=\"#给服务注入故障\" class=\"headerlink\" title=\"给服务注入故障\"></a>给服务注入故障</h5><h5 id=\"熔断\"><a href=\"#熔断\" class=\"headerlink\" title=\"熔断\"></a>熔断</h5><h5 id=\"流量镜像\"><a href=\"#流量镜像\" class=\"headerlink\" title=\"流量镜像\"></a>流量镜像</h5><h5 id=\"问题定位\"><a href=\"#问题定位\" class=\"headerlink\" title=\"问题定位\"></a>问题定位</h5><p>在istio中有一个很麻烦的问题 就是配置出错以后很难定位是什么配置错误导致访问出错的问题，所以我们需要专门的工具来定位是什么导致的配置问题。</p>\n<h4 id=\"安全\"><a href=\"#安全\" class=\"headerlink\" title=\"安全\"></a>安全</h4><h5 id=\"证书管理\"><a href=\"#证书管理\" class=\"headerlink\" title=\"证书管理\"></a>证书管理</h5><h5 id=\"认证方式\"><a href=\"#认证方式\" class=\"headerlink\" title=\"认证方式\"></a>认证方式</h5><h3 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h3>","site":{"data":{}},"excerpt":"","more":"<p>istio 流量管理使用说明</p>\n<h3 id=\"前提条件\"><a href=\"#前提条件\" class=\"headerlink\" title=\"前提条件\"></a>前提条件</h3><p>在开始之前，请检查以下先决条件：</p>\n<ol>\n<li>检查kubernetes 集群pod和 <font face=\"黑体\" color=green size=3>服务</font></li>\n<li>使用1.6 以上版本的istio,并检查 pod和服务</li>\n<li>设定 必要的平台设置</li>\n</ol>\n<h3 id=\"部署测试服务-bookinfo\"><a href=\"#部署测试服务-bookinfo\" class=\"headerlink\" title=\"部署测试服务 bookinfo\"></a>部署测试服务 bookinfo</h3><p>我们就使用istio 官方使用的测试服务<code>BookInfo</code></p>\n<p>Bookinfo应用程序分为四个单独的微服务：</p>\n<p>productpage。该productpage微服务调用details和reviews微服务来填充页面。<br>details。该details微服务包含图书信息。<br>reviews。该reviews微服务包含了书评。它还称为ratings微服务。<br>ratings。该ratings微服务包含预定伴随书评排名信息。<br>reviews微服务有3个版本：</p>\n<p>版本v1不会调用该ratings服务。<br>版本v2调用该ratings服务，并将每个等级显示为1到5个黑星。<br>版本v3调用该ratings服务，并将每个等级显示为1到5个红色星号。</p>\n<p>访问关系如下图</p>\n<p><img src=\"/uploads/istio/images/m_88841685b364bda18fb333e9acb97366_r.png\" alt=\"bookInfo\"></p>\n<p>首先部署bookinfo服务之前我们需要给 bookinfo 注入<br>sidecar,若给namespace打 <code>istio-injection=enabled</code>的labels 则istio会给当前namespace下的所有pod自动注入sidecar</p>\n<p>假设我们将bookinfo 部署到demo的这个namespace中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">$ kubectl label namespace demo istio-injection=enabled</span><br></pre></td></tr></table></figure>\n\n<p>查看labels是否设置成功</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get namespace demo --show-labels</span><br></pre></td></tr></table></figure>\n\n<p>然后你就看到一下的效果 如果最后一个字段上面显示<code>istio-injection=enabled</code>则代表labels 设置成功</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NAME   STATUS   AGE   LABELS</span><br><span class=\"line\">demo   Active   24s   istio-injection=enabled</span><br></pre></td></tr></table></figure>\n\n<p>部署 BookInfo</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl apply -f istio/bookinfo.yml</span><br></pre></td></tr></table></figure>\n\n<p>查看 服务是否正常部署且 成功注入sidecar</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get po -n demo</span><br></pre></td></tr></table></figure>\n\n<p>确认 所有的service 和pod 都Running </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get service -n demo </span><br><span class=\"line\"></span><br><span class=\"line\">NAME          TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)    AGE</span><br><span class=\"line\">details       ClusterIP   10.0.0.31    &lt;none&gt;        9080/TCP   6m</span><br><span class=\"line\">kubernetes    ClusterIP   10.0.0.1     &lt;none&gt;        443/TCP    7d</span><br><span class=\"line\">productpage   ClusterIP   10.0.0.120   &lt;none&gt;        9080/TCP   6m</span><br><span class=\"line\">ratings       ClusterIP   10.0.0.15    &lt;none&gt;        9080/TCP   6m</span><br><span class=\"line\">reviews       ClusterIP   10.0.0.170   &lt;none&gt;        9080/TCP   6m</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">$ kubectl get pods -n demo</span><br><span class=\"line\"></span><br><span class=\"line\">NAME                             READY     STATUS    RESTARTS   AGE</span><br><span class=\"line\">details-v1-1520924117-48z17      2/2       Running   0          6m</span><br><span class=\"line\">productpage-v1-560495357-jk1lz   2/2       Running   0          6m</span><br><span class=\"line\">ratings-v1-734492171-rnr5l       2/2       Running   0          6m</span><br><span class=\"line\">reviews-v1-874083890-f0qf0       2/2       Running   0          6m</span><br><span class=\"line\">reviews-v2-1343845940-b34q5      2/2       Running   0          6m</span><br><span class=\"line\">reviews-v3-1813607990-8ch52      2/2       Running   0          6m</span><br></pre></td></tr></table></figure>\n\n<p>如果所有pod ready 显示 2/2 则 服务正确注入sidecar</p>\n<h3 id=\"流量管理\"><a href=\"#流量管理\" class=\"headerlink\" title=\"流量管理\"></a>流量管理</h3><h5 id=\"配置服务访问\"><a href=\"#配置服务访问\" class=\"headerlink\" title=\"配置服务访问\"></a>配置服务访问</h5><p>如何将请求动态路由到微服务的多个版本。</p>\n<p>istio Bookinfo示例包含四个单独的微服务，每个微服务具有多个版本。微服务之一的三种不同版本reviews已经部署并同时运行。为了说明此问题，请/productpage在浏览器中访问Bookinfo应用，然后刷新几次。您会注意到，有时书评输出中包含星级，有时则不。这是因为如果没有明确的默认服务版本可路由，Istio将以循环方式将请求路由到所有可用版本。</p>\n<p>配置方式如下所示</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">networking.istio.io/v1beta1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Gateway</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">bookinfo-gateway</span></span><br><span class=\"line\">  <span class=\"attr\">namespace:</span> <span class=\"string\">demo</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">selector:</span></span><br><span class=\"line\">    <span class=\"attr\">istio:</span> <span class=\"string\">ingressgateway</span> <span class=\"comment\"># istio-system 下面的istio-ingressgateway 的labels</span></span><br><span class=\"line\">  <span class=\"attr\">servers:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">hosts:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*&#x27;</span> <span class=\"comment\"># 指定访问域名</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span></span><br><span class=\"line\">      <span class=\"attr\">name:</span> <span class=\"string\">http</span> </span><br><span class=\"line\">      <span class=\"attr\">number:</span> <span class=\"number\">80</span> <span class=\"comment\"># 访问端口</span></span><br><span class=\"line\">      <span class=\"attr\">protocol:</span> <span class=\"string\">HTTP</span> <span class=\"comment\"># 访问协议名称</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">networking.istio.io/v1beta1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">VirtualService</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">bookinfo</span></span><br><span class=\"line\">  <span class=\"attr\">namespace:</span> <span class=\"string\">demo</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">gateways:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">bookinfo-gateway</span> <span class=\"comment\"># 网关gateway的名称</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*&#x27;</span> <span class=\"comment\"># 访问的svc 的名称</span></span><br><span class=\"line\">  <span class=\"attr\">http:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">match:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">uri:</span></span><br><span class=\"line\">        <span class=\"attr\">exact:</span> <span class=\"string\">/productpage</span> <span class=\"comment\"># 精确匹配 路径</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">uri:</span></span><br><span class=\"line\">        <span class=\"attr\">prefix:</span> <span class=\"string\">/static</span> <span class=\"comment\"># 前缀匹配路径</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">uri:</span></span><br><span class=\"line\">        <span class=\"attr\">exact:</span> <span class=\"string\">/login</span> </span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">uri:</span></span><br><span class=\"line\">        <span class=\"attr\">exact:</span> <span class=\"string\">/logout</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">uri:</span></span><br><span class=\"line\">        <span class=\"attr\">prefix:</span> <span class=\"string\">/api/v1/products</span></span><br><span class=\"line\">    <span class=\"attr\">route:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">destination:</span></span><br><span class=\"line\">        <span class=\"attr\">host:</span> <span class=\"string\">productpage</span> <span class=\"comment\"># 目的服务 svc地址</span></span><br><span class=\"line\">        <span class=\"attr\">port:</span></span><br><span class=\"line\">          <span class=\"attr\">number:</span> <span class=\"number\">9080</span> <span class=\"comment\"># 目的端口</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>以上配置的名词解释</p>\n<p>网关配置 gateway 必要字段的解释</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>类型</th>\n<th>描述</th>\n<th>是否必须</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>selector</td>\n<td>map&lt;string, string&gt;</td>\n<td>一个或多个标签，指示应在其上应用此网关配置的一组特定的Pod / VM。 默认情况下，基于标签选择器在所有名称空间中搜索工作负载。 这意味着名称空间“ foo”中的网关资源可以基于标签选择名称空间“ bar”中的pod。 可以通过istiod中的<code>PILOTSCOPEGATEWAYTONAMESPACE</code>环境变量来控制此行为。 如果将此变量设置为true，则标签搜索的范围将限于存在资源的配置名称空间。 换句话说，网关资源必须与网关工作负载实例位于相同的名称空间中。 如果选择器为零，则网关将应用于所有工作负载。</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>hosts</td>\n<td>[]string</td>\n<td>此网关公开的一台或多台主机。 尽管通常适用于HTTP服务，但也可以将其用于使用TLS和SNI的TCP服务。 主机被指定为带有可选名称空间/前缀的dnsName。 dnsName应该使用FQDN格式指定，可以选择在最左侧的组件中包含通配符（例如prod / <em>.example.com）。 将dnsName设置为</em>，以从指定的名称空间（例如prod / <em>）中选择所有VirtualService主机。可以将名称空间设置为</em>或。，分别代表任意名称空间或当前名称空间。 例如，* / foo.example.com从任何可用的名称空间中选择服务，而./foo.example.com仅从Sidecar的名称空间中选择服务。 如果未指定名称空间/，则默认值为* /，即从任何名称空间中选择服务。 还将使用所选名称空间中的任何关联的DestinationRule。虚拟服务必须绑定到网关，并且必须具有一个或多个与服务器中指定的主机匹配的主机。 匹配可以是与服务器主机的完全匹配或后缀匹配。 例如，如果服务器的主机指定* .example.com，则具有主机dev.example.com或prod.example.com的VirtualService将匹配。 但是，带有主机example.com或newexample.com的VirtualService将不匹配。注意：仅可以引用导出到网关名称空间的虚拟服务（例如，exportTo值为*）。 私有配置（例如，exportTo设置为）将不可用。 有关详细信息，请参考VirtualService，DestinationRule和ServiceEntry配置中的exportTo设置。</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>port</td>\n<td>port</td>\n<td>代理应在其上侦听传入连接的端口和协议</td>\n<td>yes</td>\n</tr>\n</tbody></table>\n<p>获取效果如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">➜  ~ kubectl get gw -n demo</span><br><span class=\"line\">NAME               AGE</span><br><span class=\"line\">bookinfo-gateway   11m</span><br><span class=\"line\">➜  ~ kubectl get vs -n demo</span><br><span class=\"line\">NAME                         GATEWAYS             HOSTS                                  AGE</span><br><span class=\"line\">bookinfo                     [bookinfo-gateway]   [*]                                    11m</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"VirtualService\"><a href=\"#VirtualService\" class=\"headerlink\" title=\"VirtualService\"></a>VirtualService</h5><p>定义了一组寻址主机时要应用的流量路由规则。每个路由规则为特定协议的流量定义匹配条件。如果流量匹配，则将其发送到注册表中定义的命名目标服务（或其子集/版本）。</p>\n<p>以下为VirtualService 字段的名词解释</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>类型</th>\n<th>描述</th>\n<th>是否必须</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>hosts</td>\n<td>string[]</td>\n<td>hosts字段适用于HTTP和TCP服务。网格内的服务（即在服务注册表中找到的服务）必须始终使用其字母数字名称进行引用。IP地址仅允许通过网关定义的服务使用。</td>\n<td>no</td>\n</tr>\n<tr>\n<td>gateways</td>\n<td>string[]</td>\n<td>应应用这些路由的网关和sidecar的名称。其他名称空间中的网关可以由<gateway namespace>/<gateway name>;引用 。指定没有名称空间限定符的网关与指定VirtualService的名称空间相同</td>\n<td>no</td>\n</tr>\n<tr>\n<td>subset</td>\n<td>string</td>\n<td>服务中子集的名称。仅适用于网格内的服务。该子集必须在相应的DestinationRule中定义。</td>\n<td>node</td>\n</tr>\n<tr>\n<td>port</td>\n<td>PortSelector</td>\n<td>指定要寻址的主机上的端口。如果服务仅公开单个端口，则不需要显式选择端口。</td>\n<td>no</td>\n</tr>\n<tr>\n<td>http</td>\n<td>HTTPRoute[]</td>\n<td>HTTP流量的路由规则的有序列表。HTTP路由将应用于名为“ http- ” /“ http2- ” /“ grpc- *”的平台服务端口，协议为HTTP / HTTP2 / GRPC / TLS终止的HTTPS的网关端口以及使用HTTP / HTTP2 /的服务入口端口GRPC协议。使用匹配传入请求的第一条规则。</td>\n<td>no</td>\n</tr>\n<tr>\n<td>tls</td>\n<td>TLSRoute[]</td>\n<td>未终止的TLS和HTTPS流量的路由规则的有序列表。路由通常使用ClientHello消息显示的SNI值执行。TLS路由将应用于使用HTTPS / TLS协议（即采用“直通” TLS模式）的名为“ https- ”，“ tls- ”的平台服务端口，未终止的网关端口以及使用HTTPS / TLS协议的服务入口端口。使用匹配传入请求的第一条规则。注意：没有关联虚拟服务的流量“ https- ”或“ tls- ”端口将被视为不透明的TCP流量。</td>\n<td>no</td>\n</tr>\n<tr>\n<td>tcp</td>\n<td>TCPRoute[]</td>\n<td>不透明TCP流量的路由规则的有序列表。TCP路由将应用于不是HTTP或TLS端口的任何端口。使用匹配传入请求的第一条规则。</td>\n<td>no</td>\n</tr>\n</tbody></table>\n<h5 id=\"HTTP路由\"><a href=\"#HTTP路由\" class=\"headerlink\" title=\"HTTP路由\"></a>HTTP路由</h5><p>描述用于路由HTTP / 1.1，HTTP2和gRPC通信的匹配条件和操作。有关用法示例，请参见VirtualService。</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>类型</th>\n<th>描述</th>\n<th>是否必须</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>name</td>\n<td>string</td>\n<td>分配给路由以进行调试的名称。路由名称将与匹配名称串联在一起，并将被记录在访问日志中，以查找与此路由/匹配匹配的请求。</td>\n<td>no</td>\n</tr>\n<tr>\n<td>match</td>\n<td>HTTPMatchRequest[]</td>\n<td>匹配要激活的规则要满足的条件。单个匹配块内的所有条件都具有AND语义，而匹配块列表具有OR语义。如果任何一个匹配块成功，则匹配该规则。</td>\n<td>no</td>\n</tr>\n<tr>\n<td>route</td>\n<td>HTTPRouteDestination[]</td>\n<td>HTTP规则可以重定向或转发（默认）流量。转发目标可以是服务的多个版本之一（请参阅文档开头的词汇表）。与服务版本关联的权重决定了它接收的流量比例。</td>\n<td>no</td>\n</tr>\n<tr>\n<td>redirect</td>\n<td>HTTPRedirect</td>\n<td>HTTP规则可以重定向或转发（默认）流量。如果在规则中指定了流量通过选项，则将忽略路由/重定向。重定向原语可用于将HTTP 301重定向发送到其他URI或Authority。</td>\n<td>no</td>\n</tr>\n<tr>\n<td>rewrite</td>\n<td>HTTPRewrite</td>\n<td>重写HTTP URI和Authority标头。重写不能与重定向原语一起使用。重写将在转发之前执行。</td>\n<td>no</td>\n</tr>\n<tr>\n<td>timeout</td>\n<td>Duration</td>\n<td>HTTP请求超时，默认为禁用。</td>\n<td>no</td>\n</tr>\n<tr>\n<td>retries</td>\n<td>HTTPRetry</td>\n<td>重试HTTP请求的策略。</td>\n<td>no</td>\n</tr>\n<tr>\n<td>headers</td>\n<td>Headers</td>\n<td>标头操作规则</td>\n<td>no</td>\n</tr>\n<tr>\n<td>fault</td>\n<td>HTTPFaultInjection</td>\n<td>故障注入策略，适用于客户端的HTTP通信。请注意，如果在客户端启用了错误，则不会启用超时或重试。</td>\n<td>没有</td>\n</tr>\n<tr>\n<td>mirror</td>\n<td>Destination</td>\n<td>除了将请求转发到预期目标之外，还将HTTP流量镜像到另一个目标。镜像流量是基于尽力而为的，在这种情况下，边车/网关在从原始目的地返回响应之前不会等待镜像集群响应。将为镜像目标生成统计信息。</td>\n<td>no</td>\n</tr>\n</tbody></table>\n<p>http 和tcp 、tls 基本上类似 就不重复说明了</p>\n<p>访问页面即可看到页面效果如下:</p>\n<p><img src=\"/uploads/istio/images/m_f048c09d102e39ddf43a9d3e0ae81d47_r.png\"></p>\n<p>红色框的地方就是不同版本的 <code>reviews</code> 服务</p>\n<h5 id=\"请求超时\"><a href=\"#请求超时\" class=\"headerlink\" title=\"请求超时\"></a>请求超时</h5><p>要测试Bookinfo应用程序微服务的弹性，请为用户reviews:v2和的ratings微服务之间注入7s的延迟jason。此测试将发现故意引入Bookinfo应用程序的错误。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">$</span> <span class=\"string\">kubectl</span> <span class=\"string\">get</span> <span class=\"string\">virtualservice</span> <span class=\"string\">ratings</span> <span class=\"string\">-o</span> <span class=\"string\">yaml</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">networking.istio.io/v1beta1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">VirtualService</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">bookinfo-fault-injection</span></span><br><span class=\"line\">  <span class=\"attr\">namespace:</span> <span class=\"string\">demo</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ratings</span></span><br><span class=\"line\">  <span class=\"attr\">http:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">fault:</span></span><br><span class=\"line\">      <span class=\"attr\">delay:</span></span><br><span class=\"line\">        <span class=\"attr\">fixedDelay:</span> <span class=\"string\">7s</span></span><br><span class=\"line\">        <span class=\"attr\">percentage:</span></span><br><span class=\"line\">          <span class=\"attr\">value:</span> <span class=\"number\">100</span></span><br><span class=\"line\">    <span class=\"attr\">match:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">headers:</span></span><br><span class=\"line\">        <span class=\"attr\">end-user:</span></span><br><span class=\"line\">          <span class=\"attr\">exact:</span> <span class=\"string\">jason</span></span><br><span class=\"line\">    <span class=\"attr\">route:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">destination:</span></span><br><span class=\"line\">        <span class=\"attr\">host:</span> <span class=\"string\">ratings</span></span><br><span class=\"line\">        <span class=\"attr\">subset:</span> <span class=\"string\">v1</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">route:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">destination:</span></span><br><span class=\"line\">        <span class=\"attr\">host:</span> <span class=\"string\">ratings</span></span><br><span class=\"line\">        <span class=\"attr\">subset:</span> <span class=\"string\">v1</span></span><br></pre></td></tr></table></figure>\n\n<p>产生的效果如下所示：</p>\n<p>重新加载<code>productpage</code>网页。您将看到该页面实际上在大约6秒钟内加载完成。</p>\n<p><font face=\"黑体\" color=red size=3>意义:</font>Istio启用协议特定的故障注入到网络中，而不是杀死pod，延迟或在TCP层破坏数据包。我们的理由是，无论网络级别的故障如何，应用层观察到的故障都是一样的，并且可以在应用层注入更有意义的故障（例如，HTTP错误代码），以锻炼应用的弹性。</p>\n<p>运维人员可以为符合特定条件的请求配置故障。运维人员可以进一步限制应该遭受故障的请求的百分比。可以注入两种类型的故障：延迟和中止。延迟是计时故障，模拟增加的网络延迟或过载的上游服务。中止是模拟上游服务的崩溃故障。中止通常以HTTP错误代码或TCP连接失败的形式表现。</p>\n<h5 id=\"流量分配\"><a href=\"#流量分配\" class=\"headerlink\" title=\"流量分配\"></a>流量分配</h5><p>一个常见的用例是将流量逐渐从一种微服务版本迁移到另一种。在Istio中，您可以通过配置一系列规则以将一定百分比的流量路由到一项服务或另一项服务来实现此目标。在此任务中，您将发送流量的10％reviews:v1和90％ reviews:v3。然后，您将100％的流量发送到来完成迁移reviews:v3。</p>\n<p>现在来创建我的配置吧</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apiVersion: networking.istio.io/v1beta1</span><br><span class=\"line\">kind: VirtualService</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: bookinfo-traffic-injection</span><br><span class=\"line\">  namespace: demo</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  hosts:</span><br><span class=\"line\">  - reviews</span><br><span class=\"line\">  http:</span><br><span class=\"line\">  - route:</span><br><span class=\"line\">    - destination:</span><br><span class=\"line\">        host: reviews</span><br><span class=\"line\">        subset: v1 <span class=\"comment\"># 需要和DestinationRule 资源的名字对应起来</span></span><br><span class=\"line\">      weight: 10</span><br><span class=\"line\">    - destination:</span><br><span class=\"line\">        host: reviews</span><br><span class=\"line\">        subset: v3</span><br><span class=\"line\">      weight: 90</span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br><span class=\"line\">apiVersion: networking.istio.io/v1alpha3</span><br><span class=\"line\">kind: DestinationRule</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: bookinfo-traffic-injection</span><br><span class=\"line\">  namespace: demo</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  host: reviews</span><br><span class=\"line\">  subsets:</span><br><span class=\"line\">  - name: v1 <span class=\"comment\"># subset指向的名称</span></span><br><span class=\"line\">    labels:</span><br><span class=\"line\">      version: v1 <span class=\"comment\"># 需要路由到pod labels中的version版本对应的值</span></span><br><span class=\"line\">  - name: v2</span><br><span class=\"line\">    labels:</span><br><span class=\"line\">      version: v2</span><br><span class=\"line\">  - name: v3</span><br><span class=\"line\">    labels:</span><br><span class=\"line\">      version: v3</span><br></pre></td></tr></table></figure>\n\n<p>创建以上配置</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">$</span> <span class=\"string\">kubectl</span> <span class=\"string\">apply</span> <span class=\"string\">-f</span> <span class=\"string\">bookinfo-traffic-injection.yaml</span></span><br></pre></td></tr></table></figure>\n\n\n<p>将istio-system下面的kiali的svc地址改成<code>nodeport</code> 访问即可， 默认登陆的用户名密码是 admin/admin</p>\n<p><img src=\"/uploads/istio/images/m_2d6a4a0feac0159ee65ac3aee53ecaaf_r.png\"></p>\n<p>以上是我们还没有配置分配流量时的流量视图，我们可以看到<code>reviews</code>这个服务的三个不同版本的pod都是平均分配的 大约所占比例是33%左右。</p>\n<p>现在我们配置了流量分配再看看是什么样子的。</p>\n<p>我们会发现红色星的次数明显要多余没有星的次数多很多</p>\n<p>我们现在可以借助kiali来看看我们请求的流量视图</p>\n<p><img src=\"/uploads/istio/images/m_010ffca5e15ec7eb30397a2e97db1268_r.png\"></p>\n<p>可以看到<code>reviews</code>不同版本的服务所占比例分别是</p>\n<p><code>v1 ---&gt;14.3% ，v2 ---&gt; 0% ,  v3 ---&gt; 85.7%</code></p>\n<p>现在我们istio的流量分配的设置已经成功了，那么istio的流量分配的意义在哪里，有什么作用呢?</p>\n<p><font face=\"黑体\" color=red size=3>意义:</font>您可以通过 istio 指定特定服务按照你的设定指定转到金丝雀版本，而不必考虑金丝雀部署的大小，或根据请求的内容将流量发送到特定版本。</p>\n<h5 id=\"给服务注入故障\"><a href=\"#给服务注入故障\" class=\"headerlink\" title=\"给服务注入故障\"></a>给服务注入故障</h5><h5 id=\"熔断\"><a href=\"#熔断\" class=\"headerlink\" title=\"熔断\"></a>熔断</h5><h5 id=\"流量镜像\"><a href=\"#流量镜像\" class=\"headerlink\" title=\"流量镜像\"></a>流量镜像</h5><h5 id=\"问题定位\"><a href=\"#问题定位\" class=\"headerlink\" title=\"问题定位\"></a>问题定位</h5><p>在istio中有一个很麻烦的问题 就是配置出错以后很难定位是什么配置错误导致访问出错的问题，所以我们需要专门的工具来定位是什么导致的配置问题。</p>\n<h4 id=\"安全\"><a href=\"#安全\" class=\"headerlink\" title=\"安全\"></a>安全</h4><h5 id=\"证书管理\"><a href=\"#证书管理\" class=\"headerlink\" title=\"证书管理\"></a>证书管理</h5><h5 id=\"认证方式\"><a href=\"#认证方式\" class=\"headerlink\" title=\"认证方式\"></a>认证方式</h5><h3 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h3>"},{"title":"kiali 源码解析","date":"2021-01-21T10:36:28.000Z","_content":"\n\nkiali 源码解析\n\n前言: \n\nKiali是用于基于Istio的服务网格的管理控制台。它提供仪表板，可观察性，并允许您使用强大的配置和验证功能来操作网格。它通过推断流量拓扑来显示服务网格的结构，并显示网格的运行状况。Kiali提供了详细的指标，强大的验证，Grafana访问以及与Jaeger进行分布式跟踪的强大集成。\n\n\n以下就是kiali的流量试图 界面\n\n![kiali](https://kiali.io/images/documentation/features/graph-health-v1.22.0.png)\n\nKiali是用于基于Istio的服务网格的管理控制台 所以得使用istio来安装kiali插件\n\n如何istio 来安装kiali\n\n```bash\n$ istioctl manifest apply --set values.kiali.enabled=true\n```\n\nkiali 的默认 用户名与密码是 admin/admin\n\n## kiali 流量试图\n\n### kiali route 路由\n\nrouting/router\n\n```go\n// 根路由 指向 静态页面\nif webRoot != \"/\" {\n\t\trootRouter.HandleFunc(webRoot, func(w http.ResponseWriter, r *http.Request) {\n\t\t\thttp.Redirect(w, r, webRootWithSlash, http.StatusFound)\n\t\t})\n\n\t\t// help the user out - if a request comes in for \"/\", redirect to our true webroot\n\t\trootRouter.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) {\n\t\t\thttp.Redirect(w, r, webRootWithSlash, http.StatusFound)\n\t\t})\n\n\t\tappRouter = rootRouter.PathPrefix(conf.Server.WebRoot).Subrouter()\n\t}\n\tappRouter = appRouter.StrictSlash(true)\n\n// 路由指向代理的function \n\tr.Routes = []Route{\n\t\t// swagger:route GET /healthz kiali healthz\n\t\t// ---\n\t\t// Endpoint to get the health of Kiali\n\t\t//\n\t\t//     Produces:\n\t\t//     - application/json\n\t\t//\n\t\t//     Schemes: http, https\n\t\t// responses:\n\t\t//\t\t500: internalError\n\t\t//\t\t200\n\t\t{\n\t\t\t\"Healthz\",\n\t\t\t\"GET\",\n\t\t\t\"/healthz\",\n\t\t\thandlers.Healthz,\n\t\t\tfalse,\n\t\t},\n\t\t// swagger:route GET / kiali root\n\t\t// ---\n\t\t// Endpoint to get the status of Kiali\n\t\t//\n\t\t//     Produces:\n\t\t//     - application/json\n\t\t//\n\t\t//     Schemes: http, https\n\t\t// responses:\n\t\t//      500: internalError\n\t\t//      200: statusInfo\n\t\t{\n\t\t\t\"Root\",\n\t\t\t\"GET\",\n\t\t\t\"/api\",\n\t\t\thandlers.Root,\n\t\t\tfalse,\n\t\t}\n}\n```\n\n\nkiali里面最复杂的就是流量视图了 现在我们看看kiali是怎么做的\n\n/graph/api/api\n\n```go\n\nfunc GraphNamespaces(business *business.Layer, o graph.Options) (code int, config interface{}) {\n\t// time how long it takes to generate this graph\n\tpromtimer := internalmetrics.GetGraphGenerationTimePrometheusTimer(o.GetGraphKind(), o.TelemetryOptions.GraphType, o.InjectServiceNodes)\n\tdefer promtimer.ObserveDuration()\n\n\tswitch o.TelemetryVendor {\n\tcase graph.VendorIstio:\n\t\tprom, err := prometheus.NewClientNoAuth(business.PromAddress)\n\t\tgraph.CheckError(err)\n//获取config 蓝图信息\n\t\tcode, config = graphNamespacesIstio(business, prom, o)\n\tdefault:\n\t\tgraph.Error(fmt.Sprintf(\"TelemetryVendor [%s] not supported\", o.TelemetryVendor))\n\t}\n\n\t// update metrics\n\tinternalmetrics.SetGraphNodes(o.GetGraphKind(), o.TelemetryOptions.GraphType, o.InjectServiceNodes, 0)\n\n\treturn code, config\n}\n```\n\n\n构造 TrafficMap\n\ngraph/telemetry/istio/istio.go\n\n```go\n\n// BuildNamespacesTrafficMap is required by the graph/TelemtryVendor interface\nfunc BuildNamespacesTrafficMap(o graph.TelemetryOptions, client *prometheus.Client, globalInfo *graph.AppenderGlobalInfo) graph.TrafficMap {\n\tlog.Tracef(\"Build [%s] graph for [%v] namespaces [%s]\", o.GraphType, len(o.Namespaces), o.Namespaces)\n\n\tsetLabels()\n\tappenders := appender.ParseAppenders(o)\n\ttrafficMap := graph.NewTrafficMap()\n\n\tfor _, namespace := range o.Namespaces {\n\t\tlog.Tracef(\"Build traffic map for namespace [%s]\", namespace)\n\t\t//生成一个 namespaceTrafficMap\n\t\tnamespaceTrafficMap := buildNamespaceTrafficMap(namespace.Name, o, client)\n\t\tnamespaceInfo := graph.NewAppenderNamespaceInfo(namespace.Name)\n\t\tfor _, a := range appenders {\n\t\t\tappenderTimer := internalmetrics.GetGraphAppenderTimePrometheusTimer(a.Name())\n\t\t\ta.AppendGraph(namespaceTrafficMap, globalInfo, namespaceInfo)\n\t\t\tappenderTimer.ObserveDuration()\n\t\t}\n\t\t// 将 namespaceTrafficMap merge ---->  trafficMap 中\n\t\ttelemetry.MergeTrafficMaps(trafficMap, namespace.Name, namespaceTrafficMap)\n\t}\n\n\t// The appenders can add/remove/alter nodes. After the manipulations are complete\n\t// we can make some final adjustments:\n\t// - mark the outsiders (i.e. nodes not in the requested namespaces)\n\t// - mark the insider traffic generators (i.e. inside the namespace and only outgoing edges)\n\ttelemetry.MarkOutsideOrInaccessible(trafficMap, o)\n\ttelemetry.MarkTrafficGenerators(trafficMap)\n\n\tif graph.GraphTypeService == o.GraphType {\n\t\ttrafficMap = telemetry.ReduceToServiceGraph(trafficMap)\n\t}\n\n\treturn trafficMap\n}\n```\n\nAppender 这个interface 主要负责获取和组装流量视图的节点信息和线的信息\n\ngraph/appender.go\n\n```go\n// Appender is implemented by any code offering to append a service graph with\n// supplemental information.  On error the appender should panic and it will be\n// handled as an error response.\ntype Appender interface {\n\t// AppendGraph performs the appender work on the provided traffic map. The map\n\t// may be initially empty. An appender is allowed to add or remove map entries.\n\tAppendGraph(trafficMap TrafficMap, globalInfo *AppenderGlobalInfo, namespaceInfo *AppenderNamespaceInfo)\n\t// Name returns a unique appender name and which is the name used to identify the appender (e.g in 'appenders' query param)\n\tName() string\n}\n\n```\n\n#### appender中有几种实现\n\n* istio: 负责标记具有特殊Istio意义的节点\n* deadNode: 负责从图中删除不需要的节点\n* serviceEntry: ServiceEntryAppender负责标识在Istio中定义为serviceEntry的服务节点。\n单个serviceEntry可以定义多个主机，\n因此多个服务节点可以\n映射到单个serviceEntry的不同主机。我们将这些称为“ se-service”节点\n* responseTime: ResponseTimeAppender负责将responseTime信息添加到图形中\n* securityPolicy: SecurityPolicyAppender负责向图表添加securityPolicy信息。\n尽管以通用方式编写，但该附加程序当前仅报告international_tls安全性。\n* sidecarsCheck: SidecarsCheckAppender标记其后备工作负载缺少至少一个Envoy sidecar的节点。请注意，\n没有后备工作负载的节点未标记。\n* unusedNode: 调用函数成功时，函数处理时间指标的持续时间值。\n如果不成功，则递增失败计数器。\n如果围棋函数不在一个类型上（即是一个全局函数），请为goType传入一个空字符串。\n当该函数返回时，定时器立即开始计时。\n\nappender中的实现必须得有先后顺序, service-entry --> deadNode --> responseTime ---> securityPolicy --->  unusedNode --> istio\n\n经过appender之后将trafficMap merge 到 traffic map中\n\n```go\ntrafficMap := graph.NewTrafficMap()\n\n// 将 namespaceTrafficMap merge ---->  trafficMap 中\n\ntelemetry.MergeTrafficMaps(trafficMap, namespace.Name, namespaceTrafficMap)\n```\n\n","source":"_posts/k8s/kiali.md","raw":"---\ntitle: kiali 源码解析\ndate: 2021-01-21 18:36:28\ncategories: \n- istio\ntags: \n- istio\n- kiali\n---\n\n\nkiali 源码解析\n\n前言: \n\nKiali是用于基于Istio的服务网格的管理控制台。它提供仪表板，可观察性，并允许您使用强大的配置和验证功能来操作网格。它通过推断流量拓扑来显示服务网格的结构，并显示网格的运行状况。Kiali提供了详细的指标，强大的验证，Grafana访问以及与Jaeger进行分布式跟踪的强大集成。\n\n\n以下就是kiali的流量试图 界面\n\n![kiali](https://kiali.io/images/documentation/features/graph-health-v1.22.0.png)\n\nKiali是用于基于Istio的服务网格的管理控制台 所以得使用istio来安装kiali插件\n\n如何istio 来安装kiali\n\n```bash\n$ istioctl manifest apply --set values.kiali.enabled=true\n```\n\nkiali 的默认 用户名与密码是 admin/admin\n\n## kiali 流量试图\n\n### kiali route 路由\n\nrouting/router\n\n```go\n// 根路由 指向 静态页面\nif webRoot != \"/\" {\n\t\trootRouter.HandleFunc(webRoot, func(w http.ResponseWriter, r *http.Request) {\n\t\t\thttp.Redirect(w, r, webRootWithSlash, http.StatusFound)\n\t\t})\n\n\t\t// help the user out - if a request comes in for \"/\", redirect to our true webroot\n\t\trootRouter.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) {\n\t\t\thttp.Redirect(w, r, webRootWithSlash, http.StatusFound)\n\t\t})\n\n\t\tappRouter = rootRouter.PathPrefix(conf.Server.WebRoot).Subrouter()\n\t}\n\tappRouter = appRouter.StrictSlash(true)\n\n// 路由指向代理的function \n\tr.Routes = []Route{\n\t\t// swagger:route GET /healthz kiali healthz\n\t\t// ---\n\t\t// Endpoint to get the health of Kiali\n\t\t//\n\t\t//     Produces:\n\t\t//     - application/json\n\t\t//\n\t\t//     Schemes: http, https\n\t\t// responses:\n\t\t//\t\t500: internalError\n\t\t//\t\t200\n\t\t{\n\t\t\t\"Healthz\",\n\t\t\t\"GET\",\n\t\t\t\"/healthz\",\n\t\t\thandlers.Healthz,\n\t\t\tfalse,\n\t\t},\n\t\t// swagger:route GET / kiali root\n\t\t// ---\n\t\t// Endpoint to get the status of Kiali\n\t\t//\n\t\t//     Produces:\n\t\t//     - application/json\n\t\t//\n\t\t//     Schemes: http, https\n\t\t// responses:\n\t\t//      500: internalError\n\t\t//      200: statusInfo\n\t\t{\n\t\t\t\"Root\",\n\t\t\t\"GET\",\n\t\t\t\"/api\",\n\t\t\thandlers.Root,\n\t\t\tfalse,\n\t\t}\n}\n```\n\n\nkiali里面最复杂的就是流量视图了 现在我们看看kiali是怎么做的\n\n/graph/api/api\n\n```go\n\nfunc GraphNamespaces(business *business.Layer, o graph.Options) (code int, config interface{}) {\n\t// time how long it takes to generate this graph\n\tpromtimer := internalmetrics.GetGraphGenerationTimePrometheusTimer(o.GetGraphKind(), o.TelemetryOptions.GraphType, o.InjectServiceNodes)\n\tdefer promtimer.ObserveDuration()\n\n\tswitch o.TelemetryVendor {\n\tcase graph.VendorIstio:\n\t\tprom, err := prometheus.NewClientNoAuth(business.PromAddress)\n\t\tgraph.CheckError(err)\n//获取config 蓝图信息\n\t\tcode, config = graphNamespacesIstio(business, prom, o)\n\tdefault:\n\t\tgraph.Error(fmt.Sprintf(\"TelemetryVendor [%s] not supported\", o.TelemetryVendor))\n\t}\n\n\t// update metrics\n\tinternalmetrics.SetGraphNodes(o.GetGraphKind(), o.TelemetryOptions.GraphType, o.InjectServiceNodes, 0)\n\n\treturn code, config\n}\n```\n\n\n构造 TrafficMap\n\ngraph/telemetry/istio/istio.go\n\n```go\n\n// BuildNamespacesTrafficMap is required by the graph/TelemtryVendor interface\nfunc BuildNamespacesTrafficMap(o graph.TelemetryOptions, client *prometheus.Client, globalInfo *graph.AppenderGlobalInfo) graph.TrafficMap {\n\tlog.Tracef(\"Build [%s] graph for [%v] namespaces [%s]\", o.GraphType, len(o.Namespaces), o.Namespaces)\n\n\tsetLabels()\n\tappenders := appender.ParseAppenders(o)\n\ttrafficMap := graph.NewTrafficMap()\n\n\tfor _, namespace := range o.Namespaces {\n\t\tlog.Tracef(\"Build traffic map for namespace [%s]\", namespace)\n\t\t//生成一个 namespaceTrafficMap\n\t\tnamespaceTrafficMap := buildNamespaceTrafficMap(namespace.Name, o, client)\n\t\tnamespaceInfo := graph.NewAppenderNamespaceInfo(namespace.Name)\n\t\tfor _, a := range appenders {\n\t\t\tappenderTimer := internalmetrics.GetGraphAppenderTimePrometheusTimer(a.Name())\n\t\t\ta.AppendGraph(namespaceTrafficMap, globalInfo, namespaceInfo)\n\t\t\tappenderTimer.ObserveDuration()\n\t\t}\n\t\t// 将 namespaceTrafficMap merge ---->  trafficMap 中\n\t\ttelemetry.MergeTrafficMaps(trafficMap, namespace.Name, namespaceTrafficMap)\n\t}\n\n\t// The appenders can add/remove/alter nodes. After the manipulations are complete\n\t// we can make some final adjustments:\n\t// - mark the outsiders (i.e. nodes not in the requested namespaces)\n\t// - mark the insider traffic generators (i.e. inside the namespace and only outgoing edges)\n\ttelemetry.MarkOutsideOrInaccessible(trafficMap, o)\n\ttelemetry.MarkTrafficGenerators(trafficMap)\n\n\tif graph.GraphTypeService == o.GraphType {\n\t\ttrafficMap = telemetry.ReduceToServiceGraph(trafficMap)\n\t}\n\n\treturn trafficMap\n}\n```\n\nAppender 这个interface 主要负责获取和组装流量视图的节点信息和线的信息\n\ngraph/appender.go\n\n```go\n// Appender is implemented by any code offering to append a service graph with\n// supplemental information.  On error the appender should panic and it will be\n// handled as an error response.\ntype Appender interface {\n\t// AppendGraph performs the appender work on the provided traffic map. The map\n\t// may be initially empty. An appender is allowed to add or remove map entries.\n\tAppendGraph(trafficMap TrafficMap, globalInfo *AppenderGlobalInfo, namespaceInfo *AppenderNamespaceInfo)\n\t// Name returns a unique appender name and which is the name used to identify the appender (e.g in 'appenders' query param)\n\tName() string\n}\n\n```\n\n#### appender中有几种实现\n\n* istio: 负责标记具有特殊Istio意义的节点\n* deadNode: 负责从图中删除不需要的节点\n* serviceEntry: ServiceEntryAppender负责标识在Istio中定义为serviceEntry的服务节点。\n单个serviceEntry可以定义多个主机，\n因此多个服务节点可以\n映射到单个serviceEntry的不同主机。我们将这些称为“ se-service”节点\n* responseTime: ResponseTimeAppender负责将responseTime信息添加到图形中\n* securityPolicy: SecurityPolicyAppender负责向图表添加securityPolicy信息。\n尽管以通用方式编写，但该附加程序当前仅报告international_tls安全性。\n* sidecarsCheck: SidecarsCheckAppender标记其后备工作负载缺少至少一个Envoy sidecar的节点。请注意，\n没有后备工作负载的节点未标记。\n* unusedNode: 调用函数成功时，函数处理时间指标的持续时间值。\n如果不成功，则递增失败计数器。\n如果围棋函数不在一个类型上（即是一个全局函数），请为goType传入一个空字符串。\n当该函数返回时，定时器立即开始计时。\n\nappender中的实现必须得有先后顺序, service-entry --> deadNode --> responseTime ---> securityPolicy --->  unusedNode --> istio\n\n经过appender之后将trafficMap merge 到 traffic map中\n\n```go\ntrafficMap := graph.NewTrafficMap()\n\n// 将 namespaceTrafficMap merge ---->  trafficMap 中\n\ntelemetry.MergeTrafficMaps(trafficMap, namespace.Name, namespaceTrafficMap)\n```\n\n","slug":"k8s/kiali","published":1,"updated":"2021-03-09T14:29:31.898Z","_id":"ckm1y9qzq0001jbjr4m4a9f8i","comments":1,"layout":"post","photos":[],"link":"","content":"<p>kiali 源码解析</p>\n<p>前言: </p>\n<p>Kiali是用于基于Istio的服务网格的管理控制台。它提供仪表板，可观察性，并允许您使用强大的配置和验证功能来操作网格。它通过推断流量拓扑来显示服务网格的结构，并显示网格的运行状况。Kiali提供了详细的指标，强大的验证，Grafana访问以及与Jaeger进行分布式跟踪的强大集成。</p>\n<p>以下就是kiali的流量试图 界面</p>\n<p><img src=\"https://kiali.io/images/documentation/features/graph-health-v1.22.0.png\" alt=\"kiali\"></p>\n<p>Kiali是用于基于Istio的服务网格的管理控制台 所以得使用istio来安装kiali插件</p>\n<p>如何istio 来安装kiali</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ istioctl manifest apply --<span class=\"built_in\">set</span> values.kiali.enabled=<span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>kiali 的默认 用户名与密码是 admin/admin</p>\n<h2 id=\"kiali-流量试图\"><a href=\"#kiali-流量试图\" class=\"headerlink\" title=\"kiali 流量试图\"></a>kiali 流量试图</h2><h3 id=\"kiali-route-路由\"><a href=\"#kiali-route-路由\" class=\"headerlink\" title=\"kiali route 路由\"></a>kiali route 路由</h3><p>routing/router</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 根路由 指向 静态页面</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> webRoot != <span class=\"string\">&quot;/&quot;</span> &#123;</span><br><span class=\"line\">\t\trootRouter.HandleFunc(webRoot, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class=\"line\">\t\t\thttp.Redirect(w, r, webRootWithSlash, http.StatusFound)</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// help the user out - if a request comes in for &quot;/&quot;, redirect to our true webroot</span></span><br><span class=\"line\">\t\trootRouter.HandleFunc(<span class=\"string\">&quot;/&quot;</span>, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class=\"line\">\t\t\thttp.Redirect(w, r, webRootWithSlash, http.StatusFound)</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tappRouter = rootRouter.PathPrefix(conf.Server.WebRoot).Subrouter()</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tappRouter = appRouter.StrictSlash(<span class=\"literal\">true</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 路由指向代理的function </span></span><br><span class=\"line\">\tr.Routes = []Route&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// swagger:route GET /healthz kiali healthz</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// ---</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// Endpoint to get the health of Kiali</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//     Produces:</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//     - application/json</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//     Schemes: http, https</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// responses:</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//\t\t500: internalError</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//\t\t200</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;Healthz&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;GET&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;/healthz&quot;</span>,</span><br><span class=\"line\">\t\t\thandlers.Healthz,</span><br><span class=\"line\">\t\t\t<span class=\"literal\">false</span>,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t<span class=\"comment\">// swagger:route GET / kiali root</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// ---</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// Endpoint to get the status of Kiali</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//     Produces:</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//     - application/json</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//     Schemes: http, https</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// responses:</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//      500: internalError</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//      200: statusInfo</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;Root&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;GET&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;/api&quot;</span>,</span><br><span class=\"line\">\t\t\thandlers.Root,</span><br><span class=\"line\">\t\t\t<span class=\"literal\">false</span>,</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>kiali里面最复杂的就是流量视图了 现在我们看看kiali是怎么做的</p>\n<p>/graph/api/api</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">GraphNamespaces</span><span class=\"params\">(business *business.Layer, o graph.Options)</span> <span class=\"params\">(code <span class=\"keyword\">int</span>, config <span class=\"keyword\">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// time how long it takes to generate this graph</span></span><br><span class=\"line\">\tpromtimer := internalmetrics.GetGraphGenerationTimePrometheusTimer(o.GetGraphKind(), o.TelemetryOptions.GraphType, o.InjectServiceNodes)</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> promtimer.ObserveDuration()</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">switch</span> o.TelemetryVendor &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> graph.VendorIstio:</span><br><span class=\"line\">\t\tprom, err := prometheus.NewClientNoAuth(business.PromAddress)</span><br><span class=\"line\">\t\tgraph.CheckError(err)</span><br><span class=\"line\"><span class=\"comment\">//获取config 蓝图信息</span></span><br><span class=\"line\">\t\tcode, config = graphNamespacesIstio(business, prom, o)</span><br><span class=\"line\">\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\tgraph.Error(fmt.Sprintf(<span class=\"string\">&quot;TelemetryVendor [%s] not supported&quot;</span>, o.TelemetryVendor))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// update metrics</span></span><br><span class=\"line\">\tinternalmetrics.SetGraphNodes(o.GetGraphKind(), o.TelemetryOptions.GraphType, o.InjectServiceNodes, <span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> code, config</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>构造 TrafficMap</p>\n<p>graph/telemetry/istio/istio.go</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// BuildNamespacesTrafficMap is required by the graph/TelemtryVendor interface</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">BuildNamespacesTrafficMap</span><span class=\"params\">(o graph.TelemetryOptions, client *prometheus.Client, globalInfo *graph.AppenderGlobalInfo)</span> <span class=\"title\">graph</span>.<span class=\"title\">TrafficMap</span></span> &#123;</span><br><span class=\"line\">\tlog.Tracef(<span class=\"string\">&quot;Build [%s] graph for [%v] namespaces [%s]&quot;</span>, o.GraphType, <span class=\"built_in\">len</span>(o.Namespaces), o.Namespaces)</span><br><span class=\"line\"></span><br><span class=\"line\">\tsetLabels()</span><br><span class=\"line\">\tappenders := appender.ParseAppenders(o)</span><br><span class=\"line\">\ttrafficMap := graph.NewTrafficMap()</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, namespace := <span class=\"keyword\">range</span> o.Namespaces &#123;</span><br><span class=\"line\">\t\tlog.Tracef(<span class=\"string\">&quot;Build traffic map for namespace [%s]&quot;</span>, namespace)</span><br><span class=\"line\">\t\t<span class=\"comment\">//生成一个 namespaceTrafficMap</span></span><br><span class=\"line\">\t\tnamespaceTrafficMap := buildNamespaceTrafficMap(namespace.Name, o, client)</span><br><span class=\"line\">\t\tnamespaceInfo := graph.NewAppenderNamespaceInfo(namespace.Name)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> _, a := <span class=\"keyword\">range</span> appenders &#123;</span><br><span class=\"line\">\t\t\tappenderTimer := internalmetrics.GetGraphAppenderTimePrometheusTimer(a.Name())</span><br><span class=\"line\">\t\t\ta.AppendGraph(namespaceTrafficMap, globalInfo, namespaceInfo)</span><br><span class=\"line\">\t\t\tappenderTimer.ObserveDuration()</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 将 namespaceTrafficMap merge ----&gt;  trafficMap 中</span></span><br><span class=\"line\">\t\ttelemetry.MergeTrafficMaps(trafficMap, namespace.Name, namespaceTrafficMap)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// The appenders can add/remove/alter nodes. After the manipulations are complete</span></span><br><span class=\"line\">\t<span class=\"comment\">// we can make some final adjustments:</span></span><br><span class=\"line\">\t<span class=\"comment\">// - mark the outsiders (i.e. nodes not in the requested namespaces)</span></span><br><span class=\"line\">\t<span class=\"comment\">// - mark the insider traffic generators (i.e. inside the namespace and only outgoing edges)</span></span><br><span class=\"line\">\ttelemetry.MarkOutsideOrInaccessible(trafficMap, o)</span><br><span class=\"line\">\ttelemetry.MarkTrafficGenerators(trafficMap)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> graph.GraphTypeService == o.GraphType &#123;</span><br><span class=\"line\">\t\ttrafficMap = telemetry.ReduceToServiceGraph(trafficMap)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> trafficMap</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Appender 这个interface 主要负责获取和组装流量视图的节点信息和线的信息</p>\n<p>graph/appender.go</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Appender is implemented by any code offering to append a service graph with</span></span><br><span class=\"line\"><span class=\"comment\">// supplemental information.  On error the appender should panic and it will be</span></span><br><span class=\"line\"><span class=\"comment\">// handled as an error response.</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Appender <span class=\"keyword\">interface</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// AppendGraph performs the appender work on the provided traffic map. The map</span></span><br><span class=\"line\">\t<span class=\"comment\">// may be initially empty. An appender is allowed to add or remove map entries.</span></span><br><span class=\"line\">\tAppendGraph(trafficMap TrafficMap, globalInfo *AppenderGlobalInfo, namespaceInfo *AppenderNamespaceInfo)</span><br><span class=\"line\">\t<span class=\"comment\">// Name returns a unique appender name and which is the name used to identify the appender (e.g in &#x27;appenders&#x27; query param)</span></span><br><span class=\"line\">\tName() <span class=\"keyword\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"appender中有几种实现\"><a href=\"#appender中有几种实现\" class=\"headerlink\" title=\"appender中有几种实现\"></a>appender中有几种实现</h4><ul>\n<li>istio: 负责标记具有特殊Istio意义的节点</li>\n<li>deadNode: 负责从图中删除不需要的节点</li>\n<li>serviceEntry: ServiceEntryAppender负责标识在Istio中定义为serviceEntry的服务节点。<br>单个serviceEntry可以定义多个主机，<br>因此多个服务节点可以<br>映射到单个serviceEntry的不同主机。我们将这些称为“ se-service”节点</li>\n<li>responseTime: ResponseTimeAppender负责将responseTime信息添加到图形中</li>\n<li>securityPolicy: SecurityPolicyAppender负责向图表添加securityPolicy信息。<br>尽管以通用方式编写，但该附加程序当前仅报告international_tls安全性。</li>\n<li>sidecarsCheck: SidecarsCheckAppender标记其后备工作负载缺少至少一个Envoy sidecar的节点。请注意，<br>没有后备工作负载的节点未标记。</li>\n<li>unusedNode: 调用函数成功时，函数处理时间指标的持续时间值。<br>如果不成功，则递增失败计数器。<br>如果围棋函数不在一个类型上（即是一个全局函数），请为goType传入一个空字符串。<br>当该函数返回时，定时器立即开始计时。</li>\n</ul>\n<p>appender中的实现必须得有先后顺序, service-entry –&gt; deadNode –&gt; responseTime —&gt; securityPolicy —&gt;  unusedNode –&gt; istio</p>\n<p>经过appender之后将trafficMap merge 到 traffic map中</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trafficMap := graph.NewTrafficMap()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 将 namespaceTrafficMap merge ----&gt;  trafficMap 中</span></span><br><span class=\"line\"></span><br><span class=\"line\">telemetry.MergeTrafficMaps(trafficMap, namespace.Name, namespaceTrafficMap)</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>kiali 源码解析</p>\n<p>前言: </p>\n<p>Kiali是用于基于Istio的服务网格的管理控制台。它提供仪表板，可观察性，并允许您使用强大的配置和验证功能来操作网格。它通过推断流量拓扑来显示服务网格的结构，并显示网格的运行状况。Kiali提供了详细的指标，强大的验证，Grafana访问以及与Jaeger进行分布式跟踪的强大集成。</p>\n<p>以下就是kiali的流量试图 界面</p>\n<p><img src=\"https://kiali.io/images/documentation/features/graph-health-v1.22.0.png\" alt=\"kiali\"></p>\n<p>Kiali是用于基于Istio的服务网格的管理控制台 所以得使用istio来安装kiali插件</p>\n<p>如何istio 来安装kiali</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ istioctl manifest apply --<span class=\"built_in\">set</span> values.kiali.enabled=<span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>kiali 的默认 用户名与密码是 admin/admin</p>\n<h2 id=\"kiali-流量试图\"><a href=\"#kiali-流量试图\" class=\"headerlink\" title=\"kiali 流量试图\"></a>kiali 流量试图</h2><h3 id=\"kiali-route-路由\"><a href=\"#kiali-route-路由\" class=\"headerlink\" title=\"kiali route 路由\"></a>kiali route 路由</h3><p>routing/router</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 根路由 指向 静态页面</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> webRoot != <span class=\"string\">&quot;/&quot;</span> &#123;</span><br><span class=\"line\">\t\trootRouter.HandleFunc(webRoot, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class=\"line\">\t\t\thttp.Redirect(w, r, webRootWithSlash, http.StatusFound)</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// help the user out - if a request comes in for &quot;/&quot;, redirect to our true webroot</span></span><br><span class=\"line\">\t\trootRouter.HandleFunc(<span class=\"string\">&quot;/&quot;</span>, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class=\"line\">\t\t\thttp.Redirect(w, r, webRootWithSlash, http.StatusFound)</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tappRouter = rootRouter.PathPrefix(conf.Server.WebRoot).Subrouter()</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tappRouter = appRouter.StrictSlash(<span class=\"literal\">true</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 路由指向代理的function </span></span><br><span class=\"line\">\tr.Routes = []Route&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// swagger:route GET /healthz kiali healthz</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// ---</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// Endpoint to get the health of Kiali</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//     Produces:</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//     - application/json</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//     Schemes: http, https</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// responses:</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//\t\t500: internalError</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//\t\t200</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;Healthz&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;GET&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;/healthz&quot;</span>,</span><br><span class=\"line\">\t\t\thandlers.Healthz,</span><br><span class=\"line\">\t\t\t<span class=\"literal\">false</span>,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t<span class=\"comment\">// swagger:route GET / kiali root</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// ---</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// Endpoint to get the status of Kiali</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//     Produces:</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//     - application/json</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//     Schemes: http, https</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// responses:</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//      500: internalError</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//      200: statusInfo</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;Root&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;GET&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;/api&quot;</span>,</span><br><span class=\"line\">\t\t\thandlers.Root,</span><br><span class=\"line\">\t\t\t<span class=\"literal\">false</span>,</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>kiali里面最复杂的就是流量视图了 现在我们看看kiali是怎么做的</p>\n<p>/graph/api/api</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">GraphNamespaces</span><span class=\"params\">(business *business.Layer, o graph.Options)</span> <span class=\"params\">(code <span class=\"keyword\">int</span>, config <span class=\"keyword\">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// time how long it takes to generate this graph</span></span><br><span class=\"line\">\tpromtimer := internalmetrics.GetGraphGenerationTimePrometheusTimer(o.GetGraphKind(), o.TelemetryOptions.GraphType, o.InjectServiceNodes)</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> promtimer.ObserveDuration()</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">switch</span> o.TelemetryVendor &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> graph.VendorIstio:</span><br><span class=\"line\">\t\tprom, err := prometheus.NewClientNoAuth(business.PromAddress)</span><br><span class=\"line\">\t\tgraph.CheckError(err)</span><br><span class=\"line\"><span class=\"comment\">//获取config 蓝图信息</span></span><br><span class=\"line\">\t\tcode, config = graphNamespacesIstio(business, prom, o)</span><br><span class=\"line\">\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\tgraph.Error(fmt.Sprintf(<span class=\"string\">&quot;TelemetryVendor [%s] not supported&quot;</span>, o.TelemetryVendor))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// update metrics</span></span><br><span class=\"line\">\tinternalmetrics.SetGraphNodes(o.GetGraphKind(), o.TelemetryOptions.GraphType, o.InjectServiceNodes, <span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> code, config</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>构造 TrafficMap</p>\n<p>graph/telemetry/istio/istio.go</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// BuildNamespacesTrafficMap is required by the graph/TelemtryVendor interface</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">BuildNamespacesTrafficMap</span><span class=\"params\">(o graph.TelemetryOptions, client *prometheus.Client, globalInfo *graph.AppenderGlobalInfo)</span> <span class=\"title\">graph</span>.<span class=\"title\">TrafficMap</span></span> &#123;</span><br><span class=\"line\">\tlog.Tracef(<span class=\"string\">&quot;Build [%s] graph for [%v] namespaces [%s]&quot;</span>, o.GraphType, <span class=\"built_in\">len</span>(o.Namespaces), o.Namespaces)</span><br><span class=\"line\"></span><br><span class=\"line\">\tsetLabels()</span><br><span class=\"line\">\tappenders := appender.ParseAppenders(o)</span><br><span class=\"line\">\ttrafficMap := graph.NewTrafficMap()</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, namespace := <span class=\"keyword\">range</span> o.Namespaces &#123;</span><br><span class=\"line\">\t\tlog.Tracef(<span class=\"string\">&quot;Build traffic map for namespace [%s]&quot;</span>, namespace)</span><br><span class=\"line\">\t\t<span class=\"comment\">//生成一个 namespaceTrafficMap</span></span><br><span class=\"line\">\t\tnamespaceTrafficMap := buildNamespaceTrafficMap(namespace.Name, o, client)</span><br><span class=\"line\">\t\tnamespaceInfo := graph.NewAppenderNamespaceInfo(namespace.Name)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> _, a := <span class=\"keyword\">range</span> appenders &#123;</span><br><span class=\"line\">\t\t\tappenderTimer := internalmetrics.GetGraphAppenderTimePrometheusTimer(a.Name())</span><br><span class=\"line\">\t\t\ta.AppendGraph(namespaceTrafficMap, globalInfo, namespaceInfo)</span><br><span class=\"line\">\t\t\tappenderTimer.ObserveDuration()</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 将 namespaceTrafficMap merge ----&gt;  trafficMap 中</span></span><br><span class=\"line\">\t\ttelemetry.MergeTrafficMaps(trafficMap, namespace.Name, namespaceTrafficMap)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// The appenders can add/remove/alter nodes. After the manipulations are complete</span></span><br><span class=\"line\">\t<span class=\"comment\">// we can make some final adjustments:</span></span><br><span class=\"line\">\t<span class=\"comment\">// - mark the outsiders (i.e. nodes not in the requested namespaces)</span></span><br><span class=\"line\">\t<span class=\"comment\">// - mark the insider traffic generators (i.e. inside the namespace and only outgoing edges)</span></span><br><span class=\"line\">\ttelemetry.MarkOutsideOrInaccessible(trafficMap, o)</span><br><span class=\"line\">\ttelemetry.MarkTrafficGenerators(trafficMap)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> graph.GraphTypeService == o.GraphType &#123;</span><br><span class=\"line\">\t\ttrafficMap = telemetry.ReduceToServiceGraph(trafficMap)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> trafficMap</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Appender 这个interface 主要负责获取和组装流量视图的节点信息和线的信息</p>\n<p>graph/appender.go</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Appender is implemented by any code offering to append a service graph with</span></span><br><span class=\"line\"><span class=\"comment\">// supplemental information.  On error the appender should panic and it will be</span></span><br><span class=\"line\"><span class=\"comment\">// handled as an error response.</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Appender <span class=\"keyword\">interface</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// AppendGraph performs the appender work on the provided traffic map. The map</span></span><br><span class=\"line\">\t<span class=\"comment\">// may be initially empty. An appender is allowed to add or remove map entries.</span></span><br><span class=\"line\">\tAppendGraph(trafficMap TrafficMap, globalInfo *AppenderGlobalInfo, namespaceInfo *AppenderNamespaceInfo)</span><br><span class=\"line\">\t<span class=\"comment\">// Name returns a unique appender name and which is the name used to identify the appender (e.g in &#x27;appenders&#x27; query param)</span></span><br><span class=\"line\">\tName() <span class=\"keyword\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"appender中有几种实现\"><a href=\"#appender中有几种实现\" class=\"headerlink\" title=\"appender中有几种实现\"></a>appender中有几种实现</h4><ul>\n<li>istio: 负责标记具有特殊Istio意义的节点</li>\n<li>deadNode: 负责从图中删除不需要的节点</li>\n<li>serviceEntry: ServiceEntryAppender负责标识在Istio中定义为serviceEntry的服务节点。<br>单个serviceEntry可以定义多个主机，<br>因此多个服务节点可以<br>映射到单个serviceEntry的不同主机。我们将这些称为“ se-service”节点</li>\n<li>responseTime: ResponseTimeAppender负责将responseTime信息添加到图形中</li>\n<li>securityPolicy: SecurityPolicyAppender负责向图表添加securityPolicy信息。<br>尽管以通用方式编写，但该附加程序当前仅报告international_tls安全性。</li>\n<li>sidecarsCheck: SidecarsCheckAppender标记其后备工作负载缺少至少一个Envoy sidecar的节点。请注意，<br>没有后备工作负载的节点未标记。</li>\n<li>unusedNode: 调用函数成功时，函数处理时间指标的持续时间值。<br>如果不成功，则递增失败计数器。<br>如果围棋函数不在一个类型上（即是一个全局函数），请为goType传入一个空字符串。<br>当该函数返回时，定时器立即开始计时。</li>\n</ul>\n<p>appender中的实现必须得有先后顺序, service-entry –&gt; deadNode –&gt; responseTime —&gt; securityPolicy —&gt;  unusedNode –&gt; istio</p>\n<p>经过appender之后将trafficMap merge 到 traffic map中</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trafficMap := graph.NewTrafficMap()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 将 namespaceTrafficMap merge ----&gt;  trafficMap 中</span></span><br><span class=\"line\"></span><br><span class=\"line\">telemetry.MergeTrafficMaps(trafficMap, namespace.Name, namespaceTrafficMap)</span><br></pre></td></tr></table></figure>\n\n"},{"title":"GRPC的使用","date":"2018-02-19T16:00:00.000Z","_content":"\n## 简介\n\ngrpc 由 google 开发,是一款语言中立、平台中立、开源的远程过程调用(RPC)系统。它是一个高性能、开源和通用的RPC框架，面向移动和HTTP/2设计。\n目前提供C、Java和Go语言版本，分别是grpc、grpc-java、grpc-go。\ngRPC基于HTTP/2标准设计，带来诸如双向流、流控、头部压缩、单TCP连接上的多复用请求等特性。\n\n![grpc-img](https://img-blog.csdn.net/20171019113619182?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHVkdW9ydWk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n## grpc的使用\n\n本章主要结合`java`中 的SpringBoot 集成 grpc而展开。\n\n### 数据结构对应表\n\n|.proto类型|Java 类型|C++类型|备注|\n|---|---|---|---|---|\n|double|double|double||\n|float|float|float||\n|int32|int|int32|使用可变长编码方式。编码负数时不够高效——如果你的字段可能含有负数，那么请使用sint32。|\n|int64|long|int64|使用可变长编码方式。编码负数时不够高效——如果你的字段可能含有负数，那么请使用sint64。|\n|uint32|int[1]|uint32|Uses variable-length encoding.|\n|uint64|long[1]|uint64|Uses variable-length encoding.|\n|sint32|int|int32|使用可变长编码方式。有符号的整型值。编码时比通常的int32高效。|\n|sint64|long|int64|使用可变长编码方式。有符号的整型值。编码时比通常的int64高效。|\n|fixed32|int[1]|uint32|总是4个字节。如果数值总是比总是比228大的话，这个类型会比uint32高效。|\n|fixed64|long[1]|uint64|总是8个字节。如果数值总是比总是比256大的话，这个类型会比uint64高效。|\n|sfixed32|int|int32|总是4个字节。|\n|sfixed64|long|int64|总是8个字节。|\n|bool|boolean|bool||\n|string|String|string|一个字符串必须是UTF-8编码或者7-bit ASCII编码的文本。|\n|bytes|ByteString|string|可能包含任意顺序的字节数据。|\n\n### 新建项目\n\n首先通过`ideal`创建一个`springboot`的项目。\n\n![New-Project](img/NewProject.png)\n\n填写 `包名` `组名`等基本信息。\n\n![project-metadata](img/ProjectMetadata.png)\n\n### 项目的编写\n\n创建好项目后 修改 pom.xml\n\n```xml\n<!-- 父包名称 -->\n    <parent>\n        <groupId>cn.com.siss</groupId>\n        <artifactId>spring-boot-starters</artifactId>\n        <version>0.0.1-SNAPSHOT</version>\n        <relativePath/> <!-- lookup parent from repository -->\n    </parent>\n\n    <groupId>cn.com.siss</groupId>\n    <artifactId>demo-grpc</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>demo-grpc</name>\n\n     <!-- packaging 为 pom -->\n    <packaging>pom</packaging>\n\n    <!-- 子模块 -->\n    <modules>\n        <module>demo-api</module>\n        <module>demo-provider</module>\n        <module>demo-web</module>\n    </modules>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>cn.com.siss</groupId>\n            <artifactId>spring-boot-starter-grpc</artifactId>\n            <version>0.0.1-SNAPSHOT</version>\n        </dependency>\n        <dependency>\n            <groupId>cn.com.siss.utils</groupId>\n            <artifactId>siss-utils</artifactId>\n            <version>0.0.1-SNAPSHOT</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n```\n\n添加子模块\n\n`demo-api` 该模块主要存放`实体类` `proto文件`\n\n![demo-api](img/demo-api.png)\n\n修改 `demo-api` 的 pom.xml\n\n```xml\n<!-- 修改parent -->\n    <parent>\n        <groupId>cn.com.siss</groupId>\n        <artifactId>demo-grpc</artifactId>\n        <version>0.0.1-SNAPSHOT</version>\n    </parent>\n<!-- 添加依赖 -->\n        <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n<!-- 添加插件 -->\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <configuration>\n                    <classifier>exec</classifier>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.xolstice.maven.plugins</groupId>\n                <artifactId>protobuf-maven-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.sonarsource.scanner.maven</groupId>\n                <artifactId>sonar-maven-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n```\n\n`demo-web` 对外提供接口\n\n对外api\n\n```java\n@RestController\npublic class HelloWorld {\n\n    @Autowired\n    private HelloRpcService helloRpcService;\n\n    @RequestMapping(value = \"/\", method = RequestMethod.GET)\n    public String get(){\n        System.out.println(\"controller get method\");\n        String b = helloRpcService.get(\"qq\");\n        return b;\n    }\n}\n```\n\nrpc层对java对象转化为proto流文件\n\n```java\n@Service\n@Slf4j\n@AllArgsConstructor\npublic class HelloRpcService {\n    private HelloServiceGrpc.HelloServiceBlockingStub blockingStub;\n\n    public String get(String name) {\n        Hello hello = new Hello();\n        hello.setName(name);\n        HelloProto.HelloDTO dto = (HelloProto.HelloDTO) toGRpcMessage(hello, HelloProto.HelloDTO.newBuilder());\n        HelloProto.HelloDTO rep = blockingStub.get(dto);\n        String say = (String) fromGRpcMessage(rep, String.class);\n        return say;\n    }\n}\n```\n\n定义`protobuf`\n\n```protobuf\nsyntax = \"proto3\";\n\noption java_package = \"cn.com.siss.api\";\noption java_outer_classname = \"HelloProto\";\n\nmessage HelloDTO {\n    string name = 1;\n}\n\nservice HelloService {\n    rpc get (HelloDTO) returns (HelloDTO) {}\n}\n```\n\n添加`config`文件注册\n\n```java\n@Configuration\n@EnableAutoConfiguration\npublic class HelloConfig {\n\n    @GRpcClient(\"demo-provider\")\n    private ManagedChannel channel;\n\n    @Bean\n    public HelloServiceGrpc.HelloServiceBlockingStub helloServiceBlockingStub(){\n        return HelloServiceGrpc.newBlockingStub(channel);\n    }\n}\n```\n\n修改application.yml\n\n```yaml\ngrpc:\n  client:\n    demo-provider:\n      server-host: localhost\n      server-port: 7575\n      enable-keep-alive: true\n      keep-alive-delay: 60 # seconds\n      keep-alive-timeOut: 60\n```\n\n`demo-provider` 对数据做持久化\n\n修改pom文件\n\n```xml\n\n    <parent>\n        <groupId>cn.com.siss</groupId>\n        <artifactId>demo-grpc</artifactId>\n        <version>0.0.1-SNAPSHOT</version>\n    </parent>\n    <!-- 添加依赖 -->\n        <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>cn.com.siss</groupId>\n            <artifactId>demo-api</artifactId>\n            <version>0.0.1-SNAPSHOT</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n\n```\n\nrpc层\n\n```java\n@Slf4j\n@GRpcService\npublic class HelloRpc extends HelloServiceGrpc.HelloServiceImplBase {\n\n    @Override\n    public void get(HelloProto.HelloDTO request,\n                    StreamObserver<HelloProto.HelloDTO> responseObserver) {\n        HelloProto.HelloDTO response = (HelloProto.HelloDTO) toGRpcMessage(request, HelloProto.HelloDTO.newBuilder());\n        responseObserver.onNext(response);\n        responseObserver.onCompleted();\n    }\n\n}\n```\n\n可以尝试下载demo debug一下\n\n```bash\ngit clone ssh://git@gitlab.sissyun.com.cn:8022/demo/demo-grpc.git\n```","source":"_posts/doc-dev/basics/grpc.md","raw":"---\ntitle:  GRPC的使用\ndate: 2018-02-20\n\n---\n\n## 简介\n\ngrpc 由 google 开发,是一款语言中立、平台中立、开源的远程过程调用(RPC)系统。它是一个高性能、开源和通用的RPC框架，面向移动和HTTP/2设计。\n目前提供C、Java和Go语言版本，分别是grpc、grpc-java、grpc-go。\ngRPC基于HTTP/2标准设计，带来诸如双向流、流控、头部压缩、单TCP连接上的多复用请求等特性。\n\n![grpc-img](https://img-blog.csdn.net/20171019113619182?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHVkdW9ydWk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n## grpc的使用\n\n本章主要结合`java`中 的SpringBoot 集成 grpc而展开。\n\n### 数据结构对应表\n\n|.proto类型|Java 类型|C++类型|备注|\n|---|---|---|---|---|\n|double|double|double||\n|float|float|float||\n|int32|int|int32|使用可变长编码方式。编码负数时不够高效——如果你的字段可能含有负数，那么请使用sint32。|\n|int64|long|int64|使用可变长编码方式。编码负数时不够高效——如果你的字段可能含有负数，那么请使用sint64。|\n|uint32|int[1]|uint32|Uses variable-length encoding.|\n|uint64|long[1]|uint64|Uses variable-length encoding.|\n|sint32|int|int32|使用可变长编码方式。有符号的整型值。编码时比通常的int32高效。|\n|sint64|long|int64|使用可变长编码方式。有符号的整型值。编码时比通常的int64高效。|\n|fixed32|int[1]|uint32|总是4个字节。如果数值总是比总是比228大的话，这个类型会比uint32高效。|\n|fixed64|long[1]|uint64|总是8个字节。如果数值总是比总是比256大的话，这个类型会比uint64高效。|\n|sfixed32|int|int32|总是4个字节。|\n|sfixed64|long|int64|总是8个字节。|\n|bool|boolean|bool||\n|string|String|string|一个字符串必须是UTF-8编码或者7-bit ASCII编码的文本。|\n|bytes|ByteString|string|可能包含任意顺序的字节数据。|\n\n### 新建项目\n\n首先通过`ideal`创建一个`springboot`的项目。\n\n![New-Project](img/NewProject.png)\n\n填写 `包名` `组名`等基本信息。\n\n![project-metadata](img/ProjectMetadata.png)\n\n### 项目的编写\n\n创建好项目后 修改 pom.xml\n\n```xml\n<!-- 父包名称 -->\n    <parent>\n        <groupId>cn.com.siss</groupId>\n        <artifactId>spring-boot-starters</artifactId>\n        <version>0.0.1-SNAPSHOT</version>\n        <relativePath/> <!-- lookup parent from repository -->\n    </parent>\n\n    <groupId>cn.com.siss</groupId>\n    <artifactId>demo-grpc</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>demo-grpc</name>\n\n     <!-- packaging 为 pom -->\n    <packaging>pom</packaging>\n\n    <!-- 子模块 -->\n    <modules>\n        <module>demo-api</module>\n        <module>demo-provider</module>\n        <module>demo-web</module>\n    </modules>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>cn.com.siss</groupId>\n            <artifactId>spring-boot-starter-grpc</artifactId>\n            <version>0.0.1-SNAPSHOT</version>\n        </dependency>\n        <dependency>\n            <groupId>cn.com.siss.utils</groupId>\n            <artifactId>siss-utils</artifactId>\n            <version>0.0.1-SNAPSHOT</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n```\n\n添加子模块\n\n`demo-api` 该模块主要存放`实体类` `proto文件`\n\n![demo-api](img/demo-api.png)\n\n修改 `demo-api` 的 pom.xml\n\n```xml\n<!-- 修改parent -->\n    <parent>\n        <groupId>cn.com.siss</groupId>\n        <artifactId>demo-grpc</artifactId>\n        <version>0.0.1-SNAPSHOT</version>\n    </parent>\n<!-- 添加依赖 -->\n        <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n<!-- 添加插件 -->\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <configuration>\n                    <classifier>exec</classifier>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.xolstice.maven.plugins</groupId>\n                <artifactId>protobuf-maven-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.sonarsource.scanner.maven</groupId>\n                <artifactId>sonar-maven-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n```\n\n`demo-web` 对外提供接口\n\n对外api\n\n```java\n@RestController\npublic class HelloWorld {\n\n    @Autowired\n    private HelloRpcService helloRpcService;\n\n    @RequestMapping(value = \"/\", method = RequestMethod.GET)\n    public String get(){\n        System.out.println(\"controller get method\");\n        String b = helloRpcService.get(\"qq\");\n        return b;\n    }\n}\n```\n\nrpc层对java对象转化为proto流文件\n\n```java\n@Service\n@Slf4j\n@AllArgsConstructor\npublic class HelloRpcService {\n    private HelloServiceGrpc.HelloServiceBlockingStub blockingStub;\n\n    public String get(String name) {\n        Hello hello = new Hello();\n        hello.setName(name);\n        HelloProto.HelloDTO dto = (HelloProto.HelloDTO) toGRpcMessage(hello, HelloProto.HelloDTO.newBuilder());\n        HelloProto.HelloDTO rep = blockingStub.get(dto);\n        String say = (String) fromGRpcMessage(rep, String.class);\n        return say;\n    }\n}\n```\n\n定义`protobuf`\n\n```protobuf\nsyntax = \"proto3\";\n\noption java_package = \"cn.com.siss.api\";\noption java_outer_classname = \"HelloProto\";\n\nmessage HelloDTO {\n    string name = 1;\n}\n\nservice HelloService {\n    rpc get (HelloDTO) returns (HelloDTO) {}\n}\n```\n\n添加`config`文件注册\n\n```java\n@Configuration\n@EnableAutoConfiguration\npublic class HelloConfig {\n\n    @GRpcClient(\"demo-provider\")\n    private ManagedChannel channel;\n\n    @Bean\n    public HelloServiceGrpc.HelloServiceBlockingStub helloServiceBlockingStub(){\n        return HelloServiceGrpc.newBlockingStub(channel);\n    }\n}\n```\n\n修改application.yml\n\n```yaml\ngrpc:\n  client:\n    demo-provider:\n      server-host: localhost\n      server-port: 7575\n      enable-keep-alive: true\n      keep-alive-delay: 60 # seconds\n      keep-alive-timeOut: 60\n```\n\n`demo-provider` 对数据做持久化\n\n修改pom文件\n\n```xml\n\n    <parent>\n        <groupId>cn.com.siss</groupId>\n        <artifactId>demo-grpc</artifactId>\n        <version>0.0.1-SNAPSHOT</version>\n    </parent>\n    <!-- 添加依赖 -->\n        <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>cn.com.siss</groupId>\n            <artifactId>demo-api</artifactId>\n            <version>0.0.1-SNAPSHOT</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n\n```\n\nrpc层\n\n```java\n@Slf4j\n@GRpcService\npublic class HelloRpc extends HelloServiceGrpc.HelloServiceImplBase {\n\n    @Override\n    public void get(HelloProto.HelloDTO request,\n                    StreamObserver<HelloProto.HelloDTO> responseObserver) {\n        HelloProto.HelloDTO response = (HelloProto.HelloDTO) toGRpcMessage(request, HelloProto.HelloDTO.newBuilder());\n        responseObserver.onNext(response);\n        responseObserver.onCompleted();\n    }\n\n}\n```\n\n可以尝试下载demo debug一下\n\n```bash\ngit clone ssh://git@gitlab.sissyun.com.cn:8022/demo/demo-grpc.git\n```","slug":"doc-dev/basics/grpc","published":1,"updated":"2021-03-09T14:24:06.656Z","_id":"ckm237zw200001mjrauj3d8h6","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>grpc 由 google 开发,是一款语言中立、平台中立、开源的远程过程调用(RPC)系统。它是一个高性能、开源和通用的RPC框架，面向移动和HTTP/2设计。<br>目前提供C、Java和Go语言版本，分别是grpc、grpc-java、grpc-go。<br>gRPC基于HTTP/2标准设计，带来诸如双向流、流控、头部压缩、单TCP连接上的多复用请求等特性。</p>\n<p><img src=\"https://img-blog.csdn.net/20171019113619182?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHVkdW9ydWk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"grpc-img\"></p>\n<h2 id=\"grpc的使用\"><a href=\"#grpc的使用\" class=\"headerlink\" title=\"grpc的使用\"></a>grpc的使用</h2><p>本章主要结合<code>java</code>中 的SpringBoot 集成 grpc而展开。</p>\n<h3 id=\"数据结构对应表\"><a href=\"#数据结构对应表\" class=\"headerlink\" title=\"数据结构对应表\"></a>数据结构对应表</h3><p>|.proto类型|Java 类型|C++类型|备注|<br>|—|—|—|—|—|<br>|double|double|double||<br>|float|float|float||<br>|int32|int|int32|使用可变长编码方式。编码负数时不够高效——如果你的字段可能含有负数，那么请使用sint32。|<br>|int64|long|int64|使用可变长编码方式。编码负数时不够高效——如果你的字段可能含有负数，那么请使用sint64。|<br>|uint32|int[1]|uint32|Uses variable-length encoding.|<br>|uint64|long[1]|uint64|Uses variable-length encoding.|<br>|sint32|int|int32|使用可变长编码方式。有符号的整型值。编码时比通常的int32高效。|<br>|sint64|long|int64|使用可变长编码方式。有符号的整型值。编码时比通常的int64高效。|<br>|fixed32|int[1]|uint32|总是4个字节。如果数值总是比总是比228大的话，这个类型会比uint32高效。|<br>|fixed64|long[1]|uint64|总是8个字节。如果数值总是比总是比256大的话，这个类型会比uint64高效。|<br>|sfixed32|int|int32|总是4个字节。|<br>|sfixed64|long|int64|总是8个字节。|<br>|bool|boolean|bool||<br>|string|String|string|一个字符串必须是UTF-8编码或者7-bit ASCII编码的文本。|<br>|bytes|ByteString|string|可能包含任意顺序的字节数据。|</p>\n<h3 id=\"新建项目\"><a href=\"#新建项目\" class=\"headerlink\" title=\"新建项目\"></a>新建项目</h3><p>首先通过<code>ideal</code>创建一个<code>springboot</code>的项目。</p>\n<p><img src=\"img/NewProject.png\" alt=\"New-Project\"></p>\n<p>填写 <code>包名</code> <code>组名</code>等基本信息。</p>\n<p><img src=\"img/ProjectMetadata.png\" alt=\"project-metadata\"></p>\n<h3 id=\"项目的编写\"><a href=\"#项目的编写\" class=\"headerlink\" title=\"项目的编写\"></a>项目的编写</h3><p>创建好项目后 修改 pom.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 父包名称 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.com.siss<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starters<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">relativePath</span>/&gt;</span> <span class=\"comment\">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.com.siss<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>demo-grpc<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>demo-grpc<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"comment\">&lt;!-- packaging 为 pom --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>pom<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 子模块 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modules</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">module</span>&gt;</span>demo-api<span class=\"tag\">&lt;/<span class=\"name\">module</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">module</span>&gt;</span>demo-provider<span class=\"tag\">&lt;/<span class=\"name\">module</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">module</span>&gt;</span>demo-web<span class=\"tag\">&lt;/<span class=\"name\">module</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">modules</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.com.siss<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-grpc<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.com.siss.utils<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>siss-utils<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>添加子模块</p>\n<p><code>demo-api</code> 该模块主要存放<code>实体类</code> <code>proto文件</code></p>\n<p><img src=\"img/demo-api.png\" alt=\"demo-api\"></p>\n<p>修改 <code>demo-api</code> 的 pom.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 修改parent --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.com.siss<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>demo-grpc<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 添加依赖 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 添加插件 --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">classifier</span>&gt;</span>exec<span class=\"tag\">&lt;/<span class=\"name\">classifier</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.xolstice.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>protobuf-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.sonarsource.scanner.maven<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>sonar-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.jacoco<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jacoco-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>demo-web</code> 对外提供接口</p>\n<p>对外api</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloWorld</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> HelloRpcService helloRpcService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(value = &quot;/&quot;, method = RequestMethod.GET)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">get</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;controller get method&quot;</span>);</span><br><span class=\"line\">        String b = helloRpcService.get(<span class=\"string\">&quot;qq&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>rpc层对java对象转化为proto流文件</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloRpcService</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> HelloServiceGrpc.HelloServiceBlockingStub blockingStub;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">get</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        Hello hello = <span class=\"keyword\">new</span> Hello();</span><br><span class=\"line\">        hello.setName(name);</span><br><span class=\"line\">        HelloProto.HelloDTO dto = (HelloProto.HelloDTO) toGRpcMessage(hello, HelloProto.HelloDTO.newBuilder());</span><br><span class=\"line\">        HelloProto.HelloDTO rep = blockingStub.get(dto);</span><br><span class=\"line\">        String say = (String) fromGRpcMessage(rep, String.class);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> say;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>定义<code>protobuf</code></p>\n<figure class=\"highlight protobuf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">syntax = <span class=\"string\">&quot;proto3&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">option</span> java_package = <span class=\"string\">&quot;cn.com.siss.api&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">option</span> java_outer_classname = <span class=\"string\">&quot;HelloProto&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">message</span> <span class=\"title\">HelloDTO</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> name = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">service</span> <span class=\"title\">HelloService</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">rpc</span> get (HelloDTO) <span class=\"keyword\">returns</span> (HelloDTO) </span>&#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>添加<code>config</code>文件注册</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableAutoConfiguration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloConfig</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GRpcClient(&quot;demo-provider&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ManagedChannel channel;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> HelloServiceGrpc.<span class=\"function\">HelloServiceBlockingStub <span class=\"title\">helloServiceBlockingStub</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> HelloServiceGrpc.newBlockingStub(channel);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>修改application.yml</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">grpc:</span></span><br><span class=\"line\">  <span class=\"attr\">client:</span></span><br><span class=\"line\">    <span class=\"attr\">demo-provider:</span></span><br><span class=\"line\">      <span class=\"attr\">server-host:</span> <span class=\"string\">localhost</span></span><br><span class=\"line\">      <span class=\"attr\">server-port:</span> <span class=\"number\">7575</span></span><br><span class=\"line\">      <span class=\"attr\">enable-keep-alive:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">      <span class=\"attr\">keep-alive-delay:</span> <span class=\"number\">60</span> <span class=\"comment\"># seconds</span></span><br><span class=\"line\">      <span class=\"attr\">keep-alive-timeOut:</span> <span class=\"number\">60</span></span><br></pre></td></tr></table></figure>\n\n<p><code>demo-provider</code> 对数据做持久化</p>\n<p>修改pom文件</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.com.siss<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>demo-grpc<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 添加依赖 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.com.siss<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>demo-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>rpc层</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@GRpcService</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloRpc</span> <span class=\"keyword\">extends</span> <span class=\"title\">HelloServiceGrpc</span>.<span class=\"title\">HelloServiceImplBase</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">get</span><span class=\"params\">(HelloProto.HelloDTO request,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                    StreamObserver&lt;HelloProto.HelloDTO&gt; responseObserver)</span> </span>&#123;</span><br><span class=\"line\">        HelloProto.HelloDTO response = (HelloProto.HelloDTO) toGRpcMessage(request, HelloProto.HelloDTO.newBuilder());</span><br><span class=\"line\">        responseObserver.onNext(response);</span><br><span class=\"line\">        responseObserver.onCompleted();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以尝试下载demo debug一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> ssh://git@gitlab.sissyun.com.cn:8022/demo/demo-grpc.git</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>grpc 由 google 开发,是一款语言中立、平台中立、开源的远程过程调用(RPC)系统。它是一个高性能、开源和通用的RPC框架，面向移动和HTTP/2设计。<br>目前提供C、Java和Go语言版本，分别是grpc、grpc-java、grpc-go。<br>gRPC基于HTTP/2标准设计，带来诸如双向流、流控、头部压缩、单TCP连接上的多复用请求等特性。</p>\n<p><img src=\"https://img-blog.csdn.net/20171019113619182?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHVkdW9ydWk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"grpc-img\"></p>\n<h2 id=\"grpc的使用\"><a href=\"#grpc的使用\" class=\"headerlink\" title=\"grpc的使用\"></a>grpc的使用</h2><p>本章主要结合<code>java</code>中 的SpringBoot 集成 grpc而展开。</p>\n<h3 id=\"数据结构对应表\"><a href=\"#数据结构对应表\" class=\"headerlink\" title=\"数据结构对应表\"></a>数据结构对应表</h3><p>|.proto类型|Java 类型|C++类型|备注|<br>|—|—|—|—|—|<br>|double|double|double||<br>|float|float|float||<br>|int32|int|int32|使用可变长编码方式。编码负数时不够高效——如果你的字段可能含有负数，那么请使用sint32。|<br>|int64|long|int64|使用可变长编码方式。编码负数时不够高效——如果你的字段可能含有负数，那么请使用sint64。|<br>|uint32|int[1]|uint32|Uses variable-length encoding.|<br>|uint64|long[1]|uint64|Uses variable-length encoding.|<br>|sint32|int|int32|使用可变长编码方式。有符号的整型值。编码时比通常的int32高效。|<br>|sint64|long|int64|使用可变长编码方式。有符号的整型值。编码时比通常的int64高效。|<br>|fixed32|int[1]|uint32|总是4个字节。如果数值总是比总是比228大的话，这个类型会比uint32高效。|<br>|fixed64|long[1]|uint64|总是8个字节。如果数值总是比总是比256大的话，这个类型会比uint64高效。|<br>|sfixed32|int|int32|总是4个字节。|<br>|sfixed64|long|int64|总是8个字节。|<br>|bool|boolean|bool||<br>|string|String|string|一个字符串必须是UTF-8编码或者7-bit ASCII编码的文本。|<br>|bytes|ByteString|string|可能包含任意顺序的字节数据。|</p>\n<h3 id=\"新建项目\"><a href=\"#新建项目\" class=\"headerlink\" title=\"新建项目\"></a>新建项目</h3><p>首先通过<code>ideal</code>创建一个<code>springboot</code>的项目。</p>\n<p><img src=\"img/NewProject.png\" alt=\"New-Project\"></p>\n<p>填写 <code>包名</code> <code>组名</code>等基本信息。</p>\n<p><img src=\"img/ProjectMetadata.png\" alt=\"project-metadata\"></p>\n<h3 id=\"项目的编写\"><a href=\"#项目的编写\" class=\"headerlink\" title=\"项目的编写\"></a>项目的编写</h3><p>创建好项目后 修改 pom.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 父包名称 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.com.siss<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starters<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">relativePath</span>/&gt;</span> <span class=\"comment\">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.com.siss<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>demo-grpc<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>demo-grpc<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"comment\">&lt;!-- packaging 为 pom --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>pom<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 子模块 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modules</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">module</span>&gt;</span>demo-api<span class=\"tag\">&lt;/<span class=\"name\">module</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">module</span>&gt;</span>demo-provider<span class=\"tag\">&lt;/<span class=\"name\">module</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">module</span>&gt;</span>demo-web<span class=\"tag\">&lt;/<span class=\"name\">module</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">modules</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.com.siss<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-grpc<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.com.siss.utils<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>siss-utils<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>添加子模块</p>\n<p><code>demo-api</code> 该模块主要存放<code>实体类</code> <code>proto文件</code></p>\n<p><img src=\"img/demo-api.png\" alt=\"demo-api\"></p>\n<p>修改 <code>demo-api</code> 的 pom.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 修改parent --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.com.siss<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>demo-grpc<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 添加依赖 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 添加插件 --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">classifier</span>&gt;</span>exec<span class=\"tag\">&lt;/<span class=\"name\">classifier</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.xolstice.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>protobuf-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.sonarsource.scanner.maven<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>sonar-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.jacoco<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jacoco-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>demo-web</code> 对外提供接口</p>\n<p>对外api</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloWorld</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> HelloRpcService helloRpcService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(value = &quot;/&quot;, method = RequestMethod.GET)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">get</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;controller get method&quot;</span>);</span><br><span class=\"line\">        String b = helloRpcService.get(<span class=\"string\">&quot;qq&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>rpc层对java对象转化为proto流文件</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloRpcService</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> HelloServiceGrpc.HelloServiceBlockingStub blockingStub;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">get</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        Hello hello = <span class=\"keyword\">new</span> Hello();</span><br><span class=\"line\">        hello.setName(name);</span><br><span class=\"line\">        HelloProto.HelloDTO dto = (HelloProto.HelloDTO) toGRpcMessage(hello, HelloProto.HelloDTO.newBuilder());</span><br><span class=\"line\">        HelloProto.HelloDTO rep = blockingStub.get(dto);</span><br><span class=\"line\">        String say = (String) fromGRpcMessage(rep, String.class);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> say;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>定义<code>protobuf</code></p>\n<figure class=\"highlight protobuf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">syntax = <span class=\"string\">&quot;proto3&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">option</span> java_package = <span class=\"string\">&quot;cn.com.siss.api&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">option</span> java_outer_classname = <span class=\"string\">&quot;HelloProto&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">message</span> <span class=\"title\">HelloDTO</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> name = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">service</span> <span class=\"title\">HelloService</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">rpc</span> get (HelloDTO) <span class=\"keyword\">returns</span> (HelloDTO) </span>&#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>添加<code>config</code>文件注册</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableAutoConfiguration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloConfig</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GRpcClient(&quot;demo-provider&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ManagedChannel channel;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> HelloServiceGrpc.<span class=\"function\">HelloServiceBlockingStub <span class=\"title\">helloServiceBlockingStub</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> HelloServiceGrpc.newBlockingStub(channel);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>修改application.yml</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">grpc:</span></span><br><span class=\"line\">  <span class=\"attr\">client:</span></span><br><span class=\"line\">    <span class=\"attr\">demo-provider:</span></span><br><span class=\"line\">      <span class=\"attr\">server-host:</span> <span class=\"string\">localhost</span></span><br><span class=\"line\">      <span class=\"attr\">server-port:</span> <span class=\"number\">7575</span></span><br><span class=\"line\">      <span class=\"attr\">enable-keep-alive:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">      <span class=\"attr\">keep-alive-delay:</span> <span class=\"number\">60</span> <span class=\"comment\"># seconds</span></span><br><span class=\"line\">      <span class=\"attr\">keep-alive-timeOut:</span> <span class=\"number\">60</span></span><br></pre></td></tr></table></figure>\n\n<p><code>demo-provider</code> 对数据做持久化</p>\n<p>修改pom文件</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.com.siss<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>demo-grpc<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 添加依赖 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.com.siss<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>demo-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>rpc层</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@GRpcService</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloRpc</span> <span class=\"keyword\">extends</span> <span class=\"title\">HelloServiceGrpc</span>.<span class=\"title\">HelloServiceImplBase</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">get</span><span class=\"params\">(HelloProto.HelloDTO request,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                    StreamObserver&lt;HelloProto.HelloDTO&gt; responseObserver)</span> </span>&#123;</span><br><span class=\"line\">        HelloProto.HelloDTO response = (HelloProto.HelloDTO) toGRpcMessage(request, HelloProto.HelloDTO.newBuilder());</span><br><span class=\"line\">        responseObserver.onNext(response);</span><br><span class=\"line\">        responseObserver.onCompleted();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以尝试下载demo debug一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> ssh://git@gitlab.sissyun.com.cn:8022/demo/demo-grpc.git</span><br></pre></td></tr></table></figure>"},{"title":"2 GIT 的使用","date":"2018-02-19T16:00:00.000Z","_content":"\n## 2.1 概述\n\n如果你严肃对待编程，就必定会使用\"版本管理系统\"（Version Control System）。\n眼下最流行的\"版本管理系统\"，非Git莫属。\n\n![](https://git-scm.com/images/logos/logomark-orange@2x.png)\n\n相比同类软件，Git有很多优点。其中很显著的一点，就是版本的分支（branch）和合并（merge）十分方便。有些传统的版本管理软件，分支操作实际上会生成一份现有代码的物理拷贝，而Git只生成一个指向当前版本（又称\"快照\"）的指针，因此非常快捷易用。\n但是，太方便了也会产生副作用。如果你不加注意，很可能会留下一个枝节蔓生、四处开放的版本库，到处都是分支，完全看不出主干发展的脉络。\n\n![](https://git-scm.com/images/branching-illustration@2x.png)\n\nVincent Driessen提出了一个分支管理的策略，我觉得非常值得借鉴。它可以使得版本库的演进保持简洁，主干清晰，各个分支各司其职、井井有条。理论上，这些策略对所有的版本管理系统都适用，Git只是用来举例而已。如果你不熟悉Git，跳过举例部分就可以了。\n\n## 2.2 Git 的安装\n\n[Git 下载](https://github.com/git-for-windows/git/releases/download/v2.20.1.windows.1/Git-2.20.1-64-bit.exe)\n\n下载成功后直接点击安装即可。\n\n## 2.3 Git 注册及配置\n\n在浏览器输入`https://gitlab.sissyun.com.cn` 打开Gitlab客户端\n\n## 2.4 注册\n\n特别注意下面的格式，名字用中文，用户名使用全小写拼音,  并使用公司邮箱。\n如果你的名字是：张三，\n\n* 姓名（name）填写中文名：张三\n* 用户名（username）填写你的全名拼音：zhangsan\n* 邮箱是使用公司邮箱，不要用私人邮箱：zhang.san@ssi.com.\n\n请记住自己设置的密码，要求8位，并包含英文字母大、小写及数字，如：pA5wOldy，如果你没安装要求注册，你将无法登录Gitlab。\n\n![](/assets/gitlab-register.png)\n\n## 2.5 激活用户\n\n激活你的账户\n\n接下来去邮箱查看你的邮件，你很快会收到来自 Gitlab 的邮件,按照提示激活你的账户。（如果没收到激活邮件，请联系你的项目经理）\n\n## 2.6 设置密钥\n\n回到操作系统命令提示符下（windows用户请用git bash终端）生成ssh密钥及设置git用户信息, 注意如果你在运行ssh-keygen是设置了密码，那么你以后的git操作也要输入密码，否则这里可以直接回车，即运行ssh-keygen不使用密码。\n\n```bash\nssh-keygen -t rsa -C \"zhang.san@ssi.com\" \ngit config --global user.name \"Zhang San\"\ngit config --global user.email \"zhang.san@ssi.com\"\n```\n\n### 2.7 上传公钥\n\n登录gitlab后，先点击 Profile Settings >  \n\n![](img/gitlab_settings.png)\n\n创建`rsa` 密钥\n\n```bash\nssh-keygen -t rsa -C \"youname@ssi.com\"\n```\n\n\b最好打开密钥管理页面\n\n 在git bash下，复制刚才生成好的ssh公共密钥的文本内容并粘贴到下面文本框内\n\n* Windows：c:\\Users\\yourname\\.ssh\\id_rsa.pub; \n* Linux/Mac: ~/.ssh/id_rsa.pub\n\n```bash\n\ncat ~/.ssh/id_rsa.pub\n```\n\n![ssh_key](img/gitlab_profile_keys_new.png)\n\n### 2.8 编辑Git配置文件\n\n我们来克隆一个演示应用代码下来测试\n\n```bash\ngit clone ssh://git@gitlab.sissyun.com.cn:8022/frameworks/spring-boot-utils.git\n```\n\n### 2.9 Git 使用\b入门\n\n说明：\n\n以下所有git命令行都在终端下操作。\n\n**创建分支**\n\n创建一个名称叫 demo\n\n```bash\ngit checkout -b demo\n```\n\n**查看创建的分支**\n\n```bash\ngit branch –a\n```\n\n**查看本地文件修改状态**\n\n接下来就可以开发了，开发完成后查看更改过的文件\n\n```bash\ngit status\n```\n\n**代码提交**\n审查没有问题后提交代码到 feature 分支\n\n```bash\ngit add .\n\ngit status\n\ngit commit\n\n(press i to input below text)\n\n[Description]: Your comments.\n\n[Reviewer]: The name of reviewer\n\n(press esc and :wq to commit )\n```\n\n把提交到代码推到远程服务器\n\n```bash\ngit push origin demo\n```\n\n**主分支master**\n\n首先，代码库应该有一个、且仅有一个主分支。所有提供给用户使用的正式版本，都在这个主分支上发布。\n\nGit主分支的名字，默认叫做master。它是自动建立的，版本库初始化以后，默认就是在主分支在进行开发。\n\n**开发分支development**\n\n主分支只用来分布重大版本，日常开发应该在另一条分支上完成。我们把开发用的分支，叫做development, 开发功能模块应该新建feature分支，单元测试通过后合并到development分支，合并完成后feature分支到生命周期结束，应该删除该分支。\n\n这个分支可以用来生成代码的最新隔夜版本（nightly）。如果想正式对外发布，就在Master分支上，对Development分支进行\"合并\"（merge）。\nGit创建Development分支的命令：\n\n```bash\ngit checkout -b development\n```\n\n将Development分支发布到Master分支的命令：\n\n```bash\n# 切换到Master分支\ngit checkout master\n\n# 对Development分支进行合并\ngit merge --no-ff development\n```\n\n这里稍微解释一下，上一条命令的--no-ff参数是什么意思。默认情况下，Git执行\"快进式合并\"（fast-farward merge），会直接将Master分支指向Develop分支。\n\n使用--no-ff参数后，会执行正常合并，在Master分支上生成一个新节点。为了保证版本演进的清晰，我们希望采用这种做法。关于合并的更多解释，请参考Benjamin Sandofsky的《Understanding the Git Workflow》。\n\n**临时性分支**\n\n前面讲到版本库的两条主要分支：Master和Development。前者用于正式发布，后者用于日常开发。其实，常设分支只需要这两条就够了，不需要其他了。\n但是，除了常设分支以外，还有一些临时性分支，用于应对一些特定目的的版本开发。临时性分支主要有三种：\n\n* 功能（feature）分支\n* 预发布（release）分支\n* 修补bug（fixbug）分支\n\n这三种分支都属于临时性需要，使用完以后，应该删除，使得代码库的常设分支始终只有Master和Development。\n\n**功能分支**\n\n接下来，一个个来看这三种\"临时性分支\"。\n第一种是功能分支，它是为了开发某种特定功能，从Development分支上面分出来的。开发完成后，要再并入Development。\n\n功能分支的名字，可以采用feature-*的形式命名。\n创建一个功能分支：\n\n```bash\ngit checkout -b feature-x development\n```\n\n开发完成后，将功能分支合并到development分支：\n\n```bash\ngit checkout development\ngit merge --no-ff feature-x\n```\n\n删除feature分支：\n\n```bash\ngit branch -d feature-x\n```\n\n**2.2.3.5 预发布分支**\n\n第二种是预发布分支，它是指发布正式版本之前（即合并到Master分支之前），我们可能需要有一个预发布的版本进行测试。\n预发布分支是从Development分支上面分出来的，预发布结束以后，必须合并进Development和Master分支。它的命名，可以采用release-*的形式。\n创建一个预发布分支：\n\n```bash\ngit checkout -b release-1.0.0 development\n```\n\n确认没有问题后，合并到master分支：\n\n```bash\ngit checkout master\ngit merge --no-ff release-1.0.0\n# 对合并生成的新节点，做一个标签\ngit tag -a 1.0.0\n```\n\n再合并到development分支：\n\n```bash\ngit checkout development\ngit merge --no-ff release-1.0.0\n```\n\n最后，删除预发布分支：\n\n```bash\ngit branch -d release-1.0.0\n```\n\n**修补bug分支**\n\n第三种是修补bug分支。软件正式发布以后，难免会出现bug。这时就需要创建一个分支，进行bug修补。\n修补bug分支是从Master分支上面分出来的。修补结束以后，再合并进Master和Development分支。它的命名，可以采用fixbug-*的形式。\n\n创建一个修补bug分支：\n\n```bash\n　　git checkout -b fixbug-0.1 master\n```\n\n修补结束后，合并到master分支：\n\n```bash\n　　git checkout master\n　　git merge --no-ff fixbug-0.1\n　　git tag -a 0.1.1\n```\n\n再合并到development分支：\n\n```bash\n　　git checkout development\n　　git merge --no-ff fixbug-0.1\n```\n\n最后，删除\"修补bug分支\"：\n\n```bash\n　　git branch -d fixbug-0.1\n```\n\n**客户稳定版分支**\n\n当应用发布给多个客户上线时，我们需要从master\b\b创建客户分支 abc-xxx\n分支是从 master 分支上面分出来的，它的命名，可以采用abc-xxx的形式（abc为客户项目\b代码, xxx为版本号）。\n\n创建一个预发布分支：\n\n```bash\n　　git checkout -b abc-1.0.0 master\n```\n\n测试\b有问题就在这个分支收敛再提交测\b试，最后测试没有问题，以此版本发布。\n","source":"_posts/doc-dev/basics/git.md","raw":"---\ntitle: 2 GIT 的使用\ndate: 2018-02-20\n---\n\n## 2.1 概述\n\n如果你严肃对待编程，就必定会使用\"版本管理系统\"（Version Control System）。\n眼下最流行的\"版本管理系统\"，非Git莫属。\n\n![](https://git-scm.com/images/logos/logomark-orange@2x.png)\n\n相比同类软件，Git有很多优点。其中很显著的一点，就是版本的分支（branch）和合并（merge）十分方便。有些传统的版本管理软件，分支操作实际上会生成一份现有代码的物理拷贝，而Git只生成一个指向当前版本（又称\"快照\"）的指针，因此非常快捷易用。\n但是，太方便了也会产生副作用。如果你不加注意，很可能会留下一个枝节蔓生、四处开放的版本库，到处都是分支，完全看不出主干发展的脉络。\n\n![](https://git-scm.com/images/branching-illustration@2x.png)\n\nVincent Driessen提出了一个分支管理的策略，我觉得非常值得借鉴。它可以使得版本库的演进保持简洁，主干清晰，各个分支各司其职、井井有条。理论上，这些策略对所有的版本管理系统都适用，Git只是用来举例而已。如果你不熟悉Git，跳过举例部分就可以了。\n\n## 2.2 Git 的安装\n\n[Git 下载](https://github.com/git-for-windows/git/releases/download/v2.20.1.windows.1/Git-2.20.1-64-bit.exe)\n\n下载成功后直接点击安装即可。\n\n## 2.3 Git 注册及配置\n\n在浏览器输入`https://gitlab.sissyun.com.cn` 打开Gitlab客户端\n\n## 2.4 注册\n\n特别注意下面的格式，名字用中文，用户名使用全小写拼音,  并使用公司邮箱。\n如果你的名字是：张三，\n\n* 姓名（name）填写中文名：张三\n* 用户名（username）填写你的全名拼音：zhangsan\n* 邮箱是使用公司邮箱，不要用私人邮箱：zhang.san@ssi.com.\n\n请记住自己设置的密码，要求8位，并包含英文字母大、小写及数字，如：pA5wOldy，如果你没安装要求注册，你将无法登录Gitlab。\n\n![](/assets/gitlab-register.png)\n\n## 2.5 激活用户\n\n激活你的账户\n\n接下来去邮箱查看你的邮件，你很快会收到来自 Gitlab 的邮件,按照提示激活你的账户。（如果没收到激活邮件，请联系你的项目经理）\n\n## 2.6 设置密钥\n\n回到操作系统命令提示符下（windows用户请用git bash终端）生成ssh密钥及设置git用户信息, 注意如果你在运行ssh-keygen是设置了密码，那么你以后的git操作也要输入密码，否则这里可以直接回车，即运行ssh-keygen不使用密码。\n\n```bash\nssh-keygen -t rsa -C \"zhang.san@ssi.com\" \ngit config --global user.name \"Zhang San\"\ngit config --global user.email \"zhang.san@ssi.com\"\n```\n\n### 2.7 上传公钥\n\n登录gitlab后，先点击 Profile Settings >  \n\n![](img/gitlab_settings.png)\n\n创建`rsa` 密钥\n\n```bash\nssh-keygen -t rsa -C \"youname@ssi.com\"\n```\n\n\b最好打开密钥管理页面\n\n 在git bash下，复制刚才生成好的ssh公共密钥的文本内容并粘贴到下面文本框内\n\n* Windows：c:\\Users\\yourname\\.ssh\\id_rsa.pub; \n* Linux/Mac: ~/.ssh/id_rsa.pub\n\n```bash\n\ncat ~/.ssh/id_rsa.pub\n```\n\n![ssh_key](img/gitlab_profile_keys_new.png)\n\n### 2.8 编辑Git配置文件\n\n我们来克隆一个演示应用代码下来测试\n\n```bash\ngit clone ssh://git@gitlab.sissyun.com.cn:8022/frameworks/spring-boot-utils.git\n```\n\n### 2.9 Git 使用\b入门\n\n说明：\n\n以下所有git命令行都在终端下操作。\n\n**创建分支**\n\n创建一个名称叫 demo\n\n```bash\ngit checkout -b demo\n```\n\n**查看创建的分支**\n\n```bash\ngit branch –a\n```\n\n**查看本地文件修改状态**\n\n接下来就可以开发了，开发完成后查看更改过的文件\n\n```bash\ngit status\n```\n\n**代码提交**\n审查没有问题后提交代码到 feature 分支\n\n```bash\ngit add .\n\ngit status\n\ngit commit\n\n(press i to input below text)\n\n[Description]: Your comments.\n\n[Reviewer]: The name of reviewer\n\n(press esc and :wq to commit )\n```\n\n把提交到代码推到远程服务器\n\n```bash\ngit push origin demo\n```\n\n**主分支master**\n\n首先，代码库应该有一个、且仅有一个主分支。所有提供给用户使用的正式版本，都在这个主分支上发布。\n\nGit主分支的名字，默认叫做master。它是自动建立的，版本库初始化以后，默认就是在主分支在进行开发。\n\n**开发分支development**\n\n主分支只用来分布重大版本，日常开发应该在另一条分支上完成。我们把开发用的分支，叫做development, 开发功能模块应该新建feature分支，单元测试通过后合并到development分支，合并完成后feature分支到生命周期结束，应该删除该分支。\n\n这个分支可以用来生成代码的最新隔夜版本（nightly）。如果想正式对外发布，就在Master分支上，对Development分支进行\"合并\"（merge）。\nGit创建Development分支的命令：\n\n```bash\ngit checkout -b development\n```\n\n将Development分支发布到Master分支的命令：\n\n```bash\n# 切换到Master分支\ngit checkout master\n\n# 对Development分支进行合并\ngit merge --no-ff development\n```\n\n这里稍微解释一下，上一条命令的--no-ff参数是什么意思。默认情况下，Git执行\"快进式合并\"（fast-farward merge），会直接将Master分支指向Develop分支。\n\n使用--no-ff参数后，会执行正常合并，在Master分支上生成一个新节点。为了保证版本演进的清晰，我们希望采用这种做法。关于合并的更多解释，请参考Benjamin Sandofsky的《Understanding the Git Workflow》。\n\n**临时性分支**\n\n前面讲到版本库的两条主要分支：Master和Development。前者用于正式发布，后者用于日常开发。其实，常设分支只需要这两条就够了，不需要其他了。\n但是，除了常设分支以外，还有一些临时性分支，用于应对一些特定目的的版本开发。临时性分支主要有三种：\n\n* 功能（feature）分支\n* 预发布（release）分支\n* 修补bug（fixbug）分支\n\n这三种分支都属于临时性需要，使用完以后，应该删除，使得代码库的常设分支始终只有Master和Development。\n\n**功能分支**\n\n接下来，一个个来看这三种\"临时性分支\"。\n第一种是功能分支，它是为了开发某种特定功能，从Development分支上面分出来的。开发完成后，要再并入Development。\n\n功能分支的名字，可以采用feature-*的形式命名。\n创建一个功能分支：\n\n```bash\ngit checkout -b feature-x development\n```\n\n开发完成后，将功能分支合并到development分支：\n\n```bash\ngit checkout development\ngit merge --no-ff feature-x\n```\n\n删除feature分支：\n\n```bash\ngit branch -d feature-x\n```\n\n**2.2.3.5 预发布分支**\n\n第二种是预发布分支，它是指发布正式版本之前（即合并到Master分支之前），我们可能需要有一个预发布的版本进行测试。\n预发布分支是从Development分支上面分出来的，预发布结束以后，必须合并进Development和Master分支。它的命名，可以采用release-*的形式。\n创建一个预发布分支：\n\n```bash\ngit checkout -b release-1.0.0 development\n```\n\n确认没有问题后，合并到master分支：\n\n```bash\ngit checkout master\ngit merge --no-ff release-1.0.0\n# 对合并生成的新节点，做一个标签\ngit tag -a 1.0.0\n```\n\n再合并到development分支：\n\n```bash\ngit checkout development\ngit merge --no-ff release-1.0.0\n```\n\n最后，删除预发布分支：\n\n```bash\ngit branch -d release-1.0.0\n```\n\n**修补bug分支**\n\n第三种是修补bug分支。软件正式发布以后，难免会出现bug。这时就需要创建一个分支，进行bug修补。\n修补bug分支是从Master分支上面分出来的。修补结束以后，再合并进Master和Development分支。它的命名，可以采用fixbug-*的形式。\n\n创建一个修补bug分支：\n\n```bash\n　　git checkout -b fixbug-0.1 master\n```\n\n修补结束后，合并到master分支：\n\n```bash\n　　git checkout master\n　　git merge --no-ff fixbug-0.1\n　　git tag -a 0.1.1\n```\n\n再合并到development分支：\n\n```bash\n　　git checkout development\n　　git merge --no-ff fixbug-0.1\n```\n\n最后，删除\"修补bug分支\"：\n\n```bash\n　　git branch -d fixbug-0.1\n```\n\n**客户稳定版分支**\n\n当应用发布给多个客户上线时，我们需要从master\b\b创建客户分支 abc-xxx\n分支是从 master 分支上面分出来的，它的命名，可以采用abc-xxx的形式（abc为客户项目\b代码, xxx为版本号）。\n\n创建一个预发布分支：\n\n```bash\n　　git checkout -b abc-1.0.0 master\n```\n\n测试\b有问题就在这个分支收敛再提交测\b试，最后测试没有问题，以此版本发布。\n","slug":"doc-dev/basics/git","published":1,"updated":"2021-03-09T14:24:00.617Z","_id":"ckm237zw400011mjrgg4acd0e","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"2-1-概述\"><a href=\"#2-1-概述\" class=\"headerlink\" title=\"2.1 概述\"></a>2.1 概述</h2><p>如果你严肃对待编程，就必定会使用”版本管理系统”（Version Control System）。<br>眼下最流行的”版本管理系统”，非Git莫属。</p>\n<p><img src=\"https://git-scm.com/images/logos/logomark-orange@2x.png\"></p>\n<p>相比同类软件，Git有很多优点。其中很显著的一点，就是版本的分支（branch）和合并（merge）十分方便。有些传统的版本管理软件，分支操作实际上会生成一份现有代码的物理拷贝，而Git只生成一个指向当前版本（又称”快照”）的指针，因此非常快捷易用。<br>但是，太方便了也会产生副作用。如果你不加注意，很可能会留下一个枝节蔓生、四处开放的版本库，到处都是分支，完全看不出主干发展的脉络。</p>\n<p><img src=\"https://git-scm.com/images/branching-illustration@2x.png\"></p>\n<p>Vincent Driessen提出了一个分支管理的策略，我觉得非常值得借鉴。它可以使得版本库的演进保持简洁，主干清晰，各个分支各司其职、井井有条。理论上，这些策略对所有的版本管理系统都适用，Git只是用来举例而已。如果你不熟悉Git，跳过举例部分就可以了。</p>\n<h2 id=\"2-2-Git-的安装\"><a href=\"#2-2-Git-的安装\" class=\"headerlink\" title=\"2.2 Git 的安装\"></a>2.2 Git 的安装</h2><p><a class=\"link\"   href=\"https://github.com/git-for-windows/git/releases/download/v2.20.1.windows.1/Git-2.20.1-64-bit.exe\" >Git 下载<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>下载成功后直接点击安装即可。</p>\n<h2 id=\"2-3-Git-注册及配置\"><a href=\"#2-3-Git-注册及配置\" class=\"headerlink\" title=\"2.3 Git 注册及配置\"></a>2.3 Git 注册及配置</h2><p>在浏览器输入<code>https://gitlab.sissyun.com.cn</code> 打开Gitlab客户端</p>\n<h2 id=\"2-4-注册\"><a href=\"#2-4-注册\" class=\"headerlink\" title=\"2.4 注册\"></a>2.4 注册</h2><p>特别注意下面的格式，名字用中文，用户名使用全小写拼音,  并使用公司邮箱。<br>如果你的名字是：张三，</p>\n<ul>\n<li>姓名（name）填写中文名：张三</li>\n<li>用户名（username）填写你的全名拼音：zhangsan</li>\n<li>邮箱是使用公司邮箱，不要用私人邮箱：<a class=\"link\"   href=\"mailto:&#122;&#x68;&#97;&#x6e;&#x67;&#x2e;&#115;&#x61;&#110;&#x40;&#115;&#x73;&#105;&#46;&#x63;&#111;&#109;\" >&#122;&#x68;&#97;&#x6e;&#x67;&#x2e;&#115;&#x61;&#110;&#x40;&#115;&#x73;&#105;&#46;&#x63;&#111;&#109;<i class=\"fas fa-external-link-alt\"></i></a>.</li>\n</ul>\n<p>请记住自己设置的密码，要求8位，并包含英文字母大、小写及数字，如：pA5wOldy，如果你没安装要求注册，你将无法登录Gitlab。</p>\n<p><img src=\"/assets/gitlab-register.png\"></p>\n<h2 id=\"2-5-激活用户\"><a href=\"#2-5-激活用户\" class=\"headerlink\" title=\"2.5 激活用户\"></a>2.5 激活用户</h2><p>激活你的账户</p>\n<p>接下来去邮箱查看你的邮件，你很快会收到来自 Gitlab 的邮件,按照提示激活你的账户。（如果没收到激活邮件，请联系你的项目经理）</p>\n<h2 id=\"2-6-设置密钥\"><a href=\"#2-6-设置密钥\" class=\"headerlink\" title=\"2.6 设置密钥\"></a>2.6 设置密钥</h2><p>回到操作系统命令提示符下（windows用户请用git bash终端）生成ssh密钥及设置git用户信息, 注意如果你在运行ssh-keygen是设置了密码，那么你以后的git操作也要输入密码，否则这里可以直接回车，即运行ssh-keygen不使用密码。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;zhang.san@ssi.com&quot;</span> </span><br><span class=\"line\">git config --global user.name <span class=\"string\">&quot;Zhang San&quot;</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;zhang.san@ssi.com&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-7-上传公钥\"><a href=\"#2-7-上传公钥\" class=\"headerlink\" title=\"2.7 上传公钥\"></a>2.7 上传公钥</h3><p>登录gitlab后，先点击 Profile Settings &gt;  </p>\n<p><img src=\"img/gitlab_settings.png\"></p>\n<p>创建<code>rsa</code> 密钥</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;youname@ssi.com&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>\b最好打开密钥管理页面</p>\n<p> 在git bash下，复制刚才生成好的ssh公共密钥的文本内容并粘贴到下面文本框内</p>\n<ul>\n<li>Windows：c:\\Users\\yourname.ssh\\id_rsa.pub; </li>\n<li>Linux/Mac: ~/.ssh/id_rsa.pub</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"img/gitlab_profile_keys_new.png\" alt=\"ssh_key\"></p>\n<h3 id=\"2-8-编辑Git配置文件\"><a href=\"#2-8-编辑Git配置文件\" class=\"headerlink\" title=\"2.8 编辑Git配置文件\"></a>2.8 编辑Git配置文件</h3><p>我们来克隆一个演示应用代码下来测试</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> ssh://git@gitlab.sissyun.com.cn:8022/frameworks/spring-boot-utils.git</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-9-Git-使用入门\"><a href=\"#2-9-Git-使用入门\" class=\"headerlink\" title=\"2.9 Git 使用\b入门\"></a>2.9 Git 使用\b入门</h3><p>说明：</p>\n<p>以下所有git命令行都在终端下操作。</p>\n<p><strong>创建分支</strong></p>\n<p>创建一个名称叫 demo</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b demo</span><br></pre></td></tr></table></figure>\n\n<p><strong>查看创建的分支</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch –a</span><br></pre></td></tr></table></figure>\n\n<p><strong>查看本地文件修改状态</strong></p>\n<p>接下来就可以开发了，开发完成后查看更改过的文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p><strong>代码提交</strong><br>审查没有问题后提交代码到 feature 分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\"></span><br><span class=\"line\">git status</span><br><span class=\"line\"></span><br><span class=\"line\">git commit</span><br><span class=\"line\"></span><br><span class=\"line\">(press i to input below text)</span><br><span class=\"line\"></span><br><span class=\"line\">[Description]: Your comments.</span><br><span class=\"line\"></span><br><span class=\"line\">[Reviewer]: The name of reviewer</span><br><span class=\"line\"></span><br><span class=\"line\">(press esc and :wq to commit )</span><br></pre></td></tr></table></figure>\n\n<p>把提交到代码推到远程服务器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin demo</span><br></pre></td></tr></table></figure>\n\n<p><strong>主分支master</strong></p>\n<p>首先，代码库应该有一个、且仅有一个主分支。所有提供给用户使用的正式版本，都在这个主分支上发布。</p>\n<p>Git主分支的名字，默认叫做master。它是自动建立的，版本库初始化以后，默认就是在主分支在进行开发。</p>\n<p><strong>开发分支development</strong></p>\n<p>主分支只用来分布重大版本，日常开发应该在另一条分支上完成。我们把开发用的分支，叫做development, 开发功能模块应该新建feature分支，单元测试通过后合并到development分支，合并完成后feature分支到生命周期结束，应该删除该分支。</p>\n<p>这个分支可以用来生成代码的最新隔夜版本（nightly）。如果想正式对外发布，就在Master分支上，对Development分支进行”合并”（merge）。<br>Git创建Development分支的命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b development</span><br></pre></td></tr></table></figure>\n\n<p>将Development分支发布到Master分支的命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 切换到Master分支</span></span><br><span class=\"line\">git checkout master</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 对Development分支进行合并</span></span><br><span class=\"line\">git merge --no-ff development</span><br></pre></td></tr></table></figure>\n\n<p>这里稍微解释一下，上一条命令的–no-ff参数是什么意思。默认情况下，Git执行”快进式合并”（fast-farward merge），会直接将Master分支指向Develop分支。</p>\n<p>使用–no-ff参数后，会执行正常合并，在Master分支上生成一个新节点。为了保证版本演进的清晰，我们希望采用这种做法。关于合并的更多解释，请参考Benjamin Sandofsky的《Understanding the Git Workflow》。</p>\n<p><strong>临时性分支</strong></p>\n<p>前面讲到版本库的两条主要分支：Master和Development。前者用于正式发布，后者用于日常开发。其实，常设分支只需要这两条就够了，不需要其他了。<br>但是，除了常设分支以外，还有一些临时性分支，用于应对一些特定目的的版本开发。临时性分支主要有三种：</p>\n<ul>\n<li>功能（feature）分支</li>\n<li>预发布（release）分支</li>\n<li>修补bug（fixbug）分支</li>\n</ul>\n<p>这三种分支都属于临时性需要，使用完以后，应该删除，使得代码库的常设分支始终只有Master和Development。</p>\n<p><strong>功能分支</strong></p>\n<p>接下来，一个个来看这三种”临时性分支”。<br>第一种是功能分支，它是为了开发某种特定功能，从Development分支上面分出来的。开发完成后，要再并入Development。</p>\n<p>功能分支的名字，可以采用feature-*的形式命名。<br>创建一个功能分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b feature-x development</span><br></pre></td></tr></table></figure>\n\n<p>开发完成后，将功能分支合并到development分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout development</span><br><span class=\"line\">git merge --no-ff feature-x</span><br></pre></td></tr></table></figure>\n\n<p>删除feature分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -d feature-x</span><br></pre></td></tr></table></figure>\n\n<p><strong>2.2.3.5 预发布分支</strong></p>\n<p>第二种是预发布分支，它是指发布正式版本之前（即合并到Master分支之前），我们可能需要有一个预发布的版本进行测试。<br>预发布分支是从Development分支上面分出来的，预发布结束以后，必须合并进Development和Master分支。它的命名，可以采用release-*的形式。<br>创建一个预发布分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b release-1.0.0 development</span><br></pre></td></tr></table></figure>\n\n<p>确认没有问题后，合并到master分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout master</span><br><span class=\"line\">git merge --no-ff release-1.0.0</span><br><span class=\"line\"><span class=\"comment\"># 对合并生成的新节点，做一个标签</span></span><br><span class=\"line\">git tag -a 1.0.0</span><br></pre></td></tr></table></figure>\n\n<p>再合并到development分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout development</span><br><span class=\"line\">git merge --no-ff release-1.0.0</span><br></pre></td></tr></table></figure>\n\n<p>最后，删除预发布分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -d release-1.0.0</span><br></pre></td></tr></table></figure>\n\n<p><strong>修补bug分支</strong></p>\n<p>第三种是修补bug分支。软件正式发布以后，难免会出现bug。这时就需要创建一个分支，进行bug修补。<br>修补bug分支是从Master分支上面分出来的。修补结束以后，再合并进Master和Development分支。它的命名，可以采用fixbug-*的形式。</p>\n<p>创建一个修补bug分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　git checkout -b fixbug-0.1 master</span><br></pre></td></tr></table></figure>\n\n<p>修补结束后，合并到master分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　git checkout master</span><br><span class=\"line\">　　git merge --no-ff fixbug-0.1</span><br><span class=\"line\">　　git tag -a 0.1.1</span><br></pre></td></tr></table></figure>\n\n<p>再合并到development分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　git checkout development</span><br><span class=\"line\">　　git merge --no-ff fixbug-0.1</span><br></pre></td></tr></table></figure>\n\n<p>最后，删除”修补bug分支”：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　git branch -d fixbug-0.1</span><br></pre></td></tr></table></figure>\n\n<p><strong>客户稳定版分支</strong></p>\n<p>当应用发布给多个客户上线时，我们需要从master\b\b创建客户分支 abc-xxx<br>分支是从 master 分支上面分出来的，它的命名，可以采用abc-xxx的形式（abc为客户项目\b代码, xxx为版本号）。</p>\n<p>创建一个预发布分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　git checkout -b abc-1.0.0 master</span><br></pre></td></tr></table></figure>\n\n<p>测试\b有问题就在这个分支收敛再提交测\b试，最后测试没有问题，以此版本发布。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"2-1-概述\"><a href=\"#2-1-概述\" class=\"headerlink\" title=\"2.1 概述\"></a>2.1 概述</h2><p>如果你严肃对待编程，就必定会使用”版本管理系统”（Version Control System）。<br>眼下最流行的”版本管理系统”，非Git莫属。</p>\n<p><img src=\"https://git-scm.com/images/logos/logomark-orange@2x.png\"></p>\n<p>相比同类软件，Git有很多优点。其中很显著的一点，就是版本的分支（branch）和合并（merge）十分方便。有些传统的版本管理软件，分支操作实际上会生成一份现有代码的物理拷贝，而Git只生成一个指向当前版本（又称”快照”）的指针，因此非常快捷易用。<br>但是，太方便了也会产生副作用。如果你不加注意，很可能会留下一个枝节蔓生、四处开放的版本库，到处都是分支，完全看不出主干发展的脉络。</p>\n<p><img src=\"https://git-scm.com/images/branching-illustration@2x.png\"></p>\n<p>Vincent Driessen提出了一个分支管理的策略，我觉得非常值得借鉴。它可以使得版本库的演进保持简洁，主干清晰，各个分支各司其职、井井有条。理论上，这些策略对所有的版本管理系统都适用，Git只是用来举例而已。如果你不熟悉Git，跳过举例部分就可以了。</p>\n<h2 id=\"2-2-Git-的安装\"><a href=\"#2-2-Git-的安装\" class=\"headerlink\" title=\"2.2 Git 的安装\"></a>2.2 Git 的安装</h2><p><a class=\"link\"   href=\"https://github.com/git-for-windows/git/releases/download/v2.20.1.windows.1/Git-2.20.1-64-bit.exe\" >Git 下载<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>下载成功后直接点击安装即可。</p>\n<h2 id=\"2-3-Git-注册及配置\"><a href=\"#2-3-Git-注册及配置\" class=\"headerlink\" title=\"2.3 Git 注册及配置\"></a>2.3 Git 注册及配置</h2><p>在浏览器输入<code>https://gitlab.sissyun.com.cn</code> 打开Gitlab客户端</p>\n<h2 id=\"2-4-注册\"><a href=\"#2-4-注册\" class=\"headerlink\" title=\"2.4 注册\"></a>2.4 注册</h2><p>特别注意下面的格式，名字用中文，用户名使用全小写拼音,  并使用公司邮箱。<br>如果你的名字是：张三，</p>\n<ul>\n<li>姓名（name）填写中文名：张三</li>\n<li>用户名（username）填写你的全名拼音：zhangsan</li>\n<li>邮箱是使用公司邮箱，不要用私人邮箱：<a class=\"link\"   href=\"mailto:&#122;&#x68;&#97;&#x6e;&#x67;&#x2e;&#115;&#x61;&#110;&#x40;&#115;&#x73;&#105;&#46;&#x63;&#111;&#109;\" >&#122;&#x68;&#97;&#x6e;&#x67;&#x2e;&#115;&#x61;&#110;&#x40;&#115;&#x73;&#105;&#46;&#x63;&#111;&#109;<i class=\"fas fa-external-link-alt\"></i></a>.</li>\n</ul>\n<p>请记住自己设置的密码，要求8位，并包含英文字母大、小写及数字，如：pA5wOldy，如果你没安装要求注册，你将无法登录Gitlab。</p>\n<p><img src=\"/assets/gitlab-register.png\"></p>\n<h2 id=\"2-5-激活用户\"><a href=\"#2-5-激活用户\" class=\"headerlink\" title=\"2.5 激活用户\"></a>2.5 激活用户</h2><p>激活你的账户</p>\n<p>接下来去邮箱查看你的邮件，你很快会收到来自 Gitlab 的邮件,按照提示激活你的账户。（如果没收到激活邮件，请联系你的项目经理）</p>\n<h2 id=\"2-6-设置密钥\"><a href=\"#2-6-设置密钥\" class=\"headerlink\" title=\"2.6 设置密钥\"></a>2.6 设置密钥</h2><p>回到操作系统命令提示符下（windows用户请用git bash终端）生成ssh密钥及设置git用户信息, 注意如果你在运行ssh-keygen是设置了密码，那么你以后的git操作也要输入密码，否则这里可以直接回车，即运行ssh-keygen不使用密码。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;zhang.san@ssi.com&quot;</span> </span><br><span class=\"line\">git config --global user.name <span class=\"string\">&quot;Zhang San&quot;</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;zhang.san@ssi.com&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-7-上传公钥\"><a href=\"#2-7-上传公钥\" class=\"headerlink\" title=\"2.7 上传公钥\"></a>2.7 上传公钥</h3><p>登录gitlab后，先点击 Profile Settings &gt;  </p>\n<p><img src=\"img/gitlab_settings.png\"></p>\n<p>创建<code>rsa</code> 密钥</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;youname@ssi.com&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>\b最好打开密钥管理页面</p>\n<p> 在git bash下，复制刚才生成好的ssh公共密钥的文本内容并粘贴到下面文本框内</p>\n<ul>\n<li>Windows：c:\\Users\\yourname.ssh\\id_rsa.pub; </li>\n<li>Linux/Mac: ~/.ssh/id_rsa.pub</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"img/gitlab_profile_keys_new.png\" alt=\"ssh_key\"></p>\n<h3 id=\"2-8-编辑Git配置文件\"><a href=\"#2-8-编辑Git配置文件\" class=\"headerlink\" title=\"2.8 编辑Git配置文件\"></a>2.8 编辑Git配置文件</h3><p>我们来克隆一个演示应用代码下来测试</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> ssh://git@gitlab.sissyun.com.cn:8022/frameworks/spring-boot-utils.git</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-9-Git-使用入门\"><a href=\"#2-9-Git-使用入门\" class=\"headerlink\" title=\"2.9 Git 使用\b入门\"></a>2.9 Git 使用\b入门</h3><p>说明：</p>\n<p>以下所有git命令行都在终端下操作。</p>\n<p><strong>创建分支</strong></p>\n<p>创建一个名称叫 demo</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b demo</span><br></pre></td></tr></table></figure>\n\n<p><strong>查看创建的分支</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch –a</span><br></pre></td></tr></table></figure>\n\n<p><strong>查看本地文件修改状态</strong></p>\n<p>接下来就可以开发了，开发完成后查看更改过的文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p><strong>代码提交</strong><br>审查没有问题后提交代码到 feature 分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\"></span><br><span class=\"line\">git status</span><br><span class=\"line\"></span><br><span class=\"line\">git commit</span><br><span class=\"line\"></span><br><span class=\"line\">(press i to input below text)</span><br><span class=\"line\"></span><br><span class=\"line\">[Description]: Your comments.</span><br><span class=\"line\"></span><br><span class=\"line\">[Reviewer]: The name of reviewer</span><br><span class=\"line\"></span><br><span class=\"line\">(press esc and :wq to commit )</span><br></pre></td></tr></table></figure>\n\n<p>把提交到代码推到远程服务器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin demo</span><br></pre></td></tr></table></figure>\n\n<p><strong>主分支master</strong></p>\n<p>首先，代码库应该有一个、且仅有一个主分支。所有提供给用户使用的正式版本，都在这个主分支上发布。</p>\n<p>Git主分支的名字，默认叫做master。它是自动建立的，版本库初始化以后，默认就是在主分支在进行开发。</p>\n<p><strong>开发分支development</strong></p>\n<p>主分支只用来分布重大版本，日常开发应该在另一条分支上完成。我们把开发用的分支，叫做development, 开发功能模块应该新建feature分支，单元测试通过后合并到development分支，合并完成后feature分支到生命周期结束，应该删除该分支。</p>\n<p>这个分支可以用来生成代码的最新隔夜版本（nightly）。如果想正式对外发布，就在Master分支上，对Development分支进行”合并”（merge）。<br>Git创建Development分支的命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b development</span><br></pre></td></tr></table></figure>\n\n<p>将Development分支发布到Master分支的命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 切换到Master分支</span></span><br><span class=\"line\">git checkout master</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 对Development分支进行合并</span></span><br><span class=\"line\">git merge --no-ff development</span><br></pre></td></tr></table></figure>\n\n<p>这里稍微解释一下，上一条命令的–no-ff参数是什么意思。默认情况下，Git执行”快进式合并”（fast-farward merge），会直接将Master分支指向Develop分支。</p>\n<p>使用–no-ff参数后，会执行正常合并，在Master分支上生成一个新节点。为了保证版本演进的清晰，我们希望采用这种做法。关于合并的更多解释，请参考Benjamin Sandofsky的《Understanding the Git Workflow》。</p>\n<p><strong>临时性分支</strong></p>\n<p>前面讲到版本库的两条主要分支：Master和Development。前者用于正式发布，后者用于日常开发。其实，常设分支只需要这两条就够了，不需要其他了。<br>但是，除了常设分支以外，还有一些临时性分支，用于应对一些特定目的的版本开发。临时性分支主要有三种：</p>\n<ul>\n<li>功能（feature）分支</li>\n<li>预发布（release）分支</li>\n<li>修补bug（fixbug）分支</li>\n</ul>\n<p>这三种分支都属于临时性需要，使用完以后，应该删除，使得代码库的常设分支始终只有Master和Development。</p>\n<p><strong>功能分支</strong></p>\n<p>接下来，一个个来看这三种”临时性分支”。<br>第一种是功能分支，它是为了开发某种特定功能，从Development分支上面分出来的。开发完成后，要再并入Development。</p>\n<p>功能分支的名字，可以采用feature-*的形式命名。<br>创建一个功能分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b feature-x development</span><br></pre></td></tr></table></figure>\n\n<p>开发完成后，将功能分支合并到development分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout development</span><br><span class=\"line\">git merge --no-ff feature-x</span><br></pre></td></tr></table></figure>\n\n<p>删除feature分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -d feature-x</span><br></pre></td></tr></table></figure>\n\n<p><strong>2.2.3.5 预发布分支</strong></p>\n<p>第二种是预发布分支，它是指发布正式版本之前（即合并到Master分支之前），我们可能需要有一个预发布的版本进行测试。<br>预发布分支是从Development分支上面分出来的，预发布结束以后，必须合并进Development和Master分支。它的命名，可以采用release-*的形式。<br>创建一个预发布分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b release-1.0.0 development</span><br></pre></td></tr></table></figure>\n\n<p>确认没有问题后，合并到master分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout master</span><br><span class=\"line\">git merge --no-ff release-1.0.0</span><br><span class=\"line\"><span class=\"comment\"># 对合并生成的新节点，做一个标签</span></span><br><span class=\"line\">git tag -a 1.0.0</span><br></pre></td></tr></table></figure>\n\n<p>再合并到development分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout development</span><br><span class=\"line\">git merge --no-ff release-1.0.0</span><br></pre></td></tr></table></figure>\n\n<p>最后，删除预发布分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -d release-1.0.0</span><br></pre></td></tr></table></figure>\n\n<p><strong>修补bug分支</strong></p>\n<p>第三种是修补bug分支。软件正式发布以后，难免会出现bug。这时就需要创建一个分支，进行bug修补。<br>修补bug分支是从Master分支上面分出来的。修补结束以后，再合并进Master和Development分支。它的命名，可以采用fixbug-*的形式。</p>\n<p>创建一个修补bug分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　git checkout -b fixbug-0.1 master</span><br></pre></td></tr></table></figure>\n\n<p>修补结束后，合并到master分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　git checkout master</span><br><span class=\"line\">　　git merge --no-ff fixbug-0.1</span><br><span class=\"line\">　　git tag -a 0.1.1</span><br></pre></td></tr></table></figure>\n\n<p>再合并到development分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　git checkout development</span><br><span class=\"line\">　　git merge --no-ff fixbug-0.1</span><br></pre></td></tr></table></figure>\n\n<p>最后，删除”修补bug分支”：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　git branch -d fixbug-0.1</span><br></pre></td></tr></table></figure>\n\n<p><strong>客户稳定版分支</strong></p>\n<p>当应用发布给多个客户上线时，我们需要从master\b\b创建客户分支 abc-xxx<br>分支是从 master 分支上面分出来的，它的命名，可以采用abc-xxx的形式（abc为客户项目\b代码, xxx为版本号）。</p>\n<p>创建一个预发布分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　git checkout -b abc-1.0.0 master</span><br></pre></td></tr></table></figure>\n\n<p>测试\b有问题就在这个分支收敛再提交测\b试，最后测试没有问题，以此版本发布。</p>\n"},{"title":"使用SpringBoot 整合 消息中间件Kafka","date":"2018-02-19T16:00:00.000Z","_content":"\n## 简介\n\nKafka is a distributed,partitioned,replicated commit logservice。它提供了类似于JMS的特性，但是在设计实现上完全不同，此外它并不是JMS规范的实现。kafka对消息保存时根据Topic进行归类，发送消息者成为Producer,消息接受者成为Consumer,此外kafka集群有多个kafka实例组成，每个实例(server)成为broker。无论是kafka集群，还是producer和consumer都依赖于zookeeper来保证系统可用性集群保存一些meta信息。\n\n![kafka-img](http://kafka.apache.org/images/kafka_diagram.png)\n\n## 使用场景\n\n## Kafka主要特点\n\n1. 同时为发布和订阅提供高吞吐量。据了解，Kafka每秒可以生产约25万消息（50 MB），每秒处理55万消息（110 MB）。\n2. 可进行持久化操作。将消息持久化到磁盘，因此可用于批量消费，例如ETL，以及实时应用程序。通过将数据持久化到硬盘以及replication防止数据丢失。\n3. 分布式系统，易于向外扩展。所有的producer、broker和consumer都会有多个，均为分布式的。无需停机即可扩展机器。\n4. 消息被处理的状态是在consumer端维护，而不是由server端维护。当失败时能自动平衡。\n5. 支持online和offline的场景。\n\n## SpringBoot 集成Kafka\n\n添加kafka starter依赖\n\n```xml\n        <dependency>\n            <groupId>cn.com.siss</groupId>\n            <artifactId>spring-boot-starter-kafka</artifactId>\n            <version>${starters.version}</version>\n        </dependency>\n```\n\n添加kafka配置文件\n\n```yaml\nspring:\n  profiles:\n    include:\n      - kafka\n```\n\n发送消息 注册`kafkaTemplate` `kafkaTemplate.send(\"message\", \"hello-world\")`\n\n```java\n    @Autowired\n    private KafkaTemplate kafkaTemplate;\n\n    @RequestMapping(value = \"/sendKafka\", method = RequestMethod.GET)\n    public Object sendKafka(){\n        System.out.println(\"sendKafka\");\n        ListenableFuture result = kafkaTemplate.send(\"message\", \"hello-world\");\n        return result;\n    }\n```\n\n消息接受者\n\n```java\n@Component\n@Slf4j\npublic class Hellokafka {\n\n    @KafkaListener(topics = {\"message\"})\n    public void getMessage(ConsumerRecord<?, ?> record) {\n        Optional<?> kafkaMessage = Optional.ofNullable(record.value());\n        if (kafkaMessage.isPresent()) {\n\n            Object message = kafkaMessage.get();\n\n            log.info(\"----------------- record =\" + record);\n            log.info(\"------------------ message =\" + message);\n        }\n    }\n}\n```\n\n效果如下\n\n```\nsendKafka\n2019-02-28 17:20:07.013  INFO 10477 --- [nio-8081-exec-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values:\n2019-02-28 17:20:07.020  INFO 10477 --- [nio-8081-exec-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values:\n2019-02-28 17:20:07.020  INFO 10477 --- [nio-8081-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version : 0.10.0.1\n2019-02-28 17:20:07.020  INFO 10477 --- [nio-8081-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId : a7a17cdec9eaa6c5\n2019-02-28 17:20:07.398  INFO 10477 --- [afka-listener-1] cn.com.siss.web.kafka.Hellokafka         : ----------------- record =ConsumerRecord(topic = message, partition = 0, offset = 85, CreateTime = 1551345607273, checksum = 3403921507, serialized key size = -1, serialized value size = 11, key = null, value = hello-world)\n2019-02-28 17:20:07.398  INFO 10477 --- [afka-listener-1] cn.com.siss.web.kafka.Hellokafka         : ------------------ message =hello-world\n2019-02-28 17:20:07.434  WARN 10477 --- [nio-8081-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Failed to write HTTP message: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: No serializer found for class org.apache.kafka.clients.producer.ProducerRecord and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS); nested exception is com.fasterxml.jackson.databind.JsonMappingException: No serializer found for class org.apache.kafka.clients.producer.ProducerRecord and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: org.springframework.kafka.support.SendResult[\"producerRecord\"])\n```","source":"_posts/doc-dev/basics/kafka.md","raw":"---\ntitle: 使用SpringBoot 整合 消息中间件Kafka\ndate: 2018-02-20\n\n---\n\n## 简介\n\nKafka is a distributed,partitioned,replicated commit logservice。它提供了类似于JMS的特性，但是在设计实现上完全不同，此外它并不是JMS规范的实现。kafka对消息保存时根据Topic进行归类，发送消息者成为Producer,消息接受者成为Consumer,此外kafka集群有多个kafka实例组成，每个实例(server)成为broker。无论是kafka集群，还是producer和consumer都依赖于zookeeper来保证系统可用性集群保存一些meta信息。\n\n![kafka-img](http://kafka.apache.org/images/kafka_diagram.png)\n\n## 使用场景\n\n## Kafka主要特点\n\n1. 同时为发布和订阅提供高吞吐量。据了解，Kafka每秒可以生产约25万消息（50 MB），每秒处理55万消息（110 MB）。\n2. 可进行持久化操作。将消息持久化到磁盘，因此可用于批量消费，例如ETL，以及实时应用程序。通过将数据持久化到硬盘以及replication防止数据丢失。\n3. 分布式系统，易于向外扩展。所有的producer、broker和consumer都会有多个，均为分布式的。无需停机即可扩展机器。\n4. 消息被处理的状态是在consumer端维护，而不是由server端维护。当失败时能自动平衡。\n5. 支持online和offline的场景。\n\n## SpringBoot 集成Kafka\n\n添加kafka starter依赖\n\n```xml\n        <dependency>\n            <groupId>cn.com.siss</groupId>\n            <artifactId>spring-boot-starter-kafka</artifactId>\n            <version>${starters.version}</version>\n        </dependency>\n```\n\n添加kafka配置文件\n\n```yaml\nspring:\n  profiles:\n    include:\n      - kafka\n```\n\n发送消息 注册`kafkaTemplate` `kafkaTemplate.send(\"message\", \"hello-world\")`\n\n```java\n    @Autowired\n    private KafkaTemplate kafkaTemplate;\n\n    @RequestMapping(value = \"/sendKafka\", method = RequestMethod.GET)\n    public Object sendKafka(){\n        System.out.println(\"sendKafka\");\n        ListenableFuture result = kafkaTemplate.send(\"message\", \"hello-world\");\n        return result;\n    }\n```\n\n消息接受者\n\n```java\n@Component\n@Slf4j\npublic class Hellokafka {\n\n    @KafkaListener(topics = {\"message\"})\n    public void getMessage(ConsumerRecord<?, ?> record) {\n        Optional<?> kafkaMessage = Optional.ofNullable(record.value());\n        if (kafkaMessage.isPresent()) {\n\n            Object message = kafkaMessage.get();\n\n            log.info(\"----------------- record =\" + record);\n            log.info(\"------------------ message =\" + message);\n        }\n    }\n}\n```\n\n效果如下\n\n```\nsendKafka\n2019-02-28 17:20:07.013  INFO 10477 --- [nio-8081-exec-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values:\n2019-02-28 17:20:07.020  INFO 10477 --- [nio-8081-exec-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values:\n2019-02-28 17:20:07.020  INFO 10477 --- [nio-8081-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version : 0.10.0.1\n2019-02-28 17:20:07.020  INFO 10477 --- [nio-8081-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId : a7a17cdec9eaa6c5\n2019-02-28 17:20:07.398  INFO 10477 --- [afka-listener-1] cn.com.siss.web.kafka.Hellokafka         : ----------------- record =ConsumerRecord(topic = message, partition = 0, offset = 85, CreateTime = 1551345607273, checksum = 3403921507, serialized key size = -1, serialized value size = 11, key = null, value = hello-world)\n2019-02-28 17:20:07.398  INFO 10477 --- [afka-listener-1] cn.com.siss.web.kafka.Hellokafka         : ------------------ message =hello-world\n2019-02-28 17:20:07.434  WARN 10477 --- [nio-8081-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Failed to write HTTP message: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: No serializer found for class org.apache.kafka.clients.producer.ProducerRecord and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS); nested exception is com.fasterxml.jackson.databind.JsonMappingException: No serializer found for class org.apache.kafka.clients.producer.ProducerRecord and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: org.springframework.kafka.support.SendResult[\"producerRecord\"])\n```","slug":"doc-dev/basics/kafka","published":1,"updated":"2021-03-09T14:24:10.265Z","_id":"ckm237zw500021mjr1ckacv17","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Kafka is a distributed,partitioned,replicated commit logservice。它提供了类似于JMS的特性，但是在设计实现上完全不同，此外它并不是JMS规范的实现。kafka对消息保存时根据Topic进行归类，发送消息者成为Producer,消息接受者成为Consumer,此外kafka集群有多个kafka实例组成，每个实例(server)成为broker。无论是kafka集群，还是producer和consumer都依赖于zookeeper来保证系统可用性集群保存一些meta信息。</p>\n<p><img src=\"http://kafka.apache.org/images/kafka_diagram.png\" alt=\"kafka-img\"></p>\n<h2 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h2><h2 id=\"Kafka主要特点\"><a href=\"#Kafka主要特点\" class=\"headerlink\" title=\"Kafka主要特点\"></a>Kafka主要特点</h2><ol>\n<li>同时为发布和订阅提供高吞吐量。据了解，Kafka每秒可以生产约25万消息（50 MB），每秒处理55万消息（110 MB）。</li>\n<li>可进行持久化操作。将消息持久化到磁盘，因此可用于批量消费，例如ETL，以及实时应用程序。通过将数据持久化到硬盘以及replication防止数据丢失。</li>\n<li>分布式系统，易于向外扩展。所有的producer、broker和consumer都会有多个，均为分布式的。无需停机即可扩展机器。</li>\n<li>消息被处理的状态是在consumer端维护，而不是由server端维护。当失败时能自动平衡。</li>\n<li>支持online和offline的场景。</li>\n</ol>\n<h2 id=\"SpringBoot-集成Kafka\"><a href=\"#SpringBoot-集成Kafka\" class=\"headerlink\" title=\"SpringBoot 集成Kafka\"></a>SpringBoot 集成Kafka</h2><p>添加kafka starter依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.com.siss<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-kafka<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;starters.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>添加kafka配置文件</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">profiles:</span></span><br><span class=\"line\">    <span class=\"attr\">include:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">kafka</span></span><br></pre></td></tr></table></figure>\n\n<p>发送消息 注册<code>kafkaTemplate</code> <code>kafkaTemplate.send(&quot;message&quot;, &quot;hello-world&quot;)</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> KafkaTemplate kafkaTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(value = &quot;/sendKafka&quot;, method = RequestMethod.GET)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">sendKafka</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;sendKafka&quot;</span>);</span><br><span class=\"line\">    ListenableFuture result = kafkaTemplate.send(<span class=\"string\">&quot;message&quot;</span>, <span class=\"string\">&quot;hello-world&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>消息接受者</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Hellokafka</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@KafkaListener(topics = &#123;&quot;message&quot;&#125;)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">getMessage</span><span class=\"params\">(ConsumerRecord&lt;?, ?&gt; record)</span> </span>&#123;</span><br><span class=\"line\">        Optional&lt;?&gt; kafkaMessage = Optional.ofNullable(record.value());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (kafkaMessage.isPresent()) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            Object message = kafkaMessage.get();</span><br><span class=\"line\"></span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;----------------- record =&quot;</span> + record);</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;------------------ message =&quot;</span> + message);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>效果如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sendKafka</span><br><span class=\"line\">2019-02-28 17:20:07.013  INFO 10477 --- [nio-8081-exec-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values:</span><br><span class=\"line\">2019-02-28 17:20:07.020  INFO 10477 --- [nio-8081-exec-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values:</span><br><span class=\"line\">2019-02-28 17:20:07.020  INFO 10477 --- [nio-8081-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version : 0.10.0.1</span><br><span class=\"line\">2019-02-28 17:20:07.020  INFO 10477 --- [nio-8081-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId : a7a17cdec9eaa6c5</span><br><span class=\"line\">2019-02-28 17:20:07.398  INFO 10477 --- [afka-listener-1] cn.com.siss.web.kafka.Hellokafka         : ----------------- record &#x3D;ConsumerRecord(topic &#x3D; message, partition &#x3D; 0, offset &#x3D; 85, CreateTime &#x3D; 1551345607273, checksum &#x3D; 3403921507, serialized key size &#x3D; -1, serialized value size &#x3D; 11, key &#x3D; null, value &#x3D; hello-world)</span><br><span class=\"line\">2019-02-28 17:20:07.398  INFO 10477 --- [afka-listener-1] cn.com.siss.web.kafka.Hellokafka         : ------------------ message &#x3D;hello-world</span><br><span class=\"line\">2019-02-28 17:20:07.434  WARN 10477 --- [nio-8081-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Failed to write HTTP message: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: No serializer found for class org.apache.kafka.clients.producer.ProducerRecord and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS); nested exception is com.fasterxml.jackson.databind.JsonMappingException: No serializer found for class org.apache.kafka.clients.producer.ProducerRecord and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: org.springframework.kafka.support.SendResult[&quot;producerRecord&quot;])</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Kafka is a distributed,partitioned,replicated commit logservice。它提供了类似于JMS的特性，但是在设计实现上完全不同，此外它并不是JMS规范的实现。kafka对消息保存时根据Topic进行归类，发送消息者成为Producer,消息接受者成为Consumer,此外kafka集群有多个kafka实例组成，每个实例(server)成为broker。无论是kafka集群，还是producer和consumer都依赖于zookeeper来保证系统可用性集群保存一些meta信息。</p>\n<p><img src=\"http://kafka.apache.org/images/kafka_diagram.png\" alt=\"kafka-img\"></p>\n<h2 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h2><h2 id=\"Kafka主要特点\"><a href=\"#Kafka主要特点\" class=\"headerlink\" title=\"Kafka主要特点\"></a>Kafka主要特点</h2><ol>\n<li>同时为发布和订阅提供高吞吐量。据了解，Kafka每秒可以生产约25万消息（50 MB），每秒处理55万消息（110 MB）。</li>\n<li>可进行持久化操作。将消息持久化到磁盘，因此可用于批量消费，例如ETL，以及实时应用程序。通过将数据持久化到硬盘以及replication防止数据丢失。</li>\n<li>分布式系统，易于向外扩展。所有的producer、broker和consumer都会有多个，均为分布式的。无需停机即可扩展机器。</li>\n<li>消息被处理的状态是在consumer端维护，而不是由server端维护。当失败时能自动平衡。</li>\n<li>支持online和offline的场景。</li>\n</ol>\n<h2 id=\"SpringBoot-集成Kafka\"><a href=\"#SpringBoot-集成Kafka\" class=\"headerlink\" title=\"SpringBoot 集成Kafka\"></a>SpringBoot 集成Kafka</h2><p>添加kafka starter依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.com.siss<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-kafka<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;starters.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>添加kafka配置文件</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">profiles:</span></span><br><span class=\"line\">    <span class=\"attr\">include:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">kafka</span></span><br></pre></td></tr></table></figure>\n\n<p>发送消息 注册<code>kafkaTemplate</code> <code>kafkaTemplate.send(&quot;message&quot;, &quot;hello-world&quot;)</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> KafkaTemplate kafkaTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(value = &quot;/sendKafka&quot;, method = RequestMethod.GET)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">sendKafka</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;sendKafka&quot;</span>);</span><br><span class=\"line\">    ListenableFuture result = kafkaTemplate.send(<span class=\"string\">&quot;message&quot;</span>, <span class=\"string\">&quot;hello-world&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>消息接受者</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Hellokafka</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@KafkaListener(topics = &#123;&quot;message&quot;&#125;)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">getMessage</span><span class=\"params\">(ConsumerRecord&lt;?, ?&gt; record)</span> </span>&#123;</span><br><span class=\"line\">        Optional&lt;?&gt; kafkaMessage = Optional.ofNullable(record.value());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (kafkaMessage.isPresent()) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            Object message = kafkaMessage.get();</span><br><span class=\"line\"></span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;----------------- record =&quot;</span> + record);</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;------------------ message =&quot;</span> + message);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>效果如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sendKafka</span><br><span class=\"line\">2019-02-28 17:20:07.013  INFO 10477 --- [nio-8081-exec-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values:</span><br><span class=\"line\">2019-02-28 17:20:07.020  INFO 10477 --- [nio-8081-exec-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values:</span><br><span class=\"line\">2019-02-28 17:20:07.020  INFO 10477 --- [nio-8081-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version : 0.10.0.1</span><br><span class=\"line\">2019-02-28 17:20:07.020  INFO 10477 --- [nio-8081-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId : a7a17cdec9eaa6c5</span><br><span class=\"line\">2019-02-28 17:20:07.398  INFO 10477 --- [afka-listener-1] cn.com.siss.web.kafka.Hellokafka         : ----------------- record &#x3D;ConsumerRecord(topic &#x3D; message, partition &#x3D; 0, offset &#x3D; 85, CreateTime &#x3D; 1551345607273, checksum &#x3D; 3403921507, serialized key size &#x3D; -1, serialized value size &#x3D; 11, key &#x3D; null, value &#x3D; hello-world)</span><br><span class=\"line\">2019-02-28 17:20:07.398  INFO 10477 --- [afka-listener-1] cn.com.siss.web.kafka.Hellokafka         : ------------------ message &#x3D;hello-world</span><br><span class=\"line\">2019-02-28 17:20:07.434  WARN 10477 --- [nio-8081-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Failed to write HTTP message: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: No serializer found for class org.apache.kafka.clients.producer.ProducerRecord and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS); nested exception is com.fasterxml.jackson.databind.JsonMappingException: No serializer found for class org.apache.kafka.clients.producer.ProducerRecord and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: org.springframework.kafka.support.SendResult[&quot;producerRecord&quot;])</span><br></pre></td></tr></table></figure>"},{"title":"面向测试驱动开发（TDD）","date":"2018-02-25T16:00:00.000Z","_content":"\n## 简介\n\n首先讲讲三个开发模式分别代表什么意思？\n\n* TDD：测试驱动开发（Test-Driven Development）\n测试驱动开发是敏捷开发中的一项核心实践和技术，也是一种设计方法论。TDD的原理是在开发功能代码之前，先编写单元测试用例代码，测试代码确定需要编写什么产品代码。TDD的基本思路就是通过测试来推动整个开发的进行，但测试驱动开发并不只是单纯的测试工作，而是把需求分析，设计，质量控制量化的过程。TDD首先考虑使用需求（对象、功能、过程、接口等），主要是编写测试用例框架对功能的过程和接口进行设计，而测试框架可以持续进行验证。\n\n* BDD：行为驱动开发（Behavior Driven Development）\n行为驱动开发是一种敏捷软件开发的技术，它鼓励软件项目中的开发者、QA和非技术人员或商业参与者之间的协作。主要是从用户的需求出发，强调系统行为。BDD最初是由Dan North在2003年命名，它包括验收测试和客户测试驱动等的极限编程的实践，作为对测试驱动开发的回应。\n\n* ATDD：验收测试驱动开发（Acceptance Test Driven Development）\n ATDD 只是开发人员的职责，通过单元测试用例来驱动功能代码的实现。在准备实施一个功能或特性之前，首先团队需要定义出期望的质量标准和验收细则，以明确而且达成共识的验收测试计划（包含一系列测试场景）来驱动开发人员的TDD实践和测试人员的测试脚本开发。面向开发人员，强调如何实现系统以及如何检验。\n\n使用BDD和ATDD可以解决需求和开发脱节的问题，首先他们都是从用户的需求出发，保证程序实现效果与用户需求一致。\n这个过程可以使用基于BDD的自动化测试工具Cucumber。\n\n## 如何集成Spring Boot使用 Mokito 来完成敏捷开发\n\n现在我使用一个我们常用的`mvc`框架，当我们操作调用`mapper`层来操作数据库的时候，是不是需要调用数据库，这样不是真正的mock测试 依赖过于复杂, 这个时候我们就要考虑使用`Mokito` 来mock一个方法。\n\nservice层\n\n```java\n@Service\npublic class PersonService {\n\n    @Autowired\n    private PersonDao personDao;\n\n    public boolean update(int id, String name) {\n        Person person = personDao.getPerson(id);\n        if (person == null) {\n            return false;\n        }\n        Person personUpdate = new Person();\n        personUpdate.setId(person.getId());\n        personUpdate.setName(name);\n        return personDao.update(personUpdate);\n    }\n\n    public boolean getData(int id) throws Exception {\n        Person person = personDao.getPerson(id);\n        if (person == null) {\n            new Exception(\"报错了！！！\");\n        }\n        return true;\n    }\n}\n\n```\n\ndao层\n\n```java\npublic interface PersonDao {\n    Person getPerson(int id);\n\n    boolean update(Person person);\n\n}\n```\n\n实体类Person\n\n```java\n@Data\npublic class Person {\n    private int id;\n    private String name;\n}\n```\n\n现在就是我们来测试我们的service层\n\n```java\n//这句表示该测试类运行的时候会先加载spring框架所需的相关类库并将所有有注解的类进行自动依赖注入。\n@RunWith(SpringRunner.class) \npublic class DemoTestApplicationTests {\n\n    /*在测试类中，我们需要在被测类对象声明的时候加上@InjectMocks，这个注解从名字\n    也很好理解，就是将所有的mock类注入到这个对象实例中，注意这里对APMInfoService的创建必须要通过new来初始\n    化，不能像@Autowired那样靠spring自动注入依赖类，因为这里APMInfoService内部依赖的类都是Mock的对象，必\n    须要显式创建类实例Mockito才能注入成功。这样你就会发现在下面测试方法调用的时候被测类就不会再是null了。\n    */\n\n  @InjectMocks\n  private PersonService personService = new PersonService();\n\n\n  @Mock\n  private PersonDao personDao;\n\n  @Before\n  public void beforeUpdate(){\n      Person person = new Person();\n      person.setId(1);\n      person.setName(\"chulei\");\n      when(personDao.getPerson(1)).thenReturn(person);\n      //when().thenThrow(Exception.class);\n      when(personDao.update(person)).thenReturn(true);\n  }\n\n  @Test\n  public void update() {\n     Boolean flag = personService.update(1, \"chulei\");\n      Assert.assertEquals(flag, true);\n      verify(personDao).getPerson(1);\n  }\n\n}\n```\n\n测试controller类\n\n```java\n\n@WebAppConfiguration\n@Transactional //支持数据回滚，避免测试数据污染环境\n@RunWith(SpringRunner.class)\n@SpringBootTest\npublic class DemoTestApplicationTests {\n  @Autowired\n  private WebApplicationContext wac;\n\n  private MockMvc mockMvc;\n\n    @Before\n    public void setup() {\n        mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();\n    }\n\n  @Test\n    public void sub() throws Exception {\n\n          String result = mockMvc.perform(\n                  get(\"/api/order\")\n                          .param(\"pageNum\", \"1\")\n                          .param(\"pageSize\", \"10\")\n                          .param(\"status\", \"1\")\n                          .contentType(MediaType.APPLICATION_JSON_UTF8))\n                  .andExpect(status().isOk())\n                  .andExpect(jsonPath(\"$.code\").value(10000))\n                  .andReturn().getResponse().getContentAsString();\n  }\n\n\n}  \n```","source":"_posts/doc-dev/basics/mock.md","raw":"---\ntitle: 面向测试驱动开发（TDD）\ndate: 2018-02-26\n\n---\n\n## 简介\n\n首先讲讲三个开发模式分别代表什么意思？\n\n* TDD：测试驱动开发（Test-Driven Development）\n测试驱动开发是敏捷开发中的一项核心实践和技术，也是一种设计方法论。TDD的原理是在开发功能代码之前，先编写单元测试用例代码，测试代码确定需要编写什么产品代码。TDD的基本思路就是通过测试来推动整个开发的进行，但测试驱动开发并不只是单纯的测试工作，而是把需求分析，设计，质量控制量化的过程。TDD首先考虑使用需求（对象、功能、过程、接口等），主要是编写测试用例框架对功能的过程和接口进行设计，而测试框架可以持续进行验证。\n\n* BDD：行为驱动开发（Behavior Driven Development）\n行为驱动开发是一种敏捷软件开发的技术，它鼓励软件项目中的开发者、QA和非技术人员或商业参与者之间的协作。主要是从用户的需求出发，强调系统行为。BDD最初是由Dan North在2003年命名，它包括验收测试和客户测试驱动等的极限编程的实践，作为对测试驱动开发的回应。\n\n* ATDD：验收测试驱动开发（Acceptance Test Driven Development）\n ATDD 只是开发人员的职责，通过单元测试用例来驱动功能代码的实现。在准备实施一个功能或特性之前，首先团队需要定义出期望的质量标准和验收细则，以明确而且达成共识的验收测试计划（包含一系列测试场景）来驱动开发人员的TDD实践和测试人员的测试脚本开发。面向开发人员，强调如何实现系统以及如何检验。\n\n使用BDD和ATDD可以解决需求和开发脱节的问题，首先他们都是从用户的需求出发，保证程序实现效果与用户需求一致。\n这个过程可以使用基于BDD的自动化测试工具Cucumber。\n\n## 如何集成Spring Boot使用 Mokito 来完成敏捷开发\n\n现在我使用一个我们常用的`mvc`框架，当我们操作调用`mapper`层来操作数据库的时候，是不是需要调用数据库，这样不是真正的mock测试 依赖过于复杂, 这个时候我们就要考虑使用`Mokito` 来mock一个方法。\n\nservice层\n\n```java\n@Service\npublic class PersonService {\n\n    @Autowired\n    private PersonDao personDao;\n\n    public boolean update(int id, String name) {\n        Person person = personDao.getPerson(id);\n        if (person == null) {\n            return false;\n        }\n        Person personUpdate = new Person();\n        personUpdate.setId(person.getId());\n        personUpdate.setName(name);\n        return personDao.update(personUpdate);\n    }\n\n    public boolean getData(int id) throws Exception {\n        Person person = personDao.getPerson(id);\n        if (person == null) {\n            new Exception(\"报错了！！！\");\n        }\n        return true;\n    }\n}\n\n```\n\ndao层\n\n```java\npublic interface PersonDao {\n    Person getPerson(int id);\n\n    boolean update(Person person);\n\n}\n```\n\n实体类Person\n\n```java\n@Data\npublic class Person {\n    private int id;\n    private String name;\n}\n```\n\n现在就是我们来测试我们的service层\n\n```java\n//这句表示该测试类运行的时候会先加载spring框架所需的相关类库并将所有有注解的类进行自动依赖注入。\n@RunWith(SpringRunner.class) \npublic class DemoTestApplicationTests {\n\n    /*在测试类中，我们需要在被测类对象声明的时候加上@InjectMocks，这个注解从名字\n    也很好理解，就是将所有的mock类注入到这个对象实例中，注意这里对APMInfoService的创建必须要通过new来初始\n    化，不能像@Autowired那样靠spring自动注入依赖类，因为这里APMInfoService内部依赖的类都是Mock的对象，必\n    须要显式创建类实例Mockito才能注入成功。这样你就会发现在下面测试方法调用的时候被测类就不会再是null了。\n    */\n\n  @InjectMocks\n  private PersonService personService = new PersonService();\n\n\n  @Mock\n  private PersonDao personDao;\n\n  @Before\n  public void beforeUpdate(){\n      Person person = new Person();\n      person.setId(1);\n      person.setName(\"chulei\");\n      when(personDao.getPerson(1)).thenReturn(person);\n      //when().thenThrow(Exception.class);\n      when(personDao.update(person)).thenReturn(true);\n  }\n\n  @Test\n  public void update() {\n     Boolean flag = personService.update(1, \"chulei\");\n      Assert.assertEquals(flag, true);\n      verify(personDao).getPerson(1);\n  }\n\n}\n```\n\n测试controller类\n\n```java\n\n@WebAppConfiguration\n@Transactional //支持数据回滚，避免测试数据污染环境\n@RunWith(SpringRunner.class)\n@SpringBootTest\npublic class DemoTestApplicationTests {\n  @Autowired\n  private WebApplicationContext wac;\n\n  private MockMvc mockMvc;\n\n    @Before\n    public void setup() {\n        mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();\n    }\n\n  @Test\n    public void sub() throws Exception {\n\n          String result = mockMvc.perform(\n                  get(\"/api/order\")\n                          .param(\"pageNum\", \"1\")\n                          .param(\"pageSize\", \"10\")\n                          .param(\"status\", \"1\")\n                          .contentType(MediaType.APPLICATION_JSON_UTF8))\n                  .andExpect(status().isOk())\n                  .andExpect(jsonPath(\"$.code\").value(10000))\n                  .andReturn().getResponse().getContentAsString();\n  }\n\n\n}  \n```","slug":"doc-dev/basics/mock","published":1,"updated":"2021-03-09T14:24:26.575Z","_id":"ckm237zw600031mjrfdfbh63i","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>首先讲讲三个开发模式分别代表什么意思？</p>\n<ul>\n<li><p>TDD：测试驱动开发（Test-Driven Development）<br>测试驱动开发是敏捷开发中的一项核心实践和技术，也是一种设计方法论。TDD的原理是在开发功能代码之前，先编写单元测试用例代码，测试代码确定需要编写什么产品代码。TDD的基本思路就是通过测试来推动整个开发的进行，但测试驱动开发并不只是单纯的测试工作，而是把需求分析，设计，质量控制量化的过程。TDD首先考虑使用需求（对象、功能、过程、接口等），主要是编写测试用例框架对功能的过程和接口进行设计，而测试框架可以持续进行验证。</p>\n</li>\n<li><p>BDD：行为驱动开发（Behavior Driven Development）<br>行为驱动开发是一种敏捷软件开发的技术，它鼓励软件项目中的开发者、QA和非技术人员或商业参与者之间的协作。主要是从用户的需求出发，强调系统行为。BDD最初是由Dan North在2003年命名，它包括验收测试和客户测试驱动等的极限编程的实践，作为对测试驱动开发的回应。</p>\n</li>\n<li><p>ATDD：验收测试驱动开发（Acceptance Test Driven Development）<br>ATDD 只是开发人员的职责，通过单元测试用例来驱动功能代码的实现。在准备实施一个功能或特性之前，首先团队需要定义出期望的质量标准和验收细则，以明确而且达成共识的验收测试计划（包含一系列测试场景）来驱动开发人员的TDD实践和测试人员的测试脚本开发。面向开发人员，强调如何实现系统以及如何检验。</p>\n</li>\n</ul>\n<p>使用BDD和ATDD可以解决需求和开发脱节的问题，首先他们都是从用户的需求出发，保证程序实现效果与用户需求一致。<br>这个过程可以使用基于BDD的自动化测试工具Cucumber。</p>\n<h2 id=\"如何集成Spring-Boot使用-Mokito-来完成敏捷开发\"><a href=\"#如何集成Spring-Boot使用-Mokito-来完成敏捷开发\" class=\"headerlink\" title=\"如何集成Spring Boot使用 Mokito 来完成敏捷开发\"></a>如何集成Spring Boot使用 Mokito 来完成敏捷开发</h2><p>现在我使用一个我们常用的<code>mvc</code>框架，当我们操作调用<code>mapper</code>层来操作数据库的时候，是不是需要调用数据库，这样不是真正的mock测试 依赖过于复杂, 这个时候我们就要考虑使用<code>Mokito</code> 来mock一个方法。</p>\n<p>service层</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PersonService</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> PersonDao personDao;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">update</span><span class=\"params\">(<span class=\"keyword\">int</span> id, String name)</span> </span>&#123;</span><br><span class=\"line\">        Person person = personDao.getPerson(id);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (person == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Person personUpdate = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\">        personUpdate.setId(person.getId());</span><br><span class=\"line\">        personUpdate.setName(name);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> personDao.update(personUpdate);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">getData</span><span class=\"params\">(<span class=\"keyword\">int</span> id)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        Person person = personDao.getPerson(id);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (person == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">new</span> Exception(<span class=\"string\">&quot;报错了！！！&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>dao层</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">PersonDao</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\">Person <span class=\"title\">getPerson</span><span class=\"params\">(<span class=\"keyword\">int</span> id)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">update</span><span class=\"params\">(Person person)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>实体类Person</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>现在就是我们来测试我们的service层</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//这句表示该测试类运行的时候会先加载spring框架所需的相关类库并将所有有注解的类进行自动依赖注入。</span></span><br><span class=\"line\"><span class=\"meta\">@RunWith(SpringRunner.class)</span> </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoTestApplicationTests</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*在测试类中，我们需要在被测类对象声明的时候加上@InjectMocks，这个注解从名字</span></span><br><span class=\"line\"><span class=\"comment\">    也很好理解，就是将所有的mock类注入到这个对象实例中，注意这里对APMInfoService的创建必须要通过new来初始</span></span><br><span class=\"line\"><span class=\"comment\">    化，不能像@Autowired那样靠spring自动注入依赖类，因为这里APMInfoService内部依赖的类都是Mock的对象，必</span></span><br><span class=\"line\"><span class=\"comment\">    须要显式创建类实例Mockito才能注入成功。这样你就会发现在下面测试方法调用的时候被测类就不会再是null了。</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@InjectMocks</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> PersonService personService = <span class=\"keyword\">new</span> PersonService();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Mock</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> PersonDao personDao;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Before</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">beforeUpdate</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">      Person person = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\">      person.setId(<span class=\"number\">1</span>);</span><br><span class=\"line\">      person.setName(<span class=\"string\">&quot;chulei&quot;</span>);</span><br><span class=\"line\">      when(personDao.getPerson(<span class=\"number\">1</span>)).thenReturn(person);</span><br><span class=\"line\">      <span class=\"comment\">//when().thenThrow(Exception.class);</span></span><br><span class=\"line\">      when(personDao.update(person)).thenReturn(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Test</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">     Boolean flag = personService.update(<span class=\"number\">1</span>, <span class=\"string\">&quot;chulei&quot;</span>);</span><br><span class=\"line\">      Assert.assertEquals(flag, <span class=\"keyword\">true</span>);</span><br><span class=\"line\">      verify(personDao).getPerson(<span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>测试controller类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@WebAppConfiguration</span></span><br><span class=\"line\"><span class=\"meta\">@Transactional</span> <span class=\"comment\">//支持数据回滚，避免测试数据污染环境</span></span><br><span class=\"line\"><span class=\"meta\">@RunWith(SpringRunner.class)</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootTest</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoTestApplicationTests</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> WebApplicationContext wac;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> MockMvc mockMvc;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Before</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setup</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sub</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          String result = mockMvc.perform(</span><br><span class=\"line\">                  get(<span class=\"string\">&quot;/api/order&quot;</span>)</span><br><span class=\"line\">                          .param(<span class=\"string\">&quot;pageNum&quot;</span>, <span class=\"string\">&quot;1&quot;</span>)</span><br><span class=\"line\">                          .param(<span class=\"string\">&quot;pageSize&quot;</span>, <span class=\"string\">&quot;10&quot;</span>)</span><br><span class=\"line\">                          .param(<span class=\"string\">&quot;status&quot;</span>, <span class=\"string\">&quot;1&quot;</span>)</span><br><span class=\"line\">                          .contentType(MediaType.APPLICATION_JSON_UTF8))</span><br><span class=\"line\">                  .andExpect(status().isOk())</span><br><span class=\"line\">                  .andExpect(jsonPath(<span class=\"string\">&quot;$.code&quot;</span>).value(<span class=\"number\">10000</span>))</span><br><span class=\"line\">                  .andReturn().getResponse().getContentAsString();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;  </span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>首先讲讲三个开发模式分别代表什么意思？</p>\n<ul>\n<li><p>TDD：测试驱动开发（Test-Driven Development）<br>测试驱动开发是敏捷开发中的一项核心实践和技术，也是一种设计方法论。TDD的原理是在开发功能代码之前，先编写单元测试用例代码，测试代码确定需要编写什么产品代码。TDD的基本思路就是通过测试来推动整个开发的进行，但测试驱动开发并不只是单纯的测试工作，而是把需求分析，设计，质量控制量化的过程。TDD首先考虑使用需求（对象、功能、过程、接口等），主要是编写测试用例框架对功能的过程和接口进行设计，而测试框架可以持续进行验证。</p>\n</li>\n<li><p>BDD：行为驱动开发（Behavior Driven Development）<br>行为驱动开发是一种敏捷软件开发的技术，它鼓励软件项目中的开发者、QA和非技术人员或商业参与者之间的协作。主要是从用户的需求出发，强调系统行为。BDD最初是由Dan North在2003年命名，它包括验收测试和客户测试驱动等的极限编程的实践，作为对测试驱动开发的回应。</p>\n</li>\n<li><p>ATDD：验收测试驱动开发（Acceptance Test Driven Development）<br>ATDD 只是开发人员的职责，通过单元测试用例来驱动功能代码的实现。在准备实施一个功能或特性之前，首先团队需要定义出期望的质量标准和验收细则，以明确而且达成共识的验收测试计划（包含一系列测试场景）来驱动开发人员的TDD实践和测试人员的测试脚本开发。面向开发人员，强调如何实现系统以及如何检验。</p>\n</li>\n</ul>\n<p>使用BDD和ATDD可以解决需求和开发脱节的问题，首先他们都是从用户的需求出发，保证程序实现效果与用户需求一致。<br>这个过程可以使用基于BDD的自动化测试工具Cucumber。</p>\n<h2 id=\"如何集成Spring-Boot使用-Mokito-来完成敏捷开发\"><a href=\"#如何集成Spring-Boot使用-Mokito-来完成敏捷开发\" class=\"headerlink\" title=\"如何集成Spring Boot使用 Mokito 来完成敏捷开发\"></a>如何集成Spring Boot使用 Mokito 来完成敏捷开发</h2><p>现在我使用一个我们常用的<code>mvc</code>框架，当我们操作调用<code>mapper</code>层来操作数据库的时候，是不是需要调用数据库，这样不是真正的mock测试 依赖过于复杂, 这个时候我们就要考虑使用<code>Mokito</code> 来mock一个方法。</p>\n<p>service层</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PersonService</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> PersonDao personDao;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">update</span><span class=\"params\">(<span class=\"keyword\">int</span> id, String name)</span> </span>&#123;</span><br><span class=\"line\">        Person person = personDao.getPerson(id);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (person == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Person personUpdate = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\">        personUpdate.setId(person.getId());</span><br><span class=\"line\">        personUpdate.setName(name);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> personDao.update(personUpdate);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">getData</span><span class=\"params\">(<span class=\"keyword\">int</span> id)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        Person person = personDao.getPerson(id);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (person == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">new</span> Exception(<span class=\"string\">&quot;报错了！！！&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>dao层</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">PersonDao</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\">Person <span class=\"title\">getPerson</span><span class=\"params\">(<span class=\"keyword\">int</span> id)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">update</span><span class=\"params\">(Person person)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>实体类Person</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>现在就是我们来测试我们的service层</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//这句表示该测试类运行的时候会先加载spring框架所需的相关类库并将所有有注解的类进行自动依赖注入。</span></span><br><span class=\"line\"><span class=\"meta\">@RunWith(SpringRunner.class)</span> </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoTestApplicationTests</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*在测试类中，我们需要在被测类对象声明的时候加上@InjectMocks，这个注解从名字</span></span><br><span class=\"line\"><span class=\"comment\">    也很好理解，就是将所有的mock类注入到这个对象实例中，注意这里对APMInfoService的创建必须要通过new来初始</span></span><br><span class=\"line\"><span class=\"comment\">    化，不能像@Autowired那样靠spring自动注入依赖类，因为这里APMInfoService内部依赖的类都是Mock的对象，必</span></span><br><span class=\"line\"><span class=\"comment\">    须要显式创建类实例Mockito才能注入成功。这样你就会发现在下面测试方法调用的时候被测类就不会再是null了。</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@InjectMocks</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> PersonService personService = <span class=\"keyword\">new</span> PersonService();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Mock</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> PersonDao personDao;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Before</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">beforeUpdate</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">      Person person = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\">      person.setId(<span class=\"number\">1</span>);</span><br><span class=\"line\">      person.setName(<span class=\"string\">&quot;chulei&quot;</span>);</span><br><span class=\"line\">      when(personDao.getPerson(<span class=\"number\">1</span>)).thenReturn(person);</span><br><span class=\"line\">      <span class=\"comment\">//when().thenThrow(Exception.class);</span></span><br><span class=\"line\">      when(personDao.update(person)).thenReturn(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Test</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">     Boolean flag = personService.update(<span class=\"number\">1</span>, <span class=\"string\">&quot;chulei&quot;</span>);</span><br><span class=\"line\">      Assert.assertEquals(flag, <span class=\"keyword\">true</span>);</span><br><span class=\"line\">      verify(personDao).getPerson(<span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>测试controller类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@WebAppConfiguration</span></span><br><span class=\"line\"><span class=\"meta\">@Transactional</span> <span class=\"comment\">//支持数据回滚，避免测试数据污染环境</span></span><br><span class=\"line\"><span class=\"meta\">@RunWith(SpringRunner.class)</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootTest</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoTestApplicationTests</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> WebApplicationContext wac;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> MockMvc mockMvc;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Before</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setup</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sub</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          String result = mockMvc.perform(</span><br><span class=\"line\">                  get(<span class=\"string\">&quot;/api/order&quot;</span>)</span><br><span class=\"line\">                          .param(<span class=\"string\">&quot;pageNum&quot;</span>, <span class=\"string\">&quot;1&quot;</span>)</span><br><span class=\"line\">                          .param(<span class=\"string\">&quot;pageSize&quot;</span>, <span class=\"string\">&quot;10&quot;</span>)</span><br><span class=\"line\">                          .param(<span class=\"string\">&quot;status&quot;</span>, <span class=\"string\">&quot;1&quot;</span>)</span><br><span class=\"line\">                          .contentType(MediaType.APPLICATION_JSON_UTF8))</span><br><span class=\"line\">                  .andExpect(status().isOk())</span><br><span class=\"line\">                  .andExpect(jsonPath(<span class=\"string\">&quot;$.code&quot;</span>).value(<span class=\"number\">10000</span>))</span><br><span class=\"line\">                  .andReturn().getResponse().getContentAsString();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;  </span><br></pre></td></tr></table></figure>"},{"title":"MongoDB的使用","date":"2018-02-25T16:00:00.000Z","_content":"\n![mongo](https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQa7f6h94s8xpLwtgV4EoP0CPF2bYz1SW2M5ABcrArTZl1pEbpQMw)\n\n## 简介\n\nMongoDB（来自于英文单词“Humongous”，中文含义为“庞大”）是可以应用于各种规模的企业、各个行业以及各类应用程序的开源数据库。作为一个适用于敏捷开发的数据库，MongoDB的数据模式可以随着应用程序的发展而灵活地更新。与此同时，它也为开发人员 提供了传统数据库的功能：二级索引，完整的查询系统以及严格一致性等等。 MongoDB能够使企业更加具有敏捷性和可扩展性，各种规模的企业都可以通过使用MongoDB来创建新的应用，提高与客户之间的工作效率，加快产品上市时间，以及降低企业成本。\n\nMongoDB是专为可扩展性，高性能和高可用性而设计的数据库。它可以从单服务器部署扩展到大型、复杂的多数据中心架构。利用内存计算的优势，MongoDB能够提供高性能的数据读写操作。 MongoDB的本地复制和自动故障转移功能使您的应用程序具有企业级的可靠性和操作灵活性。\n\n1、High performance - 对数据库高并发读写的需求web2.0 网站要根据用户个性化信息来实时生成动态页面和提供动态信息，所以基本上无法使用动态页面静态化技术，因此数据库并发负载非常高，往往要达到每秒上万次读写请求。\n\n　　关系型数据库应付上万次 SQL 查询还勉强顶得住，但是应付上万次 SQL 写数据请求，硬盘IO 就已经无法承受了，其实对于普通的 BBS 网站，往往也存在对高并发写请求的需求。\n\n2、Huge Storage - 对海量数据的高效率存储和访问的需求\n\n对于大型的 SNS 网站，每天用户产生海量的用户动态信息，以国外的 Friend feed 为例，一个月就达到了 2.5 亿条用户动态，对于关系数据库来说，在一张 2.5 亿条记录的表里面进行\nSQL 查询，效率是极其低下乃至不可忍受的。再例如大型 web 网站的用户登录系统，例如腾讯，盛大，动辄数以亿计的帐号，关系数据库也很难应付。\n\n3、High Scalability && High Availability - 对数据库的高可扩展性和高可用性的需求\n\n　　在基于 web 的架构当中，数据库是最难进行横向扩展的，当一个应用系统的用户量和访问量与日俱增的时候，你的数据库却没有办法像 web server 和 app server 那样简单的通过添加更多的硬件和服务节点来扩展性能和负载能力。对于很多需要提供 24 小时不间断服务的网站来说，对数据库系统进行升级和扩展是非常痛苦的事情，往往需要停机维护和数据迁移，可是停机维护随之带来的就是公司收入的减少。在上面提到的“三高”需求面前，关系数据库遇到了难以克服的障碍，而对于 web2.0 网站来说，关系数据库的很多主要特性却往往无用武之地，例如：\n\n1、数据库事务一致性需求 、数据库事务一致性需求\n\n很多 web 实时系统并不要求严格的数据库事务，对读一致性的要求很低，有些场合对写一致性要求也不高。因此数据库事务管理成了数据库高负载下一个沉重的负担。\n\n2、数据库的写实时性和读实时性需求 、数据库的写实时性和读实时性需求\n\n对关系数据库来说，插入一条数据之后立刻查询，是肯定可以读出来这条数据的，但是对于很多 web 应用来说，并不要求这么高的实时性。\n\n3、对复杂的SQL查询，特别是多表关联查询的需求 特别是多表关联查询的需求\n\n任何大数据量的 web 系统，都非常忌讳多个大表的关联查询，以及复杂的数据分析类型的复杂 SQL 报表查询，特别是 SNS 类型的网站，从需求以及产品设计角度，就避免了这种情\n况的产生。往往更多的只是单表的主键查询，以及单表的简单条件分页查询，SQL 的功能被极大的弱化了。\n\n## MongoDB的使用\n\n添加依赖\n\n```xml\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-data-mongodb</artifactId>\n\t\t</dependency>\n```\n\n注入添加依赖\n\n```yaml\nspring:\n  data:\n    mongodb:\n      uri: mongodb://siss:dev.5566@39.108.210.229:27017/demo\n\n      #mongodb://username:password@host:port/dbName\n```\n\n```java\n@Data\npublic class User {\n    private String id;\n    private String username;\n    private String password;\n    private String registerTime;\n    private String phone;\n    private String name;\n    private String sex;\n    private String age;\n}\n```\n\ndao层依赖\n\n```java\n@Component\npublic class UserDaoImpl {\n\n    @Autowired\n    private MongoTemplate mongoTemplate;\n\n    /**\n     * 创建对象\n     * @param user\n     */\n    public void saveUser(User user) {\n        mongoTemplate.save(user);\n    }\n\n    /**\n     * 根据用户名查询对象\n     * @param userName\n     * @return\n     */\n    public User findUserByUserName(String userName) {\n        Query query=new Query(Criteria.where(\"id\").is(userName));\n        User user =  mongoTemplate.findOne(query , User.class);\n        return user;\n    }\n\n    /**\n     * 更新对象\n     * @param user\n     */\n    public void updateUser(User user) {\n        Query query=new Query(Criteria.where(\"id\").is(user.getId()));\n        Update update= new Update().set(\"userName\", user.getName()).set(\"passWord\", user.getPassword());\n        //更新查询返回结果集的第一条\n        mongoTemplate.updateFirst(query,update,User.class);\n        //更新查询返回结果集的所有\n        // mongoTemplate.updateMulti(query,update,User.class);\n    }\n\n    /**\n     * 删除对象\n     * @param id\n     */\n    public void deleteUserById(Long id) {\n        Query query=new Query(Criteria.where(\"id\").is(id));\n        mongoTemplate.remove(query,User.class);\n    }\n}\n```\n\ncontroller调用\n\n```java\n@RestController\npublic class UserMongo {\n\n    @Autowired\n    private UserDaoImpl userDao;\n\n    @RequestMapping(value = \"mongo\", method = RequestMethod.GET)\n    public Object mongo() {\n\n        User user = new User();\n        user.setId(\"9\");\n        user.setAge(\"3\");\n        user.setName(\"demo\");\n        userDao.saveUser(user);\n        return null;\n    }\n\n    @RequestMapping(value = \"\", method = RequestMethod.GET)\n    public Object get() {\n        User user = userDao.findUserByUserName(\"1\");\n        return user;\n    }\n}\n\n```\n\n## 实现效果\n\n插入效果：\n\n![mongo-insert](img/mongo-insert.png)\n\n查询的结果\n\n![mongo-select](img/mongo-select.png)","source":"_posts/doc-dev/basics/mongo.md","raw":"---\ntitle: MongoDB的使用\ndate: 2018-02-26\n\n---\n\n![mongo](https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQa7f6h94s8xpLwtgV4EoP0CPF2bYz1SW2M5ABcrArTZl1pEbpQMw)\n\n## 简介\n\nMongoDB（来自于英文单词“Humongous”，中文含义为“庞大”）是可以应用于各种规模的企业、各个行业以及各类应用程序的开源数据库。作为一个适用于敏捷开发的数据库，MongoDB的数据模式可以随着应用程序的发展而灵活地更新。与此同时，它也为开发人员 提供了传统数据库的功能：二级索引，完整的查询系统以及严格一致性等等。 MongoDB能够使企业更加具有敏捷性和可扩展性，各种规模的企业都可以通过使用MongoDB来创建新的应用，提高与客户之间的工作效率，加快产品上市时间，以及降低企业成本。\n\nMongoDB是专为可扩展性，高性能和高可用性而设计的数据库。它可以从单服务器部署扩展到大型、复杂的多数据中心架构。利用内存计算的优势，MongoDB能够提供高性能的数据读写操作。 MongoDB的本地复制和自动故障转移功能使您的应用程序具有企业级的可靠性和操作灵活性。\n\n1、High performance - 对数据库高并发读写的需求web2.0 网站要根据用户个性化信息来实时生成动态页面和提供动态信息，所以基本上无法使用动态页面静态化技术，因此数据库并发负载非常高，往往要达到每秒上万次读写请求。\n\n　　关系型数据库应付上万次 SQL 查询还勉强顶得住，但是应付上万次 SQL 写数据请求，硬盘IO 就已经无法承受了，其实对于普通的 BBS 网站，往往也存在对高并发写请求的需求。\n\n2、Huge Storage - 对海量数据的高效率存储和访问的需求\n\n对于大型的 SNS 网站，每天用户产生海量的用户动态信息，以国外的 Friend feed 为例，一个月就达到了 2.5 亿条用户动态，对于关系数据库来说，在一张 2.5 亿条记录的表里面进行\nSQL 查询，效率是极其低下乃至不可忍受的。再例如大型 web 网站的用户登录系统，例如腾讯，盛大，动辄数以亿计的帐号，关系数据库也很难应付。\n\n3、High Scalability && High Availability - 对数据库的高可扩展性和高可用性的需求\n\n　　在基于 web 的架构当中，数据库是最难进行横向扩展的，当一个应用系统的用户量和访问量与日俱增的时候，你的数据库却没有办法像 web server 和 app server 那样简单的通过添加更多的硬件和服务节点来扩展性能和负载能力。对于很多需要提供 24 小时不间断服务的网站来说，对数据库系统进行升级和扩展是非常痛苦的事情，往往需要停机维护和数据迁移，可是停机维护随之带来的就是公司收入的减少。在上面提到的“三高”需求面前，关系数据库遇到了难以克服的障碍，而对于 web2.0 网站来说，关系数据库的很多主要特性却往往无用武之地，例如：\n\n1、数据库事务一致性需求 、数据库事务一致性需求\n\n很多 web 实时系统并不要求严格的数据库事务，对读一致性的要求很低，有些场合对写一致性要求也不高。因此数据库事务管理成了数据库高负载下一个沉重的负担。\n\n2、数据库的写实时性和读实时性需求 、数据库的写实时性和读实时性需求\n\n对关系数据库来说，插入一条数据之后立刻查询，是肯定可以读出来这条数据的，但是对于很多 web 应用来说，并不要求这么高的实时性。\n\n3、对复杂的SQL查询，特别是多表关联查询的需求 特别是多表关联查询的需求\n\n任何大数据量的 web 系统，都非常忌讳多个大表的关联查询，以及复杂的数据分析类型的复杂 SQL 报表查询，特别是 SNS 类型的网站，从需求以及产品设计角度，就避免了这种情\n况的产生。往往更多的只是单表的主键查询，以及单表的简单条件分页查询，SQL 的功能被极大的弱化了。\n\n## MongoDB的使用\n\n添加依赖\n\n```xml\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-data-mongodb</artifactId>\n\t\t</dependency>\n```\n\n注入添加依赖\n\n```yaml\nspring:\n  data:\n    mongodb:\n      uri: mongodb://siss:dev.5566@39.108.210.229:27017/demo\n\n      #mongodb://username:password@host:port/dbName\n```\n\n```java\n@Data\npublic class User {\n    private String id;\n    private String username;\n    private String password;\n    private String registerTime;\n    private String phone;\n    private String name;\n    private String sex;\n    private String age;\n}\n```\n\ndao层依赖\n\n```java\n@Component\npublic class UserDaoImpl {\n\n    @Autowired\n    private MongoTemplate mongoTemplate;\n\n    /**\n     * 创建对象\n     * @param user\n     */\n    public void saveUser(User user) {\n        mongoTemplate.save(user);\n    }\n\n    /**\n     * 根据用户名查询对象\n     * @param userName\n     * @return\n     */\n    public User findUserByUserName(String userName) {\n        Query query=new Query(Criteria.where(\"id\").is(userName));\n        User user =  mongoTemplate.findOne(query , User.class);\n        return user;\n    }\n\n    /**\n     * 更新对象\n     * @param user\n     */\n    public void updateUser(User user) {\n        Query query=new Query(Criteria.where(\"id\").is(user.getId()));\n        Update update= new Update().set(\"userName\", user.getName()).set(\"passWord\", user.getPassword());\n        //更新查询返回结果集的第一条\n        mongoTemplate.updateFirst(query,update,User.class);\n        //更新查询返回结果集的所有\n        // mongoTemplate.updateMulti(query,update,User.class);\n    }\n\n    /**\n     * 删除对象\n     * @param id\n     */\n    public void deleteUserById(Long id) {\n        Query query=new Query(Criteria.where(\"id\").is(id));\n        mongoTemplate.remove(query,User.class);\n    }\n}\n```\n\ncontroller调用\n\n```java\n@RestController\npublic class UserMongo {\n\n    @Autowired\n    private UserDaoImpl userDao;\n\n    @RequestMapping(value = \"mongo\", method = RequestMethod.GET)\n    public Object mongo() {\n\n        User user = new User();\n        user.setId(\"9\");\n        user.setAge(\"3\");\n        user.setName(\"demo\");\n        userDao.saveUser(user);\n        return null;\n    }\n\n    @RequestMapping(value = \"\", method = RequestMethod.GET)\n    public Object get() {\n        User user = userDao.findUserByUserName(\"1\");\n        return user;\n    }\n}\n\n```\n\n## 实现效果\n\n插入效果：\n\n![mongo-insert](img/mongo-insert.png)\n\n查询的结果\n\n![mongo-select](img/mongo-select.png)","slug":"doc-dev/basics/mongo","published":1,"updated":"2021-03-09T14:24:32.103Z","_id":"ckm237zw600041mjrh57u0ski","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQa7f6h94s8xpLwtgV4EoP0CPF2bYz1SW2M5ABcrArTZl1pEbpQMw\" alt=\"mongo\"></p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>MongoDB（来自于英文单词“Humongous”，中文含义为“庞大”）是可以应用于各种规模的企业、各个行业以及各类应用程序的开源数据库。作为一个适用于敏捷开发的数据库，MongoDB的数据模式可以随着应用程序的发展而灵活地更新。与此同时，它也为开发人员 提供了传统数据库的功能：二级索引，完整的查询系统以及严格一致性等等。 MongoDB能够使企业更加具有敏捷性和可扩展性，各种规模的企业都可以通过使用MongoDB来创建新的应用，提高与客户之间的工作效率，加快产品上市时间，以及降低企业成本。</p>\n<p>MongoDB是专为可扩展性，高性能和高可用性而设计的数据库。它可以从单服务器部署扩展到大型、复杂的多数据中心架构。利用内存计算的优势，MongoDB能够提供高性能的数据读写操作。 MongoDB的本地复制和自动故障转移功能使您的应用程序具有企业级的可靠性和操作灵活性。</p>\n<p>1、High performance - 对数据库高并发读写的需求web2.0 网站要根据用户个性化信息来实时生成动态页面和提供动态信息，所以基本上无法使用动态页面静态化技术，因此数据库并发负载非常高，往往要达到每秒上万次读写请求。</p>\n<p>　　关系型数据库应付上万次 SQL 查询还勉强顶得住，但是应付上万次 SQL 写数据请求，硬盘IO 就已经无法承受了，其实对于普通的 BBS 网站，往往也存在对高并发写请求的需求。</p>\n<p>2、Huge Storage - 对海量数据的高效率存储和访问的需求</p>\n<p>对于大型的 SNS 网站，每天用户产生海量的用户动态信息，以国外的 Friend feed 为例，一个月就达到了 2.5 亿条用户动态，对于关系数据库来说，在一张 2.5 亿条记录的表里面进行<br>SQL 查询，效率是极其低下乃至不可忍受的。再例如大型 web 网站的用户登录系统，例如腾讯，盛大，动辄数以亿计的帐号，关系数据库也很难应付。</p>\n<p>3、High Scalability &amp;&amp; High Availability - 对数据库的高可扩展性和高可用性的需求</p>\n<p>　　在基于 web 的架构当中，数据库是最难进行横向扩展的，当一个应用系统的用户量和访问量与日俱增的时候，你的数据库却没有办法像 web server 和 app server 那样简单的通过添加更多的硬件和服务节点来扩展性能和负载能力。对于很多需要提供 24 小时不间断服务的网站来说，对数据库系统进行升级和扩展是非常痛苦的事情，往往需要停机维护和数据迁移，可是停机维护随之带来的就是公司收入的减少。在上面提到的“三高”需求面前，关系数据库遇到了难以克服的障碍，而对于 web2.0 网站来说，关系数据库的很多主要特性却往往无用武之地，例如：</p>\n<p>1、数据库事务一致性需求 、数据库事务一致性需求</p>\n<p>很多 web 实时系统并不要求严格的数据库事务，对读一致性的要求很低，有些场合对写一致性要求也不高。因此数据库事务管理成了数据库高负载下一个沉重的负担。</p>\n<p>2、数据库的写实时性和读实时性需求 、数据库的写实时性和读实时性需求</p>\n<p>对关系数据库来说，插入一条数据之后立刻查询，是肯定可以读出来这条数据的，但是对于很多 web 应用来说，并不要求这么高的实时性。</p>\n<p>3、对复杂的SQL查询，特别是多表关联查询的需求 特别是多表关联查询的需求</p>\n<p>任何大数据量的 web 系统，都非常忌讳多个大表的关联查询，以及复杂的数据分析类型的复杂 SQL 报表查询，特别是 SNS 类型的网站，从需求以及产品设计角度，就避免了这种情<br>况的产生。往往更多的只是单表的主键查询，以及单表的简单条件分页查询，SQL 的功能被极大的弱化了。</p>\n<h2 id=\"MongoDB的使用\"><a href=\"#MongoDB的使用\" class=\"headerlink\" title=\"MongoDB的使用\"></a>MongoDB的使用</h2><p>添加依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-data-mongodb<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>注入添加依赖</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">data:</span></span><br><span class=\"line\">    <span class=\"attr\">mongodb:</span></span><br><span class=\"line\">      <span class=\"attr\">uri:</span> <span class=\"string\">mongodb://siss:dev.5566@39.108.210.229:27017/demo</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">#mongodb://username:password@host:port/dbName</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String registerTime;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String phone;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String sex;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String age;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>dao层依赖</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserDaoImpl</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> MongoTemplate mongoTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 创建对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> user</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">saveUser</span><span class=\"params\">(User user)</span> </span>&#123;</span><br><span class=\"line\">        mongoTemplate.save(user);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据用户名查询对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> userName</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> User <span class=\"title\">findUserByUserName</span><span class=\"params\">(String userName)</span> </span>&#123;</span><br><span class=\"line\">        Query query=<span class=\"keyword\">new</span> Query(Criteria.where(<span class=\"string\">&quot;id&quot;</span>).is(userName));</span><br><span class=\"line\">        User user =  mongoTemplate.findOne(query , User.class);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> user;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 更新对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> user</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateUser</span><span class=\"params\">(User user)</span> </span>&#123;</span><br><span class=\"line\">        Query query=<span class=\"keyword\">new</span> Query(Criteria.where(<span class=\"string\">&quot;id&quot;</span>).is(user.getId()));</span><br><span class=\"line\">        Update update= <span class=\"keyword\">new</span> Update().set(<span class=\"string\">&quot;userName&quot;</span>, user.getName()).set(<span class=\"string\">&quot;passWord&quot;</span>, user.getPassword());</span><br><span class=\"line\">        <span class=\"comment\">//更新查询返回结果集的第一条</span></span><br><span class=\"line\">        mongoTemplate.updateFirst(query,update,User.class);</span><br><span class=\"line\">        <span class=\"comment\">//更新查询返回结果集的所有</span></span><br><span class=\"line\">        <span class=\"comment\">// mongoTemplate.updateMulti(query,update,User.class);</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 删除对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">deleteUserById</span><span class=\"params\">(Long id)</span> </span>&#123;</span><br><span class=\"line\">        Query query=<span class=\"keyword\">new</span> Query(Criteria.where(<span class=\"string\">&quot;id&quot;</span>).is(id));</span><br><span class=\"line\">        mongoTemplate.remove(query,User.class);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>controller调用</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserMongo</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserDaoImpl userDao;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(value = &quot;mongo&quot;, method = RequestMethod.GET)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">mongo</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        User user = <span class=\"keyword\">new</span> User();</span><br><span class=\"line\">        user.setId(<span class=\"string\">&quot;9&quot;</span>);</span><br><span class=\"line\">        user.setAge(<span class=\"string\">&quot;3&quot;</span>);</span><br><span class=\"line\">        user.setName(<span class=\"string\">&quot;demo&quot;</span>);</span><br><span class=\"line\">        userDao.saveUser(user);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(value = &quot;&quot;, method = RequestMethod.GET)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">get</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        User user = userDao.findUserByUserName(<span class=\"string\">&quot;1&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> user;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"实现效果\"><a href=\"#实现效果\" class=\"headerlink\" title=\"实现效果\"></a>实现效果</h2><p>插入效果：</p>\n<p><img src=\"img/mongo-insert.png\" alt=\"mongo-insert\"></p>\n<p>查询的结果</p>\n<p><img src=\"img/mongo-select.png\" alt=\"mongo-select\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQa7f6h94s8xpLwtgV4EoP0CPF2bYz1SW2M5ABcrArTZl1pEbpQMw\" alt=\"mongo\"></p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>MongoDB（来自于英文单词“Humongous”，中文含义为“庞大”）是可以应用于各种规模的企业、各个行业以及各类应用程序的开源数据库。作为一个适用于敏捷开发的数据库，MongoDB的数据模式可以随着应用程序的发展而灵活地更新。与此同时，它也为开发人员 提供了传统数据库的功能：二级索引，完整的查询系统以及严格一致性等等。 MongoDB能够使企业更加具有敏捷性和可扩展性，各种规模的企业都可以通过使用MongoDB来创建新的应用，提高与客户之间的工作效率，加快产品上市时间，以及降低企业成本。</p>\n<p>MongoDB是专为可扩展性，高性能和高可用性而设计的数据库。它可以从单服务器部署扩展到大型、复杂的多数据中心架构。利用内存计算的优势，MongoDB能够提供高性能的数据读写操作。 MongoDB的本地复制和自动故障转移功能使您的应用程序具有企业级的可靠性和操作灵活性。</p>\n<p>1、High performance - 对数据库高并发读写的需求web2.0 网站要根据用户个性化信息来实时生成动态页面和提供动态信息，所以基本上无法使用动态页面静态化技术，因此数据库并发负载非常高，往往要达到每秒上万次读写请求。</p>\n<p>　　关系型数据库应付上万次 SQL 查询还勉强顶得住，但是应付上万次 SQL 写数据请求，硬盘IO 就已经无法承受了，其实对于普通的 BBS 网站，往往也存在对高并发写请求的需求。</p>\n<p>2、Huge Storage - 对海量数据的高效率存储和访问的需求</p>\n<p>对于大型的 SNS 网站，每天用户产生海量的用户动态信息，以国外的 Friend feed 为例，一个月就达到了 2.5 亿条用户动态，对于关系数据库来说，在一张 2.5 亿条记录的表里面进行<br>SQL 查询，效率是极其低下乃至不可忍受的。再例如大型 web 网站的用户登录系统，例如腾讯，盛大，动辄数以亿计的帐号，关系数据库也很难应付。</p>\n<p>3、High Scalability &amp;&amp; High Availability - 对数据库的高可扩展性和高可用性的需求</p>\n<p>　　在基于 web 的架构当中，数据库是最难进行横向扩展的，当一个应用系统的用户量和访问量与日俱增的时候，你的数据库却没有办法像 web server 和 app server 那样简单的通过添加更多的硬件和服务节点来扩展性能和负载能力。对于很多需要提供 24 小时不间断服务的网站来说，对数据库系统进行升级和扩展是非常痛苦的事情，往往需要停机维护和数据迁移，可是停机维护随之带来的就是公司收入的减少。在上面提到的“三高”需求面前，关系数据库遇到了难以克服的障碍，而对于 web2.0 网站来说，关系数据库的很多主要特性却往往无用武之地，例如：</p>\n<p>1、数据库事务一致性需求 、数据库事务一致性需求</p>\n<p>很多 web 实时系统并不要求严格的数据库事务，对读一致性的要求很低，有些场合对写一致性要求也不高。因此数据库事务管理成了数据库高负载下一个沉重的负担。</p>\n<p>2、数据库的写实时性和读实时性需求 、数据库的写实时性和读实时性需求</p>\n<p>对关系数据库来说，插入一条数据之后立刻查询，是肯定可以读出来这条数据的，但是对于很多 web 应用来说，并不要求这么高的实时性。</p>\n<p>3、对复杂的SQL查询，特别是多表关联查询的需求 特别是多表关联查询的需求</p>\n<p>任何大数据量的 web 系统，都非常忌讳多个大表的关联查询，以及复杂的数据分析类型的复杂 SQL 报表查询，特别是 SNS 类型的网站，从需求以及产品设计角度，就避免了这种情<br>况的产生。往往更多的只是单表的主键查询，以及单表的简单条件分页查询，SQL 的功能被极大的弱化了。</p>\n<h2 id=\"MongoDB的使用\"><a href=\"#MongoDB的使用\" class=\"headerlink\" title=\"MongoDB的使用\"></a>MongoDB的使用</h2><p>添加依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-data-mongodb<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>注入添加依赖</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">data:</span></span><br><span class=\"line\">    <span class=\"attr\">mongodb:</span></span><br><span class=\"line\">      <span class=\"attr\">uri:</span> <span class=\"string\">mongodb://siss:dev.5566@39.108.210.229:27017/demo</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">#mongodb://username:password@host:port/dbName</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String registerTime;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String phone;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String sex;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String age;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>dao层依赖</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserDaoImpl</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> MongoTemplate mongoTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 创建对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> user</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">saveUser</span><span class=\"params\">(User user)</span> </span>&#123;</span><br><span class=\"line\">        mongoTemplate.save(user);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据用户名查询对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> userName</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> User <span class=\"title\">findUserByUserName</span><span class=\"params\">(String userName)</span> </span>&#123;</span><br><span class=\"line\">        Query query=<span class=\"keyword\">new</span> Query(Criteria.where(<span class=\"string\">&quot;id&quot;</span>).is(userName));</span><br><span class=\"line\">        User user =  mongoTemplate.findOne(query , User.class);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> user;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 更新对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> user</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateUser</span><span class=\"params\">(User user)</span> </span>&#123;</span><br><span class=\"line\">        Query query=<span class=\"keyword\">new</span> Query(Criteria.where(<span class=\"string\">&quot;id&quot;</span>).is(user.getId()));</span><br><span class=\"line\">        Update update= <span class=\"keyword\">new</span> Update().set(<span class=\"string\">&quot;userName&quot;</span>, user.getName()).set(<span class=\"string\">&quot;passWord&quot;</span>, user.getPassword());</span><br><span class=\"line\">        <span class=\"comment\">//更新查询返回结果集的第一条</span></span><br><span class=\"line\">        mongoTemplate.updateFirst(query,update,User.class);</span><br><span class=\"line\">        <span class=\"comment\">//更新查询返回结果集的所有</span></span><br><span class=\"line\">        <span class=\"comment\">// mongoTemplate.updateMulti(query,update,User.class);</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 删除对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">deleteUserById</span><span class=\"params\">(Long id)</span> </span>&#123;</span><br><span class=\"line\">        Query query=<span class=\"keyword\">new</span> Query(Criteria.where(<span class=\"string\">&quot;id&quot;</span>).is(id));</span><br><span class=\"line\">        mongoTemplate.remove(query,User.class);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>controller调用</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserMongo</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserDaoImpl userDao;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(value = &quot;mongo&quot;, method = RequestMethod.GET)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">mongo</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        User user = <span class=\"keyword\">new</span> User();</span><br><span class=\"line\">        user.setId(<span class=\"string\">&quot;9&quot;</span>);</span><br><span class=\"line\">        user.setAge(<span class=\"string\">&quot;3&quot;</span>);</span><br><span class=\"line\">        user.setName(<span class=\"string\">&quot;demo&quot;</span>);</span><br><span class=\"line\">        userDao.saveUser(user);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(value = &quot;&quot;, method = RequestMethod.GET)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">get</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        User user = userDao.findUserByUserName(<span class=\"string\">&quot;1&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> user;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"实现效果\"><a href=\"#实现效果\" class=\"headerlink\" title=\"实现效果\"></a>实现效果</h2><p>插入效果：</p>\n<p><img src=\"img/mongo-insert.png\" alt=\"mongo-insert\"></p>\n<p>查询的结果</p>\n<p><img src=\"img/mongo-select.png\" alt=\"mongo-select\"></p>\n"},{"title":"结合Mybatis-Plus 使用读写分离","date":"2018-02-22T16:00:00.000Z","_content":"\n## 简介\n\nMybatis-Plus（简称MP）是一个 Mybatis 的增强工具，在 Mybatis 的基础上只做增强不做改变，为简化开发、提高效率而生。这是官方给的定义，关于mybatis-plus的更多介绍及特性，可以参考mybatis-plus官网。那么它是怎么增强的呢？其实就是它已经封装好了一些crud方法，我们不需要再写xml了，直接调用这些方法就行，就类似于JPA。\n\n## Mybatis-Plus的使用\n\n使用SpringBoot 集成Mybatis-Plus。\n\n首先添加Mybatis-Plus依赖\n\n```xml\n        <dependency>\n            <groupId>cn.com.siss</groupId>\n            <artifactId>spring-boot-starter-mybatis-plus</artifactId>\n            <version>${starters.version}</version>\n        </dependency>\n\n<!-- 有兴趣的也可以使用mybatis的自动生成代码工具 Mybatis Generator -->\n            <plugin>\n                <groupId>org.mybatis.generator</groupId>\n                <artifactId>mybatis-generator-maven-plugin</artifactId>\n                <version>1.3.5</version>\n                <configuration>\n                    <verbose>true</verbose>\n                    <overwrite>true</overwrite>\n                </configuration>\n            </plugin>\n\n\n        <resources>\n            <resource>\n                <directory>src/main/java</directory>\n                <includes>\n                    <include>**/*.xml</include>\n                </includes>\n            </resource>\n            <!--指定资源的位置-->\n            <resource>\n                <directory>src/main/resources</directory>\n            </resource>\n        </resources>\n```\n\n扫描实体类（entity）和 数据库（mapper）包路径\n\n```yaml\n\nspring:\n  profiles:\n    include:\n      - mybatisplus-rws\nmybatis:\n  typeAliasesPackage: \"cn.com.siss.web.entity\"\n  #checkConfig-location : false\n  mapper-locations: \"classpath:cn/com/siss/web/mapper/xml/*Mapper.xml\"\n\n```\n\n在启动类加注解`@MapperScan(\"cn.com.siss.web.mapper*\")` 扫描数据层。\n\n```java\n@SpringBootApplication\n@MapperScan(\"cn.com.siss.web.mapper*\")\npublic class DemoWebApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(DemoWebApplication.class, args);\n    }\n\n}\n```\n\n添加数据库连接信息（name , username, password），例如：\n\n```yaml\napp:\n  datasource:\n    name: demo #数据库名称\n    read:\n      host: mysql-ro-local # 读 数据库的 host 默认为： mysql-ro-${spring.active.profile}\n      port: 3306 # 读 数据库的 port 默认为： 3306\n    write:\n      host: mysql-local # 写 数据库的 host 默认为： mysql-${spring.active.profile}\n      port: 3307 # 写 数据库的 port 默认为： 3306\n    username: root\n    password: gUa7c4GulFZluORvMIEdC5Jm6P7UMs0VfCHErThG2AUz/DOvb/e0dHkcBGmtmzyURYQXTxxQngjR4+ccYc/J1Q==\n    druid:\n      public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJc1VMKK8to2/8IjwA/7QG8qASZl0PWGnZKgNruPAJxAmQQtEMvsFGu6uD3rTfCbFrD4CtNuNz0B3bX067oQZI0CAwEAAQ==\n```\n\n这里数据库密码需要加密，禁止使用明文密码：\n\n下载durid.jar包 [druid.jar](http://central.maven.org/maven2/com/alibaba/druid/1.1.9/druid-1.1.9.jar)\n下载成功后在当前目录执行\n\n```bash\njava -cp  druid-1.1.9.jar com.alibaba.druid.filter.config.ConfigTools yourpassword\n\nprivateKey:MIIBVQIBADANBgkqhkiG9w0BAQEFAASCAT8wggE7AgEAAkEAiVDuSXMyYybL6zxlGvOwAOuxTyWeOKCXWYv5+Kfwz2CE08+UczVi07GmMlUT5Z3RxpEuDKKqVYylAgpC7D8QwQIDAQABAkBRDwxLIYyKCVnxGCra+SVZtchqX1uCNBKEEuRSC9lUoNaAhSzUrS6uX9eqlGYaFB11iRUmO33PFX2tJe4ez3nRAiEA2ittzLPt9kbh8t3ZAysr5KUpG4m7Xclfij+pvMbrJU0CIQChIGg0CD2CUtdSwXMlv34VzVuWdNglNFZdSoWqJSiPRQIgL/hgmiPt7LrFL6uL7eBuNEYEdeOg6QxAD5vT7IgoZ/kCIQCBQ391ptq5z/4A3UOkmADuOsbsaKbzCg7zXxLm0lK8xQIhAL1hb6D4zkzDhMXBuWKXX1sf+yPXr5uqNOk7Qd1DyFzo\npublicKey:MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAIlQ7klzMmMmy+s8ZRrzsADrsU8lnjigl1mL+fin8M9ghNPPlHM1YtOxpjJVE+Wd0caRLgyiqlWMpQIKQuw/EMECAwEAAQ==\npassword:IAsFFJu/MU7b3yXUp+v3AiGzxRxp3C/C6W2CXUPyrfH8V52CloF/JAoV4gNvEWUunQkBFYDX6KwgF+7KYJopjg==\n```\n\n把上面的`publicKey`和`password`分别粘贴到application.yml中\n\nmapper.java\n\n```java\nimport cn.com.siss.web.entity.TbDemo;\n\npublic interface TbDemoMapper {\n    int insert(TbDemo record);\n\n    int insertSelective(TbDemo record);\n\n    TbDemo get(Integer id);\n}\n```\n\nmapper.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"cn.com.siss.web.mapper.TbDemoMapper\">\n  <resultMap id=\"BaseResultMap\" type=\"cn.com.siss.web.entity.TbDemo\">\n    <result column=\"id\" jdbcType=\"INTEGER\" property=\"id\" />\n    <result column=\"name\" jdbcType=\"VARCHAR\" property=\"name\" />\n  </resultMap>\n  <insert id=\"insert\" parameterType=\"cn.com.siss.web.entity.TbDemo\">\n    insert into tb_demo (id, name)\n    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR})\n  </insert>\n  <insert id=\"insertSelective\" parameterType=\"cn.com.siss.web.entity.TbDemo\">\n    insert into tb_demo\n    <trim prefix=\"(\" suffix=\")\" suffixOverrides=\",\">\n      <if test=\"id != null\">\n        id,\n      </if>\n      <if test=\"name != null\">\n        name,\n      </if>\n    </trim>\n    <trim prefix=\"values (\" suffix=\")\" suffixOverrides=\",\">\n      <if test=\"id != null\">\n        #{id,jdbcType=INTEGER},\n      </if>\n      <if test=\"name != null\">\n        #{name,jdbcType=VARCHAR},\n      </if>\n    </trim>\n  </insert>\n\n  <select id=\"get\" parameterType=\"integer\" resultType=\"cn.com.siss.web.entity.TbDemo\">\n    select * from tb_demo where id = #{id}\n  </select>\n</mapper>\n```\n\n测试用例\n\n```java\n    @Autowired\n    private TbDemoMapper tbDemoMapper;\n\n    @Test\n    public void get() {\n        TbDemo tbDemo = tbDemoMapper.get(1);\n        System.out.println(tbDemo.getName());\n    }\n\n    @Test\n    public void insert() {\n        TbDemo tbDemo = new TbDemo();\n        tbDemo.setId(1);\n        tbDemo.setName(\"aa\");\n        tbDemoMapper.insert(tbDemo);\n    }\n```","source":"_posts/doc-dev/basics/mybatis-plus.md","raw":"---\ntitle: 结合Mybatis-Plus 使用读写分离\ndate: 2018-02-23\n\n---\n\n## 简介\n\nMybatis-Plus（简称MP）是一个 Mybatis 的增强工具，在 Mybatis 的基础上只做增强不做改变，为简化开发、提高效率而生。这是官方给的定义，关于mybatis-plus的更多介绍及特性，可以参考mybatis-plus官网。那么它是怎么增强的呢？其实就是它已经封装好了一些crud方法，我们不需要再写xml了，直接调用这些方法就行，就类似于JPA。\n\n## Mybatis-Plus的使用\n\n使用SpringBoot 集成Mybatis-Plus。\n\n首先添加Mybatis-Plus依赖\n\n```xml\n        <dependency>\n            <groupId>cn.com.siss</groupId>\n            <artifactId>spring-boot-starter-mybatis-plus</artifactId>\n            <version>${starters.version}</version>\n        </dependency>\n\n<!-- 有兴趣的也可以使用mybatis的自动生成代码工具 Mybatis Generator -->\n            <plugin>\n                <groupId>org.mybatis.generator</groupId>\n                <artifactId>mybatis-generator-maven-plugin</artifactId>\n                <version>1.3.5</version>\n                <configuration>\n                    <verbose>true</verbose>\n                    <overwrite>true</overwrite>\n                </configuration>\n            </plugin>\n\n\n        <resources>\n            <resource>\n                <directory>src/main/java</directory>\n                <includes>\n                    <include>**/*.xml</include>\n                </includes>\n            </resource>\n            <!--指定资源的位置-->\n            <resource>\n                <directory>src/main/resources</directory>\n            </resource>\n        </resources>\n```\n\n扫描实体类（entity）和 数据库（mapper）包路径\n\n```yaml\n\nspring:\n  profiles:\n    include:\n      - mybatisplus-rws\nmybatis:\n  typeAliasesPackage: \"cn.com.siss.web.entity\"\n  #checkConfig-location : false\n  mapper-locations: \"classpath:cn/com/siss/web/mapper/xml/*Mapper.xml\"\n\n```\n\n在启动类加注解`@MapperScan(\"cn.com.siss.web.mapper*\")` 扫描数据层。\n\n```java\n@SpringBootApplication\n@MapperScan(\"cn.com.siss.web.mapper*\")\npublic class DemoWebApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(DemoWebApplication.class, args);\n    }\n\n}\n```\n\n添加数据库连接信息（name , username, password），例如：\n\n```yaml\napp:\n  datasource:\n    name: demo #数据库名称\n    read:\n      host: mysql-ro-local # 读 数据库的 host 默认为： mysql-ro-${spring.active.profile}\n      port: 3306 # 读 数据库的 port 默认为： 3306\n    write:\n      host: mysql-local # 写 数据库的 host 默认为： mysql-${spring.active.profile}\n      port: 3307 # 写 数据库的 port 默认为： 3306\n    username: root\n    password: gUa7c4GulFZluORvMIEdC5Jm6P7UMs0VfCHErThG2AUz/DOvb/e0dHkcBGmtmzyURYQXTxxQngjR4+ccYc/J1Q==\n    druid:\n      public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJc1VMKK8to2/8IjwA/7QG8qASZl0PWGnZKgNruPAJxAmQQtEMvsFGu6uD3rTfCbFrD4CtNuNz0B3bX067oQZI0CAwEAAQ==\n```\n\n这里数据库密码需要加密，禁止使用明文密码：\n\n下载durid.jar包 [druid.jar](http://central.maven.org/maven2/com/alibaba/druid/1.1.9/druid-1.1.9.jar)\n下载成功后在当前目录执行\n\n```bash\njava -cp  druid-1.1.9.jar com.alibaba.druid.filter.config.ConfigTools yourpassword\n\nprivateKey:MIIBVQIBADANBgkqhkiG9w0BAQEFAASCAT8wggE7AgEAAkEAiVDuSXMyYybL6zxlGvOwAOuxTyWeOKCXWYv5+Kfwz2CE08+UczVi07GmMlUT5Z3RxpEuDKKqVYylAgpC7D8QwQIDAQABAkBRDwxLIYyKCVnxGCra+SVZtchqX1uCNBKEEuRSC9lUoNaAhSzUrS6uX9eqlGYaFB11iRUmO33PFX2tJe4ez3nRAiEA2ittzLPt9kbh8t3ZAysr5KUpG4m7Xclfij+pvMbrJU0CIQChIGg0CD2CUtdSwXMlv34VzVuWdNglNFZdSoWqJSiPRQIgL/hgmiPt7LrFL6uL7eBuNEYEdeOg6QxAD5vT7IgoZ/kCIQCBQ391ptq5z/4A3UOkmADuOsbsaKbzCg7zXxLm0lK8xQIhAL1hb6D4zkzDhMXBuWKXX1sf+yPXr5uqNOk7Qd1DyFzo\npublicKey:MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAIlQ7klzMmMmy+s8ZRrzsADrsU8lnjigl1mL+fin8M9ghNPPlHM1YtOxpjJVE+Wd0caRLgyiqlWMpQIKQuw/EMECAwEAAQ==\npassword:IAsFFJu/MU7b3yXUp+v3AiGzxRxp3C/C6W2CXUPyrfH8V52CloF/JAoV4gNvEWUunQkBFYDX6KwgF+7KYJopjg==\n```\n\n把上面的`publicKey`和`password`分别粘贴到application.yml中\n\nmapper.java\n\n```java\nimport cn.com.siss.web.entity.TbDemo;\n\npublic interface TbDemoMapper {\n    int insert(TbDemo record);\n\n    int insertSelective(TbDemo record);\n\n    TbDemo get(Integer id);\n}\n```\n\nmapper.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"cn.com.siss.web.mapper.TbDemoMapper\">\n  <resultMap id=\"BaseResultMap\" type=\"cn.com.siss.web.entity.TbDemo\">\n    <result column=\"id\" jdbcType=\"INTEGER\" property=\"id\" />\n    <result column=\"name\" jdbcType=\"VARCHAR\" property=\"name\" />\n  </resultMap>\n  <insert id=\"insert\" parameterType=\"cn.com.siss.web.entity.TbDemo\">\n    insert into tb_demo (id, name)\n    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR})\n  </insert>\n  <insert id=\"insertSelective\" parameterType=\"cn.com.siss.web.entity.TbDemo\">\n    insert into tb_demo\n    <trim prefix=\"(\" suffix=\")\" suffixOverrides=\",\">\n      <if test=\"id != null\">\n        id,\n      </if>\n      <if test=\"name != null\">\n        name,\n      </if>\n    </trim>\n    <trim prefix=\"values (\" suffix=\")\" suffixOverrides=\",\">\n      <if test=\"id != null\">\n        #{id,jdbcType=INTEGER},\n      </if>\n      <if test=\"name != null\">\n        #{name,jdbcType=VARCHAR},\n      </if>\n    </trim>\n  </insert>\n\n  <select id=\"get\" parameterType=\"integer\" resultType=\"cn.com.siss.web.entity.TbDemo\">\n    select * from tb_demo where id = #{id}\n  </select>\n</mapper>\n```\n\n测试用例\n\n```java\n    @Autowired\n    private TbDemoMapper tbDemoMapper;\n\n    @Test\n    public void get() {\n        TbDemo tbDemo = tbDemoMapper.get(1);\n        System.out.println(tbDemo.getName());\n    }\n\n    @Test\n    public void insert() {\n        TbDemo tbDemo = new TbDemo();\n        tbDemo.setId(1);\n        tbDemo.setName(\"aa\");\n        tbDemoMapper.insert(tbDemo);\n    }\n```","slug":"doc-dev/basics/mybatis-plus","published":1,"updated":"2021-03-09T14:25:27.421Z","_id":"ckm237zw700061mjrcpstgvqz","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Mybatis-Plus（简称MP）是一个 Mybatis 的增强工具，在 Mybatis 的基础上只做增强不做改变，为简化开发、提高效率而生。这是官方给的定义，关于mybatis-plus的更多介绍及特性，可以参考mybatis-plus官网。那么它是怎么增强的呢？其实就是它已经封装好了一些crud方法，我们不需要再写xml了，直接调用这些方法就行，就类似于JPA。</p>\n<h2 id=\"Mybatis-Plus的使用\"><a href=\"#Mybatis-Plus的使用\" class=\"headerlink\" title=\"Mybatis-Plus的使用\"></a>Mybatis-Plus的使用</h2><p>使用SpringBoot 集成Mybatis-Plus。</p>\n<p>首先添加Mybatis-Plus依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.com.siss<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-mybatis-plus<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;starters.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 有兴趣的也可以使用mybatis的自动生成代码工具 Mybatis Generator --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis.generator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">verbose</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">verbose</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">overwrite</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">overwrite</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/java<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.xml<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--指定资源的位置--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/resources<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>扫描实体类（entity）和 数据库（mapper）包路径</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">profiles:</span></span><br><span class=\"line\">    <span class=\"attr\">include:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">mybatisplus-rws</span></span><br><span class=\"line\"><span class=\"attr\">mybatis:</span></span><br><span class=\"line\">  <span class=\"attr\">typeAliasesPackage:</span> <span class=\"string\">&quot;cn.com.siss.web.entity&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#checkConfig-location : false</span></span><br><span class=\"line\">  <span class=\"attr\">mapper-locations:</span> <span class=\"string\">&quot;classpath:cn/com/siss/web/mapper/xml/*Mapper.xml&quot;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>在启动类加注解<code>@MapperScan(&quot;cn.com.siss.web.mapper*&quot;)</code> 扫描数据层。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"meta\">@MapperScan(&quot;cn.com.siss.web.mapper*&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoWebApplication</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SpringApplication.run(DemoWebApplication.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>添加数据库连接信息（name , username, password），例如：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">app:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">demo</span> <span class=\"comment\">#数据库名称</span></span><br><span class=\"line\">    <span class=\"attr\">read:</span></span><br><span class=\"line\">      <span class=\"attr\">host:</span> <span class=\"string\">mysql-ro-local</span> <span class=\"comment\"># 读 数据库的 host 默认为： mysql-ro-$&#123;spring.active.profile&#125;</span></span><br><span class=\"line\">      <span class=\"attr\">port:</span> <span class=\"number\">3306</span> <span class=\"comment\"># 读 数据库的 port 默认为： 3306</span></span><br><span class=\"line\">    <span class=\"attr\">write:</span></span><br><span class=\"line\">      <span class=\"attr\">host:</span> <span class=\"string\">mysql-local</span> <span class=\"comment\"># 写 数据库的 host 默认为： mysql-$&#123;spring.active.profile&#125;</span></span><br><span class=\"line\">      <span class=\"attr\">port:</span> <span class=\"number\">3307</span> <span class=\"comment\"># 写 数据库的 port 默认为： 3306</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">root</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">gUa7c4GulFZluORvMIEdC5Jm6P7UMs0VfCHErThG2AUz/DOvb/e0dHkcBGmtmzyURYQXTxxQngjR4+ccYc/J1Q==</span></span><br><span class=\"line\">    <span class=\"attr\">druid:</span></span><br><span class=\"line\">      <span class=\"attr\">public-key:</span> <span class=\"string\">MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJc1VMKK8to2/8IjwA/7QG8qASZl0PWGnZKgNruPAJxAmQQtEMvsFGu6uD3rTfCbFrD4CtNuNz0B3bX067oQZI0CAwEAAQ==</span></span><br></pre></td></tr></table></figure>\n\n<p>这里数据库密码需要加密，禁止使用明文密码：</p>\n<p>下载durid.jar包 <a class=\"link\"   href=\"http://central.maven.org/maven2/com/alibaba/druid/1.1.9/druid-1.1.9.jar\" >druid.jar<i class=\"fas fa-external-link-alt\"></i></a><br>下载成功后在当前目录执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -cp  druid-1.1.9.jar com.alibaba.druid.filter.config.ConfigTools yourpassword</span><br><span class=\"line\"></span><br><span class=\"line\">privateKey:MIIBVQIBADANBgkqhkiG9w0BAQEFAASCAT8wggE7AgEAAkEAiVDuSXMyYybL6zxlGvOwAOuxTyWeOKCXWYv5+Kfwz2CE08+UczVi07GmMlUT5Z3RxpEuDKKqVYylAgpC7D8QwQIDAQABAkBRDwxLIYyKCVnxGCra+SVZtchqX1uCNBKEEuRSC9lUoNaAhSzUrS6uX9eqlGYaFB11iRUmO33PFX2tJe4ez3nRAiEA2ittzLPt9kbh8t3ZAysr5KUpG4m7Xclfij+pvMbrJU0CIQChIGg0CD2CUtdSwXMlv34VzVuWdNglNFZdSoWqJSiPRQIgL/hgmiPt7LrFL6uL7eBuNEYEdeOg6QxAD5vT7IgoZ/kCIQCBQ391ptq5z/4A3UOkmADuOsbsaKbzCg7zXxLm0lK8xQIhAL1hb6D4zkzDhMXBuWKXX1sf+yPXr5uqNOk7Qd1DyFzo</span><br><span class=\"line\">publicKey:MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAIlQ7klzMmMmy+s8ZRrzsADrsU8lnjigl1mL+fin8M9ghNPPlHM1YtOxpjJVE+Wd0caRLgyiqlWMpQIKQuw/EMECAwEAAQ==</span><br><span class=\"line\">password:IAsFFJu/MU7b3yXUp+v3AiGzxRxp3C/C6W2CXUPyrfH8V52CloF/JAoV4gNvEWUunQkBFYDX6KwgF+7KYJopjg==</span><br></pre></td></tr></table></figure>\n\n<p>把上面的<code>publicKey</code>和<code>password</code>分别粘贴到application.yml中</p>\n<p>mapper.java</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> cn.com.siss.web.entity.TbDemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">TbDemoMapper</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">insert</span><span class=\"params\">(TbDemo record)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">insertSelective</span><span class=\"params\">(TbDemo record)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">TbDemo <span class=\"title\">get</span><span class=\"params\">(Integer id)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>mapper.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">mapper</span> <span class=\"meta-keyword\">PUBLIC</span> <span class=\"meta-string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class=\"meta-string\">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;cn.com.siss.web.mapper.TbDemoMapper&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;BaseResultMap&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;cn.com.siss.web.entity.TbDemo&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">&quot;INTEGER&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;id&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">&quot;VARCHAR&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;name&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;insert&quot;</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">&quot;cn.com.siss.web.entity.TbDemo&quot;</span>&gt;</span></span><br><span class=\"line\">    insert into tb_demo (id, name)</span><br><span class=\"line\">    values (#&#123;id,jdbcType=INTEGER&#125;, #&#123;name,jdbcType=VARCHAR&#125;)</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;insertSelective&quot;</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">&quot;cn.com.siss.web.entity.TbDemo&quot;</span>&gt;</span></span><br><span class=\"line\">    insert into tb_demo</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">trim</span> <span class=\"attr\">prefix</span>=<span class=\"string\">&quot;(&quot;</span> <span class=\"attr\">suffix</span>=<span class=\"string\">&quot;)&quot;</span> <span class=\"attr\">suffixOverrides</span>=<span class=\"string\">&quot;,&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;id != null&quot;</span>&gt;</span></span><br><span class=\"line\">        id,</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;name != null&quot;</span>&gt;</span></span><br><span class=\"line\">        name,</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">trim</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">trim</span> <span class=\"attr\">prefix</span>=<span class=\"string\">&quot;values (&quot;</span> <span class=\"attr\">suffix</span>=<span class=\"string\">&quot;)&quot;</span> <span class=\"attr\">suffixOverrides</span>=<span class=\"string\">&quot;,&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;id != null&quot;</span>&gt;</span></span><br><span class=\"line\">        #&#123;id,jdbcType=INTEGER&#125;,</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;name != null&quot;</span>&gt;</span></span><br><span class=\"line\">        #&#123;name,jdbcType=VARCHAR&#125;,</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">trim</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;get&quot;</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">&quot;integer&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;cn.com.siss.web.entity.TbDemo&quot;</span>&gt;</span></span><br><span class=\"line\">    select * from tb_demo where id = #&#123;id&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>测试用例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> TbDemoMapper tbDemoMapper;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">get</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    TbDemo tbDemo = tbDemoMapper.get(<span class=\"number\">1</span>);</span><br><span class=\"line\">    System.out.println(tbDemo.getName());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insert</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    TbDemo tbDemo = <span class=\"keyword\">new</span> TbDemo();</span><br><span class=\"line\">    tbDemo.setId(<span class=\"number\">1</span>);</span><br><span class=\"line\">    tbDemo.setName(<span class=\"string\">&quot;aa&quot;</span>);</span><br><span class=\"line\">    tbDemoMapper.insert(tbDemo);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Mybatis-Plus（简称MP）是一个 Mybatis 的增强工具，在 Mybatis 的基础上只做增强不做改变，为简化开发、提高效率而生。这是官方给的定义，关于mybatis-plus的更多介绍及特性，可以参考mybatis-plus官网。那么它是怎么增强的呢？其实就是它已经封装好了一些crud方法，我们不需要再写xml了，直接调用这些方法就行，就类似于JPA。</p>\n<h2 id=\"Mybatis-Plus的使用\"><a href=\"#Mybatis-Plus的使用\" class=\"headerlink\" title=\"Mybatis-Plus的使用\"></a>Mybatis-Plus的使用</h2><p>使用SpringBoot 集成Mybatis-Plus。</p>\n<p>首先添加Mybatis-Plus依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.com.siss<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-mybatis-plus<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;starters.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 有兴趣的也可以使用mybatis的自动生成代码工具 Mybatis Generator --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis.generator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">verbose</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">verbose</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">overwrite</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">overwrite</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/java<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.xml<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--指定资源的位置--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/resources<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>扫描实体类（entity）和 数据库（mapper）包路径</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">profiles:</span></span><br><span class=\"line\">    <span class=\"attr\">include:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">mybatisplus-rws</span></span><br><span class=\"line\"><span class=\"attr\">mybatis:</span></span><br><span class=\"line\">  <span class=\"attr\">typeAliasesPackage:</span> <span class=\"string\">&quot;cn.com.siss.web.entity&quot;</span></span><br><span class=\"line\">  <span class=\"comment\">#checkConfig-location : false</span></span><br><span class=\"line\">  <span class=\"attr\">mapper-locations:</span> <span class=\"string\">&quot;classpath:cn/com/siss/web/mapper/xml/*Mapper.xml&quot;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>在启动类加注解<code>@MapperScan(&quot;cn.com.siss.web.mapper*&quot;)</code> 扫描数据层。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"meta\">@MapperScan(&quot;cn.com.siss.web.mapper*&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoWebApplication</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SpringApplication.run(DemoWebApplication.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>添加数据库连接信息（name , username, password），例如：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">app:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">demo</span> <span class=\"comment\">#数据库名称</span></span><br><span class=\"line\">    <span class=\"attr\">read:</span></span><br><span class=\"line\">      <span class=\"attr\">host:</span> <span class=\"string\">mysql-ro-local</span> <span class=\"comment\"># 读 数据库的 host 默认为： mysql-ro-$&#123;spring.active.profile&#125;</span></span><br><span class=\"line\">      <span class=\"attr\">port:</span> <span class=\"number\">3306</span> <span class=\"comment\"># 读 数据库的 port 默认为： 3306</span></span><br><span class=\"line\">    <span class=\"attr\">write:</span></span><br><span class=\"line\">      <span class=\"attr\">host:</span> <span class=\"string\">mysql-local</span> <span class=\"comment\"># 写 数据库的 host 默认为： mysql-$&#123;spring.active.profile&#125;</span></span><br><span class=\"line\">      <span class=\"attr\">port:</span> <span class=\"number\">3307</span> <span class=\"comment\"># 写 数据库的 port 默认为： 3306</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">root</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">gUa7c4GulFZluORvMIEdC5Jm6P7UMs0VfCHErThG2AUz/DOvb/e0dHkcBGmtmzyURYQXTxxQngjR4+ccYc/J1Q==</span></span><br><span class=\"line\">    <span class=\"attr\">druid:</span></span><br><span class=\"line\">      <span class=\"attr\">public-key:</span> <span class=\"string\">MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJc1VMKK8to2/8IjwA/7QG8qASZl0PWGnZKgNruPAJxAmQQtEMvsFGu6uD3rTfCbFrD4CtNuNz0B3bX067oQZI0CAwEAAQ==</span></span><br></pre></td></tr></table></figure>\n\n<p>这里数据库密码需要加密，禁止使用明文密码：</p>\n<p>下载durid.jar包 <a class=\"link\"   href=\"http://central.maven.org/maven2/com/alibaba/druid/1.1.9/druid-1.1.9.jar\" >druid.jar<i class=\"fas fa-external-link-alt\"></i></a><br>下载成功后在当前目录执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -cp  druid-1.1.9.jar com.alibaba.druid.filter.config.ConfigTools yourpassword</span><br><span class=\"line\"></span><br><span class=\"line\">privateKey:MIIBVQIBADANBgkqhkiG9w0BAQEFAASCAT8wggE7AgEAAkEAiVDuSXMyYybL6zxlGvOwAOuxTyWeOKCXWYv5+Kfwz2CE08+UczVi07GmMlUT5Z3RxpEuDKKqVYylAgpC7D8QwQIDAQABAkBRDwxLIYyKCVnxGCra+SVZtchqX1uCNBKEEuRSC9lUoNaAhSzUrS6uX9eqlGYaFB11iRUmO33PFX2tJe4ez3nRAiEA2ittzLPt9kbh8t3ZAysr5KUpG4m7Xclfij+pvMbrJU0CIQChIGg0CD2CUtdSwXMlv34VzVuWdNglNFZdSoWqJSiPRQIgL/hgmiPt7LrFL6uL7eBuNEYEdeOg6QxAD5vT7IgoZ/kCIQCBQ391ptq5z/4A3UOkmADuOsbsaKbzCg7zXxLm0lK8xQIhAL1hb6D4zkzDhMXBuWKXX1sf+yPXr5uqNOk7Qd1DyFzo</span><br><span class=\"line\">publicKey:MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAIlQ7klzMmMmy+s8ZRrzsADrsU8lnjigl1mL+fin8M9ghNPPlHM1YtOxpjJVE+Wd0caRLgyiqlWMpQIKQuw/EMECAwEAAQ==</span><br><span class=\"line\">password:IAsFFJu/MU7b3yXUp+v3AiGzxRxp3C/C6W2CXUPyrfH8V52CloF/JAoV4gNvEWUunQkBFYDX6KwgF+7KYJopjg==</span><br></pre></td></tr></table></figure>\n\n<p>把上面的<code>publicKey</code>和<code>password</code>分别粘贴到application.yml中</p>\n<p>mapper.java</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> cn.com.siss.web.entity.TbDemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">TbDemoMapper</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">insert</span><span class=\"params\">(TbDemo record)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">insertSelective</span><span class=\"params\">(TbDemo record)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">TbDemo <span class=\"title\">get</span><span class=\"params\">(Integer id)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>mapper.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">mapper</span> <span class=\"meta-keyword\">PUBLIC</span> <span class=\"meta-string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class=\"meta-string\">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;cn.com.siss.web.mapper.TbDemoMapper&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;BaseResultMap&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;cn.com.siss.web.entity.TbDemo&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">&quot;INTEGER&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;id&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">&quot;VARCHAR&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;name&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;insert&quot;</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">&quot;cn.com.siss.web.entity.TbDemo&quot;</span>&gt;</span></span><br><span class=\"line\">    insert into tb_demo (id, name)</span><br><span class=\"line\">    values (#&#123;id,jdbcType=INTEGER&#125;, #&#123;name,jdbcType=VARCHAR&#125;)</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;insertSelective&quot;</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">&quot;cn.com.siss.web.entity.TbDemo&quot;</span>&gt;</span></span><br><span class=\"line\">    insert into tb_demo</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">trim</span> <span class=\"attr\">prefix</span>=<span class=\"string\">&quot;(&quot;</span> <span class=\"attr\">suffix</span>=<span class=\"string\">&quot;)&quot;</span> <span class=\"attr\">suffixOverrides</span>=<span class=\"string\">&quot;,&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;id != null&quot;</span>&gt;</span></span><br><span class=\"line\">        id,</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;name != null&quot;</span>&gt;</span></span><br><span class=\"line\">        name,</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">trim</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">trim</span> <span class=\"attr\">prefix</span>=<span class=\"string\">&quot;values (&quot;</span> <span class=\"attr\">suffix</span>=<span class=\"string\">&quot;)&quot;</span> <span class=\"attr\">suffixOverrides</span>=<span class=\"string\">&quot;,&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;id != null&quot;</span>&gt;</span></span><br><span class=\"line\">        #&#123;id,jdbcType=INTEGER&#125;,</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;name != null&quot;</span>&gt;</span></span><br><span class=\"line\">        #&#123;name,jdbcType=VARCHAR&#125;,</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">trim</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;get&quot;</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">&quot;integer&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;cn.com.siss.web.entity.TbDemo&quot;</span>&gt;</span></span><br><span class=\"line\">    select * from tb_demo where id = #&#123;id&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>测试用例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> TbDemoMapper tbDemoMapper;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">get</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    TbDemo tbDemo = tbDemoMapper.get(<span class=\"number\">1</span>);</span><br><span class=\"line\">    System.out.println(tbDemo.getName());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insert</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    TbDemo tbDemo = <span class=\"keyword\">new</span> TbDemo();</span><br><span class=\"line\">    tbDemo.setId(<span class=\"number\">1</span>);</span><br><span class=\"line\">    tbDemo.setName(<span class=\"string\">&quot;aa&quot;</span>);</span><br><span class=\"line\">    tbDemoMapper.insert(tbDemo);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"使用 Spring Boot集成 RabbitMq","date":"2018-02-25T16:00:00.000Z","_content":"\n## 简介\n\n AMQP，即Advanced Message Queuing Protocol，高级消息队列协议，是应用层协议的一个开放标准，为面向消息的中间件设计。消息中间件主要用于组件之间的解耦，消息的发送者无需知道消息使用者的存在，反之亦然。 AMQP的主要特征是面向消息、队列、路由（包括点对点和发布/订阅）、可靠性、安全。 RabbitMQ是一个开源的AMQP实现，服务器端用Erlang语言编写，支持多种客户端，如：Python、Ruby、.NET、Java、JMS、C、PHP、ActionScript、XMPP、STOMP等，支持AJAX。用于在分布式系统中存储转发消息，在易用性、扩展性、高可用性等方面表现不俗。 下面将重点介绍RabbitMQ中的一些基础概念，了解了这些概念，是使用好RabbitMQ的基础。\n\n![rabbitmq](http://www.rabbitmq.com/img/RabbitMQ-logo.svg)\n\n## 使用场景\n\n### 场景说明：用户注册后，需要发注册邮件和注册短信,传统的做法有两种\n\n* 串行的方式\n\n串行方式:将注册信息写入数据库后,发送注册邮件,再发送注册短信,以上三个任务全部完成后才返回给客户端。 这有一个问题是,邮件,短信并不是必须的,它只是一个通知,而这种做法让客户端等待没有必要等待的东西.\n\n* 并行的方式\n\n并行方式:将注册信息写入数据库后,发送邮件的同时,发送短信,以上三个任务完成后,返回给客户端,并行的方式能提高处理的时间。\n\n假设三个业务节点分别使用50ms,串行方式使用时间150ms,并行使用时间100ms。虽然并性已经提高的处理时间,但是,前面说过,邮件和短信对我正常的使用网站没有任何影响，客户端没有必要等着其发送完成才显示注册成功,英爱是写入数据库后就返回.\n\n### 应用解耦\n\n场景：双11是购物狂节,用户下单后,订单系统需要通知库存系统,传统的做法就是订单系统调用库存系统的接口.\n\n这种做法有一个缺点:\n\n当库存系统出现故障时,订单就会失败。(这样马云将少赚好多好多钱^ ^)\n订单系统和库存系统高耦合.\n引入消息队列\n\n订单系统:用户下单后,订单系统完成持久化处理,将消息写入消息队列,返回用户订单下单成功。\n\n库存系统:订阅下单的消息,获取下单消息,进行库操作。 \n就算库存系统出现故障,消息队列也能保证消息的可靠投递,不会导致消息丢失(马云这下高兴了).\n\n### 流量削峰\n\n流量削峰一般在秒杀活动中应用广泛 \n场景:秒杀活动，一般会因为流量过大，导致应用挂掉,为了解决这个问题，一般在应用前端加入消息队列。\n作用:\n\n1. 可以控制活动人数，超过此一定阀值的订单直接丢弃(我为什么秒杀一次都没有成功过呢^^)\n2. 可以缓解短时间的高流量压垮应用(应用程序按自己的最大处理能力获取订单)\n\n3. 用户的请求,服务器收到之后,首先写入消息队列,加入消息队列长度超过最大值,则直接抛弃用户请求或跳转到错误页面.\n4. 秒杀业务根据消息队列中的请求信息，再做后续处理.\n\n## SpringBoot 集成RabbitMq\n\n添加依赖`pom.xml`\n\n```xml\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-amqp</artifactId>\n        </dependency>\n```\n\n添加数据库连接`application.yml`\n\n```yaml\nspring:\n  rabbitmq:\n    host: youhostname\n    port: 5672\n    username: test\n    password: dev.5566\n    virtual-host: /\n    publisher-returns: true\n    template:\n      mandatory: true\n```\n\n添加`topic` `config`持久化该队列\n\n```java\n@Configuration\npublic class RabbitConfig {\n    //声明队列\n    @Bean\n    public Queue queue1() {\n        return new Queue(\"hello.queue1\", true); // true表示持久化该队列\n    }\n\n    @Bean\n    public Queue queue2() {\n        return new Queue(\"hello.queue2\", true);\n    }\n\n    //声明交互器\n    @Bean\n    TopicExchange topicExchange() {\n        return new TopicExchange(\"topicExchange\");\n    }\n\n    //绑定\n    @Bean\n    public Binding binding1() {\n        return BindingBuilder.bind(queue1()).to(topicExchange()).with(\"key.1\");\n    }\n\n    @Bean\n    public Binding binding2() {\n        return BindingBuilder.bind(queue2()).to(topicExchange()).with(\"key.#\");\n    }\n}\n\n```\n\n发送消息message\n\n```java\n@Component\npublic class Sender implements ConfirmCallback, ReturnCallback {\n\n    @Autowired\n    private RabbitTemplate rabbitTemplate;\n\n    @PostConstruct\n    public void init() {\n        rabbitTemplate.setConfirmCallback(this);\n        rabbitTemplate.setReturnCallback(this);\n    }\n\n    @Override\n    public void confirm(CorrelationData correlationData, boolean b, String s) {\n        if (b) {\n            System.out.println(\"消息发送成功:\" + correlationData);\n        } else {\n            System.out.println(\"消息发送失败:\" + s);\n        }\n    }\n\n    @Override\n    public void returnedMessage(Message message, int i, String s, String s1, String s2) {\n\n    }\n\n    public void send(String msg){\n\n        CorrelationData correlationId = new CorrelationData(UUID.randomUUID().toString());\n\n        System.out.println(\"开始发送消息 : \" + msg.toLowerCase());\n        String response = rabbitTemplate.convertSendAndReceive(\"topicExchange\", \"key.1\", msg, correlationId).toString();\n        System.out.println(\"结束发送消息 : \" + msg.toLowerCase());\n        System.out.println(\"消费者响应 : \" + response + \" 消息处理完成\");\n    }\n}\n\n```\n\n消息接受方\n\n```java\n@Component\npublic class Receiver {\n\n    @RabbitListener(queues = \"hello.queue1\")\n    public String processMessage1(String msg) {\n        System.out.println(Thread.currentThread().getName() + \" 接收到来自hello.queue1队列的消息：\" + msg);\n        return msg.toUpperCase();\n    }\n\n}\n\n```\n\ncontroller类\n\n```java\n@RestController\npublic class RabbitMqController {\n\n    @Autowired\n    private Sender sender;\n\n    @RequestMapping(value = \"/rabbit\", method = RequestMethod.GET)\n    public void rabbit() {\n        sender.send(\"ss\");\n    }\n\n}\n\n```\n\n## 测试结果\n\n```\n开始发送消息 : ss\nSimpleAsyncTaskExecutor-1 接收到来自hello.queue1队列的消息：ss\n结束发送消息 : ss\n消费者响应 : SS 消息处理完成\n```","source":"_posts/doc-dev/basics/rabiit.md","raw":"---\ntitle: 使用 Spring Boot集成 RabbitMq\ndate: 2018-02-26\n\n---\n\n## 简介\n\n AMQP，即Advanced Message Queuing Protocol，高级消息队列协议，是应用层协议的一个开放标准，为面向消息的中间件设计。消息中间件主要用于组件之间的解耦，消息的发送者无需知道消息使用者的存在，反之亦然。 AMQP的主要特征是面向消息、队列、路由（包括点对点和发布/订阅）、可靠性、安全。 RabbitMQ是一个开源的AMQP实现，服务器端用Erlang语言编写，支持多种客户端，如：Python、Ruby、.NET、Java、JMS、C、PHP、ActionScript、XMPP、STOMP等，支持AJAX。用于在分布式系统中存储转发消息，在易用性、扩展性、高可用性等方面表现不俗。 下面将重点介绍RabbitMQ中的一些基础概念，了解了这些概念，是使用好RabbitMQ的基础。\n\n![rabbitmq](http://www.rabbitmq.com/img/RabbitMQ-logo.svg)\n\n## 使用场景\n\n### 场景说明：用户注册后，需要发注册邮件和注册短信,传统的做法有两种\n\n* 串行的方式\n\n串行方式:将注册信息写入数据库后,发送注册邮件,再发送注册短信,以上三个任务全部完成后才返回给客户端。 这有一个问题是,邮件,短信并不是必须的,它只是一个通知,而这种做法让客户端等待没有必要等待的东西.\n\n* 并行的方式\n\n并行方式:将注册信息写入数据库后,发送邮件的同时,发送短信,以上三个任务完成后,返回给客户端,并行的方式能提高处理的时间。\n\n假设三个业务节点分别使用50ms,串行方式使用时间150ms,并行使用时间100ms。虽然并性已经提高的处理时间,但是,前面说过,邮件和短信对我正常的使用网站没有任何影响，客户端没有必要等着其发送完成才显示注册成功,英爱是写入数据库后就返回.\n\n### 应用解耦\n\n场景：双11是购物狂节,用户下单后,订单系统需要通知库存系统,传统的做法就是订单系统调用库存系统的接口.\n\n这种做法有一个缺点:\n\n当库存系统出现故障时,订单就会失败。(这样马云将少赚好多好多钱^ ^)\n订单系统和库存系统高耦合.\n引入消息队列\n\n订单系统:用户下单后,订单系统完成持久化处理,将消息写入消息队列,返回用户订单下单成功。\n\n库存系统:订阅下单的消息,获取下单消息,进行库操作。 \n就算库存系统出现故障,消息队列也能保证消息的可靠投递,不会导致消息丢失(马云这下高兴了).\n\n### 流量削峰\n\n流量削峰一般在秒杀活动中应用广泛 \n场景:秒杀活动，一般会因为流量过大，导致应用挂掉,为了解决这个问题，一般在应用前端加入消息队列。\n作用:\n\n1. 可以控制活动人数，超过此一定阀值的订单直接丢弃(我为什么秒杀一次都没有成功过呢^^)\n2. 可以缓解短时间的高流量压垮应用(应用程序按自己的最大处理能力获取订单)\n\n3. 用户的请求,服务器收到之后,首先写入消息队列,加入消息队列长度超过最大值,则直接抛弃用户请求或跳转到错误页面.\n4. 秒杀业务根据消息队列中的请求信息，再做后续处理.\n\n## SpringBoot 集成RabbitMq\n\n添加依赖`pom.xml`\n\n```xml\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-amqp</artifactId>\n        </dependency>\n```\n\n添加数据库连接`application.yml`\n\n```yaml\nspring:\n  rabbitmq:\n    host: youhostname\n    port: 5672\n    username: test\n    password: dev.5566\n    virtual-host: /\n    publisher-returns: true\n    template:\n      mandatory: true\n```\n\n添加`topic` `config`持久化该队列\n\n```java\n@Configuration\npublic class RabbitConfig {\n    //声明队列\n    @Bean\n    public Queue queue1() {\n        return new Queue(\"hello.queue1\", true); // true表示持久化该队列\n    }\n\n    @Bean\n    public Queue queue2() {\n        return new Queue(\"hello.queue2\", true);\n    }\n\n    //声明交互器\n    @Bean\n    TopicExchange topicExchange() {\n        return new TopicExchange(\"topicExchange\");\n    }\n\n    //绑定\n    @Bean\n    public Binding binding1() {\n        return BindingBuilder.bind(queue1()).to(topicExchange()).with(\"key.1\");\n    }\n\n    @Bean\n    public Binding binding2() {\n        return BindingBuilder.bind(queue2()).to(topicExchange()).with(\"key.#\");\n    }\n}\n\n```\n\n发送消息message\n\n```java\n@Component\npublic class Sender implements ConfirmCallback, ReturnCallback {\n\n    @Autowired\n    private RabbitTemplate rabbitTemplate;\n\n    @PostConstruct\n    public void init() {\n        rabbitTemplate.setConfirmCallback(this);\n        rabbitTemplate.setReturnCallback(this);\n    }\n\n    @Override\n    public void confirm(CorrelationData correlationData, boolean b, String s) {\n        if (b) {\n            System.out.println(\"消息发送成功:\" + correlationData);\n        } else {\n            System.out.println(\"消息发送失败:\" + s);\n        }\n    }\n\n    @Override\n    public void returnedMessage(Message message, int i, String s, String s1, String s2) {\n\n    }\n\n    public void send(String msg){\n\n        CorrelationData correlationId = new CorrelationData(UUID.randomUUID().toString());\n\n        System.out.println(\"开始发送消息 : \" + msg.toLowerCase());\n        String response = rabbitTemplate.convertSendAndReceive(\"topicExchange\", \"key.1\", msg, correlationId).toString();\n        System.out.println(\"结束发送消息 : \" + msg.toLowerCase());\n        System.out.println(\"消费者响应 : \" + response + \" 消息处理完成\");\n    }\n}\n\n```\n\n消息接受方\n\n```java\n@Component\npublic class Receiver {\n\n    @RabbitListener(queues = \"hello.queue1\")\n    public String processMessage1(String msg) {\n        System.out.println(Thread.currentThread().getName() + \" 接收到来自hello.queue1队列的消息：\" + msg);\n        return msg.toUpperCase();\n    }\n\n}\n\n```\n\ncontroller类\n\n```java\n@RestController\npublic class RabbitMqController {\n\n    @Autowired\n    private Sender sender;\n\n    @RequestMapping(value = \"/rabbit\", method = RequestMethod.GET)\n    public void rabbit() {\n        sender.send(\"ss\");\n    }\n\n}\n\n```\n\n## 测试结果\n\n```\n开始发送消息 : ss\nSimpleAsyncTaskExecutor-1 接收到来自hello.queue1队列的消息：ss\n结束发送消息 : ss\n消费者响应 : SS 消息处理完成\n```","slug":"doc-dev/basics/rabiit","published":1,"updated":"2021-03-09T14:24:39.751Z","_id":"ckm237zw800071mjrbwco0ymd","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p> AMQP，即Advanced Message Queuing Protocol，高级消息队列协议，是应用层协议的一个开放标准，为面向消息的中间件设计。消息中间件主要用于组件之间的解耦，消息的发送者无需知道消息使用者的存在，反之亦然。 AMQP的主要特征是面向消息、队列、路由（包括点对点和发布/订阅）、可靠性、安全。 RabbitMQ是一个开源的AMQP实现，服务器端用Erlang语言编写，支持多种客户端，如：Python、Ruby、.NET、Java、JMS、C、PHP、ActionScript、XMPP、STOMP等，支持AJAX。用于在分布式系统中存储转发消息，在易用性、扩展性、高可用性等方面表现不俗。 下面将重点介绍RabbitMQ中的一些基础概念，了解了这些概念，是使用好RabbitMQ的基础。</p>\n<p><img src=\"http://www.rabbitmq.com/img/RabbitMQ-logo.svg\" alt=\"rabbitmq\"></p>\n<h2 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h2><h3 id=\"场景说明：用户注册后，需要发注册邮件和注册短信-传统的做法有两种\"><a href=\"#场景说明：用户注册后，需要发注册邮件和注册短信-传统的做法有两种\" class=\"headerlink\" title=\"场景说明：用户注册后，需要发注册邮件和注册短信,传统的做法有两种\"></a>场景说明：用户注册后，需要发注册邮件和注册短信,传统的做法有两种</h3><ul>\n<li>串行的方式</li>\n</ul>\n<p>串行方式:将注册信息写入数据库后,发送注册邮件,再发送注册短信,以上三个任务全部完成后才返回给客户端。 这有一个问题是,邮件,短信并不是必须的,它只是一个通知,而这种做法让客户端等待没有必要等待的东西.</p>\n<ul>\n<li>并行的方式</li>\n</ul>\n<p>并行方式:将注册信息写入数据库后,发送邮件的同时,发送短信,以上三个任务完成后,返回给客户端,并行的方式能提高处理的时间。</p>\n<p>假设三个业务节点分别使用50ms,串行方式使用时间150ms,并行使用时间100ms。虽然并性已经提高的处理时间,但是,前面说过,邮件和短信对我正常的使用网站没有任何影响，客户端没有必要等着其发送完成才显示注册成功,英爱是写入数据库后就返回.</p>\n<h3 id=\"应用解耦\"><a href=\"#应用解耦\" class=\"headerlink\" title=\"应用解耦\"></a>应用解耦</h3><p>场景：双11是购物狂节,用户下单后,订单系统需要通知库存系统,传统的做法就是订单系统调用库存系统的接口.</p>\n<p>这种做法有一个缺点:</p>\n<p>当库存系统出现故障时,订单就会失败。(这样马云将少赚好多好多钱^ ^)<br>订单系统和库存系统高耦合.<br>引入消息队列</p>\n<p>订单系统:用户下单后,订单系统完成持久化处理,将消息写入消息队列,返回用户订单下单成功。</p>\n<p>库存系统:订阅下单的消息,获取下单消息,进行库操作。<br>就算库存系统出现故障,消息队列也能保证消息的可靠投递,不会导致消息丢失(马云这下高兴了).</p>\n<h3 id=\"流量削峰\"><a href=\"#流量削峰\" class=\"headerlink\" title=\"流量削峰\"></a>流量削峰</h3><p>流量削峰一般在秒杀活动中应用广泛<br>场景:秒杀活动，一般会因为流量过大，导致应用挂掉,为了解决这个问题，一般在应用前端加入消息队列。<br>作用:</p>\n<ol>\n<li><p>可以控制活动人数，超过此一定阀值的订单直接丢弃(我为什么秒杀一次都没有成功过呢^^)</p>\n</li>\n<li><p>可以缓解短时间的高流量压垮应用(应用程序按自己的最大处理能力获取订单)</p>\n</li>\n<li><p>用户的请求,服务器收到之后,首先写入消息队列,加入消息队列长度超过最大值,则直接抛弃用户请求或跳转到错误页面.</p>\n</li>\n<li><p>秒杀业务根据消息队列中的请求信息，再做后续处理.</p>\n</li>\n</ol>\n<h2 id=\"SpringBoot-集成RabbitMq\"><a href=\"#SpringBoot-集成RabbitMq\" class=\"headerlink\" title=\"SpringBoot 集成RabbitMq\"></a>SpringBoot 集成RabbitMq</h2><p>添加依赖<code>pom.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>添加数据库连接<code>application.yml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">rabbitmq:</span></span><br><span class=\"line\">    <span class=\"attr\">host:</span> <span class=\"string\">youhostname</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span> <span class=\"number\">5672</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">test</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">dev.5566</span></span><br><span class=\"line\">    <span class=\"attr\">virtual-host:</span> <span class=\"string\">/</span></span><br><span class=\"line\">    <span class=\"attr\">publisher-returns:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">template:</span></span><br><span class=\"line\">      <span class=\"attr\">mandatory:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>添加<code>topic</code> <code>config</code>持久化该队列</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RabbitConfig</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//声明队列</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Queue <span class=\"title\">queue1</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Queue(<span class=\"string\">&quot;hello.queue1&quot;</span>, <span class=\"keyword\">true</span>); <span class=\"comment\">// true表示持久化该队列</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Queue <span class=\"title\">queue2</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Queue(<span class=\"string\">&quot;hello.queue2&quot;</span>, <span class=\"keyword\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//声明交互器</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\">TopicExchange <span class=\"title\">topicExchange</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> TopicExchange(<span class=\"string\">&quot;topicExchange&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//绑定</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Binding <span class=\"title\">binding1</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> BindingBuilder.bind(queue1()).to(topicExchange()).with(<span class=\"string\">&quot;key.1&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Binding <span class=\"title\">binding2</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> BindingBuilder.bind(queue2()).to(topicExchange()).with(<span class=\"string\">&quot;key.#&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>发送消息message</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Sender</span> <span class=\"keyword\">implements</span> <span class=\"title\">ConfirmCallback</span>, <span class=\"title\">ReturnCallback</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RabbitTemplate rabbitTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostConstruct</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        rabbitTemplate.setConfirmCallback(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        rabbitTemplate.setReturnCallback(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">confirm</span><span class=\"params\">(CorrelationData correlationData, <span class=\"keyword\">boolean</span> b, String s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (b) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;消息发送成功:&quot;</span> + correlationData);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;消息发送失败:&quot;</span> + s);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">returnedMessage</span><span class=\"params\">(Message message, <span class=\"keyword\">int</span> i, String s, String s1, String s2)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">send</span><span class=\"params\">(String msg)</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        CorrelationData correlationId = <span class=\"keyword\">new</span> CorrelationData(UUID.randomUUID().toString());</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;开始发送消息 : &quot;</span> + msg.toLowerCase());</span><br><span class=\"line\">        String response = rabbitTemplate.convertSendAndReceive(<span class=\"string\">&quot;topicExchange&quot;</span>, <span class=\"string\">&quot;key.1&quot;</span>, msg, correlationId).toString();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;结束发送消息 : &quot;</span> + msg.toLowerCase());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;消费者响应 : &quot;</span> + response + <span class=\"string\">&quot; 消息处理完成&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>消息接受方</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Receiver</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RabbitListener(queues = &quot;hello.queue1&quot;)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">processMessage1</span><span class=\"params\">(String msg)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot; 接收到来自hello.queue1队列的消息：&quot;</span> + msg);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> msg.toUpperCase();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>controller类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RabbitMqController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Sender sender;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(value = &quot;/rabbit&quot;, method = RequestMethod.GET)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">rabbit</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        sender.send(<span class=\"string\">&quot;ss&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"测试结果\"><a href=\"#测试结果\" class=\"headerlink\" title=\"测试结果\"></a>测试结果</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">开始发送消息 : ss</span><br><span class=\"line\">SimpleAsyncTaskExecutor-1 接收到来自hello.queue1队列的消息：ss</span><br><span class=\"line\">结束发送消息 : ss</span><br><span class=\"line\">消费者响应 : SS 消息处理完成</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p> AMQP，即Advanced Message Queuing Protocol，高级消息队列协议，是应用层协议的一个开放标准，为面向消息的中间件设计。消息中间件主要用于组件之间的解耦，消息的发送者无需知道消息使用者的存在，反之亦然。 AMQP的主要特征是面向消息、队列、路由（包括点对点和发布/订阅）、可靠性、安全。 RabbitMQ是一个开源的AMQP实现，服务器端用Erlang语言编写，支持多种客户端，如：Python、Ruby、.NET、Java、JMS、C、PHP、ActionScript、XMPP、STOMP等，支持AJAX。用于在分布式系统中存储转发消息，在易用性、扩展性、高可用性等方面表现不俗。 下面将重点介绍RabbitMQ中的一些基础概念，了解了这些概念，是使用好RabbitMQ的基础。</p>\n<p><img src=\"http://www.rabbitmq.com/img/RabbitMQ-logo.svg\" alt=\"rabbitmq\"></p>\n<h2 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h2><h3 id=\"场景说明：用户注册后，需要发注册邮件和注册短信-传统的做法有两种\"><a href=\"#场景说明：用户注册后，需要发注册邮件和注册短信-传统的做法有两种\" class=\"headerlink\" title=\"场景说明：用户注册后，需要发注册邮件和注册短信,传统的做法有两种\"></a>场景说明：用户注册后，需要发注册邮件和注册短信,传统的做法有两种</h3><ul>\n<li>串行的方式</li>\n</ul>\n<p>串行方式:将注册信息写入数据库后,发送注册邮件,再发送注册短信,以上三个任务全部完成后才返回给客户端。 这有一个问题是,邮件,短信并不是必须的,它只是一个通知,而这种做法让客户端等待没有必要等待的东西.</p>\n<ul>\n<li>并行的方式</li>\n</ul>\n<p>并行方式:将注册信息写入数据库后,发送邮件的同时,发送短信,以上三个任务完成后,返回给客户端,并行的方式能提高处理的时间。</p>\n<p>假设三个业务节点分别使用50ms,串行方式使用时间150ms,并行使用时间100ms。虽然并性已经提高的处理时间,但是,前面说过,邮件和短信对我正常的使用网站没有任何影响，客户端没有必要等着其发送完成才显示注册成功,英爱是写入数据库后就返回.</p>\n<h3 id=\"应用解耦\"><a href=\"#应用解耦\" class=\"headerlink\" title=\"应用解耦\"></a>应用解耦</h3><p>场景：双11是购物狂节,用户下单后,订单系统需要通知库存系统,传统的做法就是订单系统调用库存系统的接口.</p>\n<p>这种做法有一个缺点:</p>\n<p>当库存系统出现故障时,订单就会失败。(这样马云将少赚好多好多钱^ ^)<br>订单系统和库存系统高耦合.<br>引入消息队列</p>\n<p>订单系统:用户下单后,订单系统完成持久化处理,将消息写入消息队列,返回用户订单下单成功。</p>\n<p>库存系统:订阅下单的消息,获取下单消息,进行库操作。<br>就算库存系统出现故障,消息队列也能保证消息的可靠投递,不会导致消息丢失(马云这下高兴了).</p>\n<h3 id=\"流量削峰\"><a href=\"#流量削峰\" class=\"headerlink\" title=\"流量削峰\"></a>流量削峰</h3><p>流量削峰一般在秒杀活动中应用广泛<br>场景:秒杀活动，一般会因为流量过大，导致应用挂掉,为了解决这个问题，一般在应用前端加入消息队列。<br>作用:</p>\n<ol>\n<li><p>可以控制活动人数，超过此一定阀值的订单直接丢弃(我为什么秒杀一次都没有成功过呢^^)</p>\n</li>\n<li><p>可以缓解短时间的高流量压垮应用(应用程序按自己的最大处理能力获取订单)</p>\n</li>\n<li><p>用户的请求,服务器收到之后,首先写入消息队列,加入消息队列长度超过最大值,则直接抛弃用户请求或跳转到错误页面.</p>\n</li>\n<li><p>秒杀业务根据消息队列中的请求信息，再做后续处理.</p>\n</li>\n</ol>\n<h2 id=\"SpringBoot-集成RabbitMq\"><a href=\"#SpringBoot-集成RabbitMq\" class=\"headerlink\" title=\"SpringBoot 集成RabbitMq\"></a>SpringBoot 集成RabbitMq</h2><p>添加依赖<code>pom.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>添加数据库连接<code>application.yml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">rabbitmq:</span></span><br><span class=\"line\">    <span class=\"attr\">host:</span> <span class=\"string\">youhostname</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span> <span class=\"number\">5672</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">test</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">dev.5566</span></span><br><span class=\"line\">    <span class=\"attr\">virtual-host:</span> <span class=\"string\">/</span></span><br><span class=\"line\">    <span class=\"attr\">publisher-returns:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">template:</span></span><br><span class=\"line\">      <span class=\"attr\">mandatory:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>添加<code>topic</code> <code>config</code>持久化该队列</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RabbitConfig</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//声明队列</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Queue <span class=\"title\">queue1</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Queue(<span class=\"string\">&quot;hello.queue1&quot;</span>, <span class=\"keyword\">true</span>); <span class=\"comment\">// true表示持久化该队列</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Queue <span class=\"title\">queue2</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Queue(<span class=\"string\">&quot;hello.queue2&quot;</span>, <span class=\"keyword\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//声明交互器</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\">TopicExchange <span class=\"title\">topicExchange</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> TopicExchange(<span class=\"string\">&quot;topicExchange&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//绑定</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Binding <span class=\"title\">binding1</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> BindingBuilder.bind(queue1()).to(topicExchange()).with(<span class=\"string\">&quot;key.1&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Binding <span class=\"title\">binding2</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> BindingBuilder.bind(queue2()).to(topicExchange()).with(<span class=\"string\">&quot;key.#&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>发送消息message</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Sender</span> <span class=\"keyword\">implements</span> <span class=\"title\">ConfirmCallback</span>, <span class=\"title\">ReturnCallback</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RabbitTemplate rabbitTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostConstruct</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        rabbitTemplate.setConfirmCallback(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        rabbitTemplate.setReturnCallback(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">confirm</span><span class=\"params\">(CorrelationData correlationData, <span class=\"keyword\">boolean</span> b, String s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (b) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;消息发送成功:&quot;</span> + correlationData);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;消息发送失败:&quot;</span> + s);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">returnedMessage</span><span class=\"params\">(Message message, <span class=\"keyword\">int</span> i, String s, String s1, String s2)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">send</span><span class=\"params\">(String msg)</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        CorrelationData correlationId = <span class=\"keyword\">new</span> CorrelationData(UUID.randomUUID().toString());</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;开始发送消息 : &quot;</span> + msg.toLowerCase());</span><br><span class=\"line\">        String response = rabbitTemplate.convertSendAndReceive(<span class=\"string\">&quot;topicExchange&quot;</span>, <span class=\"string\">&quot;key.1&quot;</span>, msg, correlationId).toString();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;结束发送消息 : &quot;</span> + msg.toLowerCase());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;消费者响应 : &quot;</span> + response + <span class=\"string\">&quot; 消息处理完成&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>消息接受方</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Receiver</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RabbitListener(queues = &quot;hello.queue1&quot;)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">processMessage1</span><span class=\"params\">(String msg)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot; 接收到来自hello.queue1队列的消息：&quot;</span> + msg);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> msg.toUpperCase();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>controller类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RabbitMqController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Sender sender;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(value = &quot;/rabbit&quot;, method = RequestMethod.GET)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">rabbit</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        sender.send(<span class=\"string\">&quot;ss&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"测试结果\"><a href=\"#测试结果\" class=\"headerlink\" title=\"测试结果\"></a>测试结果</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">开始发送消息 : ss</span><br><span class=\"line\">SimpleAsyncTaskExecutor-1 接收到来自hello.queue1队列的消息：ss</span><br><span class=\"line\">结束发送消息 : ss</span><br><span class=\"line\">消费者响应 : SS 消息处理完成</span><br></pre></td></tr></table></figure>"},{"title":"Redis的使用","date":"2018-02-25T16:00:00.000Z","_content":"\n## 简介\n\nRedis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。\n\nRedis 与其他 key - value 缓存产品有以下三个特点：\n\n* Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。\n* Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。\n* Redis支持数据的备份，即master-slave模式的数据备份。\n\n![redis](https://upload.wikimedia.org/wikipedia/en/thumb/6/6b/Redis_Logo.svg/1200px-Redis_Logo.svg.png)\n\n## Redis 优势\n\n* 性能极高 – Redis能读的速度是110000次/s,写的速度是81000次/s 。\n* 丰富的数据类型 – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。\n* 原子 – Redis的所有操作都是原子性的，意思就是要么成功执行要么失败完全不执行。单个操作是原子性的。多个操作也支持事务，即原子性，通过MULTI和EXEC指令包起来。\n* 丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性。\n\n## Redis的使用\n\n本章介绍如何使用`SpringBoot` 对redis的操作。\n\n添加redis的 starter 修改pom.xml\n\n```xml\n        <dependency>\n            <groupId>cn.com.siss</groupId>\n            <artifactId>spring-boot-starter-redis</artifactId>\n            <version>${starters.version}</version>\n        </dependency>\n```\n\n添加`application.yml`的配置文件\n\n单节点redis\n\n```yaml\nspring:\n  profiles:\n    include:\n      - redis\napp:\n  redis:\n    host: redis-dev-3 # redis 服务端ip地址\n    password: redis.123 # redis 登录密码\n```\n\n\n哨兵模式\n\n```yaml\napp:\n  redis:\n    password: redis.123\n    nodes: redis-dev-1:26379,redis-dev-2:26379,redis-dev-3:26379\nspring:\n  profiles:\n    include:\n      - redis-sentry\n\n```\n\n添加string类型 首先通过注解`@Autowired` 注入redisTemplate.\nRedisTemplateUtil.set(redisTemplate, \"p\", \"{\\\"a\\\": \\\"b\\\"}\", 3600L);\n第二个参数为`key` 第三个为`value` 最后一位为失效时间`expireTime`\n\n```java\n@RestController\npublic class HelloWorld {\n\n    @Autowired\n    private RedisTemplate redisTemplate;\n\n    @RequestMapping(value = \"/set/redis\", method = RequestMethod.GET)\n    public Boolean setRedis(){\n        System.out.println(\"controller set method\");\n        boolean a = RedisTemplateUtil.set(redisTemplate, \"p\", \"{\\\"a\\\": \\\"b\\\"}\", 3600L);\n        return a;\n    }\n}\n\n```\n\n修改数据库 redis默认有16个数据库 通过jedis来切换数据库，例如：\n\n```java\n        JedisConnectionFactory jedisConnectionFactory = (JedisConnectionFactory) redisTemplate.getConnectionFactory();\n        jedisConnectionFactory.setDatabase(2);\n```\n\n插入hash\n\n```java\n    @Test\n    public void checkoutSetHmKey() {\n        HashOperations<String, Object, Object> hash = redisTemplate.opsForHash();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"b\");\n        hash.putAll(\"124242114234214123412\", map);\n        RedisTemplateUtil.hmSet(redisTemplate, \"s\", \"a\", \"b\");\n    }\n```\n\n### 使用Redis注解方式插入缓存\n\n开启注释方式的redis\n\n```java\n@SpringBootApplication\n@EnableCaching\npublic class SpringBootStarterRedisApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(SpringBootStarterRedisApplication.class, args);\n    }\n\n}\n```\n\n```\ncacheNames = \"product\"   //缓存名\n\nkey = \"固定值\" 或  key = \"#sellerid\"(可变化的值)  //redis缓存中的key\n\ncondition = \"#sellerid.length > 10\"   //里面填写表达式，true表示进行缓存，false表示不进行缓存\n\nunless = \"#result.getCode() != 0\"   //和以上相反，当为false时进行缓存，否则不进行缓存\n```\n\n\n使用注解的方式更新缓存\n\n```java\n@Cacheable(value=\"user\", key=\"'users_'+#id\")\npublic User redis(Long id){\n    User user = new User();\n    user.setUsername(\"hlhdidi\");\n    user.setPassword(\"123\");\n    user.setUid(1);\n    user.setId(1L);\n    System.out.println(\"log4j2坏啦?\");\n    return user;\n}\n```\n\n@CacheEvict 删除缓存  \n\nallEntries = false  清空product里面的所有制\n\nallEntries = true  默认值，删除key对应的值\n\n```java\n@CacheEvict(value=\"thisredis\", key=\"'users_'+#id\",condition=\"#id!=1\")\npublic void delUser(Integer id) {\n    // 删除user\n    System.out.println(\"user删除\");\n}\n```\n\n@CachePut\n\n每次执行都会执行方法，无论缓存里是否有值，同时使用新的返回值的替换缓存中的值。这里不同于@Cacheable：@Cacheable如果缓存没有值，从则执行方法并缓存数据，如果缓存有值，则从缓存中获取值\n\n@CacheConfig\n\n@CacheConfig: 类级别的注解：如果我们在此注解中定义cacheNames，则此类中的所有方法上 @Cacheable的cacheNames默认都是此值。当然@Cacheable也可以重定义cacheNames的值\n","source":"_posts/doc-dev/basics/redis.md","raw":"---\ntitle: Redis的使用\ndate: 2018-02-26\n\n---\n\n## 简介\n\nRedis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。\n\nRedis 与其他 key - value 缓存产品有以下三个特点：\n\n* Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。\n* Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。\n* Redis支持数据的备份，即master-slave模式的数据备份。\n\n![redis](https://upload.wikimedia.org/wikipedia/en/thumb/6/6b/Redis_Logo.svg/1200px-Redis_Logo.svg.png)\n\n## Redis 优势\n\n* 性能极高 – Redis能读的速度是110000次/s,写的速度是81000次/s 。\n* 丰富的数据类型 – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。\n* 原子 – Redis的所有操作都是原子性的，意思就是要么成功执行要么失败完全不执行。单个操作是原子性的。多个操作也支持事务，即原子性，通过MULTI和EXEC指令包起来。\n* 丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性。\n\n## Redis的使用\n\n本章介绍如何使用`SpringBoot` 对redis的操作。\n\n添加redis的 starter 修改pom.xml\n\n```xml\n        <dependency>\n            <groupId>cn.com.siss</groupId>\n            <artifactId>spring-boot-starter-redis</artifactId>\n            <version>${starters.version}</version>\n        </dependency>\n```\n\n添加`application.yml`的配置文件\n\n单节点redis\n\n```yaml\nspring:\n  profiles:\n    include:\n      - redis\napp:\n  redis:\n    host: redis-dev-3 # redis 服务端ip地址\n    password: redis.123 # redis 登录密码\n```\n\n\n哨兵模式\n\n```yaml\napp:\n  redis:\n    password: redis.123\n    nodes: redis-dev-1:26379,redis-dev-2:26379,redis-dev-3:26379\nspring:\n  profiles:\n    include:\n      - redis-sentry\n\n```\n\n添加string类型 首先通过注解`@Autowired` 注入redisTemplate.\nRedisTemplateUtil.set(redisTemplate, \"p\", \"{\\\"a\\\": \\\"b\\\"}\", 3600L);\n第二个参数为`key` 第三个为`value` 最后一位为失效时间`expireTime`\n\n```java\n@RestController\npublic class HelloWorld {\n\n    @Autowired\n    private RedisTemplate redisTemplate;\n\n    @RequestMapping(value = \"/set/redis\", method = RequestMethod.GET)\n    public Boolean setRedis(){\n        System.out.println(\"controller set method\");\n        boolean a = RedisTemplateUtil.set(redisTemplate, \"p\", \"{\\\"a\\\": \\\"b\\\"}\", 3600L);\n        return a;\n    }\n}\n\n```\n\n修改数据库 redis默认有16个数据库 通过jedis来切换数据库，例如：\n\n```java\n        JedisConnectionFactory jedisConnectionFactory = (JedisConnectionFactory) redisTemplate.getConnectionFactory();\n        jedisConnectionFactory.setDatabase(2);\n```\n\n插入hash\n\n```java\n    @Test\n    public void checkoutSetHmKey() {\n        HashOperations<String, Object, Object> hash = redisTemplate.opsForHash();\n        Map<String, String> map = new HashMap<>();\n        map.put(\"a\", \"b\");\n        hash.putAll(\"124242114234214123412\", map);\n        RedisTemplateUtil.hmSet(redisTemplate, \"s\", \"a\", \"b\");\n    }\n```\n\n### 使用Redis注解方式插入缓存\n\n开启注释方式的redis\n\n```java\n@SpringBootApplication\n@EnableCaching\npublic class SpringBootStarterRedisApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(SpringBootStarterRedisApplication.class, args);\n    }\n\n}\n```\n\n```\ncacheNames = \"product\"   //缓存名\n\nkey = \"固定值\" 或  key = \"#sellerid\"(可变化的值)  //redis缓存中的key\n\ncondition = \"#sellerid.length > 10\"   //里面填写表达式，true表示进行缓存，false表示不进行缓存\n\nunless = \"#result.getCode() != 0\"   //和以上相反，当为false时进行缓存，否则不进行缓存\n```\n\n\n使用注解的方式更新缓存\n\n```java\n@Cacheable(value=\"user\", key=\"'users_'+#id\")\npublic User redis(Long id){\n    User user = new User();\n    user.setUsername(\"hlhdidi\");\n    user.setPassword(\"123\");\n    user.setUid(1);\n    user.setId(1L);\n    System.out.println(\"log4j2坏啦?\");\n    return user;\n}\n```\n\n@CacheEvict 删除缓存  \n\nallEntries = false  清空product里面的所有制\n\nallEntries = true  默认值，删除key对应的值\n\n```java\n@CacheEvict(value=\"thisredis\", key=\"'users_'+#id\",condition=\"#id!=1\")\npublic void delUser(Integer id) {\n    // 删除user\n    System.out.println(\"user删除\");\n}\n```\n\n@CachePut\n\n每次执行都会执行方法，无论缓存里是否有值，同时使用新的返回值的替换缓存中的值。这里不同于@Cacheable：@Cacheable如果缓存没有值，从则执行方法并缓存数据，如果缓存有值，则从缓存中获取值\n\n@CacheConfig\n\n@CacheConfig: 类级别的注解：如果我们在此注解中定义cacheNames，则此类中的所有方法上 @Cacheable的cacheNames默认都是此值。当然@Cacheable也可以重定义cacheNames的值\n","slug":"doc-dev/basics/redis","published":1,"updated":"2021-03-09T14:24:44.266Z","_id":"ckm237zw800081mjr4ex3ee73","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Redis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。</p>\n<p>Redis 与其他 key - value 缓存产品有以下三个特点：</p>\n<ul>\n<li>Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。</li>\n<li>Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。</li>\n<li>Redis支持数据的备份，即master-slave模式的数据备份。</li>\n</ul>\n<p><img src=\"https://upload.wikimedia.org/wikipedia/en/thumb/6/6b/Redis_Logo.svg/1200px-Redis_Logo.svg.png\" alt=\"redis\"></p>\n<h2 id=\"Redis-优势\"><a href=\"#Redis-优势\" class=\"headerlink\" title=\"Redis 优势\"></a>Redis 优势</h2><ul>\n<li>性能极高 – Redis能读的速度是110000次/s,写的速度是81000次/s 。</li>\n<li>丰富的数据类型 – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。</li>\n<li>原子 – Redis的所有操作都是原子性的，意思就是要么成功执行要么失败完全不执行。单个操作是原子性的。多个操作也支持事务，即原子性，通过MULTI和EXEC指令包起来。</li>\n<li>丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性。</li>\n</ul>\n<h2 id=\"Redis的使用\"><a href=\"#Redis的使用\" class=\"headerlink\" title=\"Redis的使用\"></a>Redis的使用</h2><p>本章介绍如何使用<code>SpringBoot</code> 对redis的操作。</p>\n<p>添加redis的 starter 修改pom.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.com.siss<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-redis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;starters.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>添加<code>application.yml</code>的配置文件</p>\n<p>单节点redis</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">profiles:</span></span><br><span class=\"line\">    <span class=\"attr\">include:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">redis</span></span><br><span class=\"line\"><span class=\"attr\">app:</span></span><br><span class=\"line\">  <span class=\"attr\">redis:</span></span><br><span class=\"line\">    <span class=\"attr\">host:</span> <span class=\"string\">redis-dev-3</span> <span class=\"comment\"># redis 服务端ip地址</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">redis.123</span> <span class=\"comment\"># redis 登录密码</span></span><br></pre></td></tr></table></figure>\n\n\n<p>哨兵模式</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">app:</span></span><br><span class=\"line\">  <span class=\"attr\">redis:</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">redis.123</span></span><br><span class=\"line\">    <span class=\"attr\">nodes:</span> <span class=\"string\">redis-dev-1:26379,redis-dev-2:26379,redis-dev-3:26379</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">profiles:</span></span><br><span class=\"line\">    <span class=\"attr\">include:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">redis-sentry</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>添加string类型 首先通过注解<code>@Autowired</code> 注入redisTemplate.<br>RedisTemplateUtil.set(redisTemplate, “p”, “{&quot;a&quot;: &quot;b&quot;}”, 3600L);<br>第二个参数为<code>key</code> 第三个为<code>value</code> 最后一位为失效时间<code>expireTime</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloWorld</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RedisTemplate redisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(value = &quot;/set/redis&quot;, method = RequestMethod.GET)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Boolean <span class=\"title\">setRedis</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;controller set method&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> a = RedisTemplateUtil.set(redisTemplate, <span class=\"string\">&quot;p&quot;</span>, <span class=\"string\">&quot;&#123;\\&quot;a\\&quot;: \\&quot;b\\&quot;&#125;&quot;</span>, <span class=\"number\">3600L</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>修改数据库 redis默认有16个数据库 通过jedis来切换数据库，例如：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JedisConnectionFactory jedisConnectionFactory = (JedisConnectionFactory) redisTemplate.getConnectionFactory();</span><br><span class=\"line\">jedisConnectionFactory.setDatabase(<span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n\n<p>插入hash</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">checkoutSetHmKey</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    HashOperations&lt;String, Object, Object&gt; hash = redisTemplate.opsForHash();</span><br><span class=\"line\">    Map&lt;String, String&gt; map = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">    map.put(<span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>);</span><br><span class=\"line\">    hash.putAll(<span class=\"string\">&quot;124242114234214123412&quot;</span>, map);</span><br><span class=\"line\">    RedisTemplateUtil.hmSet(redisTemplate, <span class=\"string\">&quot;s&quot;</span>, <span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用Redis注解方式插入缓存\"><a href=\"#使用Redis注解方式插入缓存\" class=\"headerlink\" title=\"使用Redis注解方式插入缓存\"></a>使用Redis注解方式插入缓存</h3><p>开启注释方式的redis</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"meta\">@EnableCaching</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringBootStarterRedisApplication</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SpringApplication.run(SpringBootStarterRedisApplication.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cacheNames &#x3D; &quot;product&quot;   &#x2F;&#x2F;缓存名</span><br><span class=\"line\"></span><br><span class=\"line\">key &#x3D; &quot;固定值&quot; 或  key &#x3D; &quot;#sellerid&quot;(可变化的值)  &#x2F;&#x2F;redis缓存中的key</span><br><span class=\"line\"></span><br><span class=\"line\">condition &#x3D; &quot;#sellerid.length &gt; 10&quot;   &#x2F;&#x2F;里面填写表达式，true表示进行缓存，false表示不进行缓存</span><br><span class=\"line\"></span><br><span class=\"line\">unless &#x3D; &quot;#result.getCode() !&#x3D; 0&quot;   &#x2F;&#x2F;和以上相反，当为false时进行缓存，否则不进行缓存</span><br></pre></td></tr></table></figure>\n\n\n<p>使用注解的方式更新缓存</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Cacheable(value=&quot;user&quot;, key=&quot;&#x27;users_&#x27;+#id&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> User <span class=\"title\">redis</span><span class=\"params\">(Long id)</span></span>&#123;</span><br><span class=\"line\">    User user = <span class=\"keyword\">new</span> User();</span><br><span class=\"line\">    user.setUsername(<span class=\"string\">&quot;hlhdidi&quot;</span>);</span><br><span class=\"line\">    user.setPassword(<span class=\"string\">&quot;123&quot;</span>);</span><br><span class=\"line\">    user.setUid(<span class=\"number\">1</span>);</span><br><span class=\"line\">    user.setId(<span class=\"number\">1L</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;log4j2坏啦?&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> user;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>@CacheEvict 删除缓存  </p>\n<p>allEntries = false  清空product里面的所有制</p>\n<p>allEntries = true  默认值，删除key对应的值</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@CacheEvict(value=&quot;thisredis&quot;, key=&quot;&#x27;users_&#x27;+#id&quot;,condition=&quot;#id!=1&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">delUser</span><span class=\"params\">(Integer id)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 删除user</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;user删除&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>@CachePut</p>\n<p>每次执行都会执行方法，无论缓存里是否有值，同时使用新的返回值的替换缓存中的值。这里不同于@Cacheable：@Cacheable如果缓存没有值，从则执行方法并缓存数据，如果缓存有值，则从缓存中获取值</p>\n<p>@CacheConfig</p>\n<p>@CacheConfig: 类级别的注解：如果我们在此注解中定义cacheNames，则此类中的所有方法上 @Cacheable的cacheNames默认都是此值。当然@Cacheable也可以重定义cacheNames的值</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Redis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。</p>\n<p>Redis 与其他 key - value 缓存产品有以下三个特点：</p>\n<ul>\n<li>Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。</li>\n<li>Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。</li>\n<li>Redis支持数据的备份，即master-slave模式的数据备份。</li>\n</ul>\n<p><img src=\"https://upload.wikimedia.org/wikipedia/en/thumb/6/6b/Redis_Logo.svg/1200px-Redis_Logo.svg.png\" alt=\"redis\"></p>\n<h2 id=\"Redis-优势\"><a href=\"#Redis-优势\" class=\"headerlink\" title=\"Redis 优势\"></a>Redis 优势</h2><ul>\n<li>性能极高 – Redis能读的速度是110000次/s,写的速度是81000次/s 。</li>\n<li>丰富的数据类型 – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。</li>\n<li>原子 – Redis的所有操作都是原子性的，意思就是要么成功执行要么失败完全不执行。单个操作是原子性的。多个操作也支持事务，即原子性，通过MULTI和EXEC指令包起来。</li>\n<li>丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性。</li>\n</ul>\n<h2 id=\"Redis的使用\"><a href=\"#Redis的使用\" class=\"headerlink\" title=\"Redis的使用\"></a>Redis的使用</h2><p>本章介绍如何使用<code>SpringBoot</code> 对redis的操作。</p>\n<p>添加redis的 starter 修改pom.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.com.siss<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-redis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;starters.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>添加<code>application.yml</code>的配置文件</p>\n<p>单节点redis</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">profiles:</span></span><br><span class=\"line\">    <span class=\"attr\">include:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">redis</span></span><br><span class=\"line\"><span class=\"attr\">app:</span></span><br><span class=\"line\">  <span class=\"attr\">redis:</span></span><br><span class=\"line\">    <span class=\"attr\">host:</span> <span class=\"string\">redis-dev-3</span> <span class=\"comment\"># redis 服务端ip地址</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">redis.123</span> <span class=\"comment\"># redis 登录密码</span></span><br></pre></td></tr></table></figure>\n\n\n<p>哨兵模式</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">app:</span></span><br><span class=\"line\">  <span class=\"attr\">redis:</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">redis.123</span></span><br><span class=\"line\">    <span class=\"attr\">nodes:</span> <span class=\"string\">redis-dev-1:26379,redis-dev-2:26379,redis-dev-3:26379</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">profiles:</span></span><br><span class=\"line\">    <span class=\"attr\">include:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">redis-sentry</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>添加string类型 首先通过注解<code>@Autowired</code> 注入redisTemplate.<br>RedisTemplateUtil.set(redisTemplate, “p”, “{&quot;a&quot;: &quot;b&quot;}”, 3600L);<br>第二个参数为<code>key</code> 第三个为<code>value</code> 最后一位为失效时间<code>expireTime</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloWorld</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RedisTemplate redisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(value = &quot;/set/redis&quot;, method = RequestMethod.GET)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Boolean <span class=\"title\">setRedis</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;controller set method&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> a = RedisTemplateUtil.set(redisTemplate, <span class=\"string\">&quot;p&quot;</span>, <span class=\"string\">&quot;&#123;\\&quot;a\\&quot;: \\&quot;b\\&quot;&#125;&quot;</span>, <span class=\"number\">3600L</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>修改数据库 redis默认有16个数据库 通过jedis来切换数据库，例如：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JedisConnectionFactory jedisConnectionFactory = (JedisConnectionFactory) redisTemplate.getConnectionFactory();</span><br><span class=\"line\">jedisConnectionFactory.setDatabase(<span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n\n<p>插入hash</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">checkoutSetHmKey</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    HashOperations&lt;String, Object, Object&gt; hash = redisTemplate.opsForHash();</span><br><span class=\"line\">    Map&lt;String, String&gt; map = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">    map.put(<span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>);</span><br><span class=\"line\">    hash.putAll(<span class=\"string\">&quot;124242114234214123412&quot;</span>, map);</span><br><span class=\"line\">    RedisTemplateUtil.hmSet(redisTemplate, <span class=\"string\">&quot;s&quot;</span>, <span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用Redis注解方式插入缓存\"><a href=\"#使用Redis注解方式插入缓存\" class=\"headerlink\" title=\"使用Redis注解方式插入缓存\"></a>使用Redis注解方式插入缓存</h3><p>开启注释方式的redis</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"meta\">@EnableCaching</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringBootStarterRedisApplication</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SpringApplication.run(SpringBootStarterRedisApplication.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cacheNames &#x3D; &quot;product&quot;   &#x2F;&#x2F;缓存名</span><br><span class=\"line\"></span><br><span class=\"line\">key &#x3D; &quot;固定值&quot; 或  key &#x3D; &quot;#sellerid&quot;(可变化的值)  &#x2F;&#x2F;redis缓存中的key</span><br><span class=\"line\"></span><br><span class=\"line\">condition &#x3D; &quot;#sellerid.length &gt; 10&quot;   &#x2F;&#x2F;里面填写表达式，true表示进行缓存，false表示不进行缓存</span><br><span class=\"line\"></span><br><span class=\"line\">unless &#x3D; &quot;#result.getCode() !&#x3D; 0&quot;   &#x2F;&#x2F;和以上相反，当为false时进行缓存，否则不进行缓存</span><br></pre></td></tr></table></figure>\n\n\n<p>使用注解的方式更新缓存</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Cacheable(value=&quot;user&quot;, key=&quot;&#x27;users_&#x27;+#id&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> User <span class=\"title\">redis</span><span class=\"params\">(Long id)</span></span>&#123;</span><br><span class=\"line\">    User user = <span class=\"keyword\">new</span> User();</span><br><span class=\"line\">    user.setUsername(<span class=\"string\">&quot;hlhdidi&quot;</span>);</span><br><span class=\"line\">    user.setPassword(<span class=\"string\">&quot;123&quot;</span>);</span><br><span class=\"line\">    user.setUid(<span class=\"number\">1</span>);</span><br><span class=\"line\">    user.setId(<span class=\"number\">1L</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;log4j2坏啦?&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> user;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>@CacheEvict 删除缓存  </p>\n<p>allEntries = false  清空product里面的所有制</p>\n<p>allEntries = true  默认值，删除key对应的值</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@CacheEvict(value=&quot;thisredis&quot;, key=&quot;&#x27;users_&#x27;+#id&quot;,condition=&quot;#id!=1&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">delUser</span><span class=\"params\">(Integer id)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 删除user</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;user删除&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>@CachePut</p>\n<p>每次执行都会执行方法，无论缓存里是否有值，同时使用新的返回值的替换缓存中的值。这里不同于@Cacheable：@Cacheable如果缓存没有值，从则执行方法并缓存数据，如果缓存有值，则从缓存中获取值</p>\n<p>@CacheConfig</p>\n<p>@CacheConfig: 类级别的注解：如果我们在此注解中定义cacheNames，则此类中的所有方法上 @Cacheable的cacheNames默认都是此值。当然@Cacheable也可以重定义cacheNames的值</p>\n"},{"title":"Sharding-JDBC 的使用","date":"2018-03-11T16:00:00.000Z","_content":"\n## 简介\n\n![](https://avatars2.githubusercontent.com/u/38046546?s=200&v=4)\n\nSharding-JDBC是当当应用框架ddframe中，从关系型数据库模块dd-rdb中分离出来的数据库水平分片框架，实现透明化数据库分库分表访问。Sharding-JDBC是继dubbox和elastic-job之后，ddframe系列开源的第3个项目。\nSharding-JDBC直接封装JDBC协议，可以理解为增强版的JDBC驱动，旧代码迁移成本几乎为零。\nSharding-JDBC定位为轻量级java框架，使用客户端直连数据库，以jar包形式提供服务，无proxy代理层，无需额外部署，无其他依赖，DBA也无需改变原有的运维方式。\n\n主要包括以下特点：\n\n可适用于任何基于java的ORM框架，如：JPA, Hibernate, Mybatis, Spring JDBC Template或直接使用JDBC。\n可基于任何第三方的数据库连接池，如：DBCP, C3P0, BoneCP, Druid等。\n\n理论上可支持任意实现JDBC规范的数据库。虽然目前仅支持MySQL，但已有支持Oracle，SQLServer等数据库的计划。\n分片策略灵活，可支持等号，between，in等多维度分片，也可支持多分片键。\n\nSQL解析功能完善，支持聚合，分组，排序，limit，or等查询，并支持Binding Table以及笛卡尔积表查询。\n性能高。单库查询QPS为原生JDBC的99.8%；双库查询QPS比单库增加94%。\n\n## Sharding-JDBC结合SpringBoot\n\n注意\n\n1、代码中类似\"ds0..1.torder0..1.torder{0..1}\"成为行表达式，形如\"expression或expression或->{ expression }\"。该表达式可用于配置数据节点和配置分片算法。\n\n${begin..end}表示范围区间，即表示从begin到end个\n\n${[unit1, unit2, unit_x]}表示枚举值\n\n2、orderTableRuleConfig.setActualDataNodes(\"ds0..1.torder0..1.torder{0..1}\");\n\n这里表示的是使用行表达式配置数据节点即数据库分别是ds0、ds1,表分别是t_order0、t_order1。\n\n该表达的等价组合是：ds0.t_order0, ds0.t_order1, ds1.t_order0, ds1.t_order1。\n\n3、orderTableRuleConfig.setTableShardingStrategyConfig(new InlineShardingStrategyConfiguration(\"order_id\", \"t_order${order_id % 2}\"));\n\n这里表示的是使用行表达式配置分片算法。该行表示针对t_order表中的元素按照order_id模2将不同的元素放进不同的表中。\n\n比如order_id=5，5%2=1，则放入t_order1中\n\norder_id=6, 6%2=0, 则放入t_order0中\n\n4、除此以外还要一些类似\"逻辑表\"这样的概念，可以到官方文档自行查询。\n\n工具类DataRespository(该类来源sharding-sphere-example项目)","source":"_posts/doc-dev/basics/sharding-jdbc.md","raw":"---\ntitle: Sharding-JDBC 的使用\ndate: 2018-03-12\n\n---\n\n## 简介\n\n![](https://avatars2.githubusercontent.com/u/38046546?s=200&v=4)\n\nSharding-JDBC是当当应用框架ddframe中，从关系型数据库模块dd-rdb中分离出来的数据库水平分片框架，实现透明化数据库分库分表访问。Sharding-JDBC是继dubbox和elastic-job之后，ddframe系列开源的第3个项目。\nSharding-JDBC直接封装JDBC协议，可以理解为增强版的JDBC驱动，旧代码迁移成本几乎为零。\nSharding-JDBC定位为轻量级java框架，使用客户端直连数据库，以jar包形式提供服务，无proxy代理层，无需额外部署，无其他依赖，DBA也无需改变原有的运维方式。\n\n主要包括以下特点：\n\n可适用于任何基于java的ORM框架，如：JPA, Hibernate, Mybatis, Spring JDBC Template或直接使用JDBC。\n可基于任何第三方的数据库连接池，如：DBCP, C3P0, BoneCP, Druid等。\n\n理论上可支持任意实现JDBC规范的数据库。虽然目前仅支持MySQL，但已有支持Oracle，SQLServer等数据库的计划。\n分片策略灵活，可支持等号，between，in等多维度分片，也可支持多分片键。\n\nSQL解析功能完善，支持聚合，分组，排序，limit，or等查询，并支持Binding Table以及笛卡尔积表查询。\n性能高。单库查询QPS为原生JDBC的99.8%；双库查询QPS比单库增加94%。\n\n## Sharding-JDBC结合SpringBoot\n\n注意\n\n1、代码中类似\"ds0..1.torder0..1.torder{0..1}\"成为行表达式，形如\"expression或expression或->{ expression }\"。该表达式可用于配置数据节点和配置分片算法。\n\n${begin..end}表示范围区间，即表示从begin到end个\n\n${[unit1, unit2, unit_x]}表示枚举值\n\n2、orderTableRuleConfig.setActualDataNodes(\"ds0..1.torder0..1.torder{0..1}\");\n\n这里表示的是使用行表达式配置数据节点即数据库分别是ds0、ds1,表分别是t_order0、t_order1。\n\n该表达的等价组合是：ds0.t_order0, ds0.t_order1, ds1.t_order0, ds1.t_order1。\n\n3、orderTableRuleConfig.setTableShardingStrategyConfig(new InlineShardingStrategyConfiguration(\"order_id\", \"t_order${order_id % 2}\"));\n\n这里表示的是使用行表达式配置分片算法。该行表示针对t_order表中的元素按照order_id模2将不同的元素放进不同的表中。\n\n比如order_id=5，5%2=1，则放入t_order1中\n\norder_id=6, 6%2=0, 则放入t_order0中\n\n4、除此以外还要一些类似\"逻辑表\"这样的概念，可以到官方文档自行查询。\n\n工具类DataRespository(该类来源sharding-sphere-example项目)","slug":"doc-dev/basics/sharding-jdbc","published":1,"updated":"2021-03-09T14:25:27.994Z","_id":"ckm237zw900091mjr4yteaud9","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><img src=\"https://avatars2.githubusercontent.com/u/38046546?s=200&v=4\"></p>\n<p>Sharding-JDBC是当当应用框架ddframe中，从关系型数据库模块dd-rdb中分离出来的数据库水平分片框架，实现透明化数据库分库分表访问。Sharding-JDBC是继dubbox和elastic-job之后，ddframe系列开源的第3个项目。<br>Sharding-JDBC直接封装JDBC协议，可以理解为增强版的JDBC驱动，旧代码迁移成本几乎为零。<br>Sharding-JDBC定位为轻量级java框架，使用客户端直连数据库，以jar包形式提供服务，无proxy代理层，无需额外部署，无其他依赖，DBA也无需改变原有的运维方式。</p>\n<p>主要包括以下特点：</p>\n<p>可适用于任何基于java的ORM框架，如：JPA, Hibernate, Mybatis, Spring JDBC Template或直接使用JDBC。<br>可基于任何第三方的数据库连接池，如：DBCP, C3P0, BoneCP, Druid等。</p>\n<p>理论上可支持任意实现JDBC规范的数据库。虽然目前仅支持MySQL，但已有支持Oracle，SQLServer等数据库的计划。<br>分片策略灵活，可支持等号，between，in等多维度分片，也可支持多分片键。</p>\n<p>SQL解析功能完善，支持聚合，分组，排序，limit，or等查询，并支持Binding Table以及笛卡尔积表查询。<br>性能高。单库查询QPS为原生JDBC的99.8%；双库查询QPS比单库增加94%。</p>\n<h2 id=\"Sharding-JDBC结合SpringBoot\"><a href=\"#Sharding-JDBC结合SpringBoot\" class=\"headerlink\" title=\"Sharding-JDBC结合SpringBoot\"></a>Sharding-JDBC结合SpringBoot</h2><p>注意</p>\n<p>1、代码中类似”ds0..1.torder0..1.torder{0..1}”成为行表达式，形如”expression或expression或-&gt;{ expression }”。该表达式可用于配置数据节点和配置分片算法。</p>\n<p>${begin..end}表示范围区间，即表示从begin到end个</p>\n<p>${[unit1, unit2, unit_x]}表示枚举值</p>\n<p>2、orderTableRuleConfig.setActualDataNodes(“ds0..1.torder0..1.torder{0..1}”);</p>\n<p>这里表示的是使用行表达式配置数据节点即数据库分别是ds0、ds1,表分别是t_order0、t_order1。</p>\n<p>该表达的等价组合是：ds0.t_order0, ds0.t_order1, ds1.t_order0, ds1.t_order1。</p>\n<p>3、orderTableRuleConfig.setTableShardingStrategyConfig(new InlineShardingStrategyConfiguration(“order_id”, “t_order${order_id % 2}”));</p>\n<p>这里表示的是使用行表达式配置分片算法。该行表示针对t_order表中的元素按照order_id模2将不同的元素放进不同的表中。</p>\n<p>比如order_id=5，5%2=1，则放入t_order1中</p>\n<p>order_id=6, 6%2=0, 则放入t_order0中</p>\n<p>4、除此以外还要一些类似”逻辑表”这样的概念，可以到官方文档自行查询。</p>\n<p>工具类DataRespository(该类来源sharding-sphere-example项目)</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><img src=\"https://avatars2.githubusercontent.com/u/38046546?s=200&v=4\"></p>\n<p>Sharding-JDBC是当当应用框架ddframe中，从关系型数据库模块dd-rdb中分离出来的数据库水平分片框架，实现透明化数据库分库分表访问。Sharding-JDBC是继dubbox和elastic-job之后，ddframe系列开源的第3个项目。<br>Sharding-JDBC直接封装JDBC协议，可以理解为增强版的JDBC驱动，旧代码迁移成本几乎为零。<br>Sharding-JDBC定位为轻量级java框架，使用客户端直连数据库，以jar包形式提供服务，无proxy代理层，无需额外部署，无其他依赖，DBA也无需改变原有的运维方式。</p>\n<p>主要包括以下特点：</p>\n<p>可适用于任何基于java的ORM框架，如：JPA, Hibernate, Mybatis, Spring JDBC Template或直接使用JDBC。<br>可基于任何第三方的数据库连接池，如：DBCP, C3P0, BoneCP, Druid等。</p>\n<p>理论上可支持任意实现JDBC规范的数据库。虽然目前仅支持MySQL，但已有支持Oracle，SQLServer等数据库的计划。<br>分片策略灵活，可支持等号，between，in等多维度分片，也可支持多分片键。</p>\n<p>SQL解析功能完善，支持聚合，分组，排序，limit，or等查询，并支持Binding Table以及笛卡尔积表查询。<br>性能高。单库查询QPS为原生JDBC的99.8%；双库查询QPS比单库增加94%。</p>\n<h2 id=\"Sharding-JDBC结合SpringBoot\"><a href=\"#Sharding-JDBC结合SpringBoot\" class=\"headerlink\" title=\"Sharding-JDBC结合SpringBoot\"></a>Sharding-JDBC结合SpringBoot</h2><p>注意</p>\n<p>1、代码中类似”ds0..1.torder0..1.torder{0..1}”成为行表达式，形如”expression或expression或-&gt;{ expression }”。该表达式可用于配置数据节点和配置分片算法。</p>\n<p>${begin..end}表示范围区间，即表示从begin到end个</p>\n<p>${[unit1, unit2, unit_x]}表示枚举值</p>\n<p>2、orderTableRuleConfig.setActualDataNodes(“ds0..1.torder0..1.torder{0..1}”);</p>\n<p>这里表示的是使用行表达式配置数据节点即数据库分别是ds0、ds1,表分别是t_order0、t_order1。</p>\n<p>该表达的等价组合是：ds0.t_order0, ds0.t_order1, ds1.t_order0, ds1.t_order1。</p>\n<p>3、orderTableRuleConfig.setTableShardingStrategyConfig(new InlineShardingStrategyConfiguration(“order_id”, “t_order${order_id % 2}”));</p>\n<p>这里表示的是使用行表达式配置分片算法。该行表示针对t_order表中的元素按照order_id模2将不同的元素放进不同的表中。</p>\n<p>比如order_id=5，5%2=1，则放入t_order1中</p>\n<p>order_id=6, 6%2=0, 则放入t_order0中</p>\n<p>4、除此以外还要一些类似”逻辑表”这样的概念，可以到官方文档自行查询。</p>\n<p>工具类DataRespository(该类来源sharding-sphere-example项目)</p>\n"},{"title":"针对 数据的校验","date":"2018-03-11T16:00:00.000Z","_content":"\n## Hibernate Validator 简介\n\n* 平时项目中，难免需要对参数 进行一些参数正确性的校验，这些校验出现在业务代码中，让我们的业务代码显得臃肿，而且，频繁的编写这类参数校验代码很无聊。鉴于此，觉得 Hibernate Validator 框架刚好解决了这些问题，可以很优雅的方式实现参数的校验，让业务代码 和 校验逻辑 分开,不再编写重复的校验逻辑。\n\n* Hibernate Validator 是 Bean Validation 的参考实现 . Hibernate Validator 提供了 JSR 303 规范中所有内置 constraint 的实现，除此之外还有一些附加的 constraint。\nBean Validation 为 JavaBean 验证定义了相应的元数据模型和API。缺省的元数据是 Java Annotations，通过使用 XML 可以对原有的元数据信息进行覆盖和扩展。Bean Validation 是一个运行时的数据验证框架，在验证之后验证的错误信息会被马上返回。\n\n## Hibernate Validator 的作用\n\n1. 验证逻辑与业务逻辑之间进行了分离，降低了程序耦合度；\n2. 统一且规范的验证方式，无需你再次编写重复的验证代码；\n3. 你将更专注于你的业务，将这些繁琐的事情统统丢在一边。\n\n## spring boot 结合hibernate来进行数据校验\n\n项目中，主要用于接口api 的入参校验和 封装工具类 在代码中校验两种使用方式。\n\n引入jar包\n\n```xml\n        <dependency>\n            <groupId>cn.com.siss</groupId>\n            <artifactId>spring-boot-starter-validate</artifactId>\n        </dependency>\n```\n\n使用 方法 ValidationUtils.validate(itemInfo);\n\n```java\n\n@RestController\npublic class DemoController {\n\n    @RequestMapping(value = \"demo\", method = RequestMethod.GET)\n    public void demo(@RequestBody ItemInfo itemInfo) throws DataException {\n        ValidationUtils.validate(itemInfo);\n    }\n\n}\n\n```\n\n常用注解有以下几种形式：\n\n|注解|支持的数据类型|作用|Hibernate元数据影响|\n|:---:|:---:|:---:|:---:|:---:|\n|@AssertFalse|Boolean, boolean|检查带注释的元素是否为  false|没有|\n|@AssertTrue|Boolean, boolean|检查带注释的元素是否为  true|没有|\n|@DecimalMax|BigDecimal，  BigInteger，  String，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持：任何子类型  Number。|被标注的值必须不大于约束中指定的最大值. 这个约束的参数是一个通过BigDecimal定义的最大值的字符串表示.|没有|\n|@DecimalMin|BigDecimal，  BigInteger，  String，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持：任何子类型  Number。|被标注的值必须不小于约束中指定的最小值. 这个约束的参数是一个通过BigDecimal定义的最小值的字符串表示.|没有|\n|@Digits（integer =，fraction =）|BigDecimal，  BigInteger，  String，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持：任何子类型  Number。|检查带注释的值是否是具有最多  integer 数字和  fraction 小数位的数字。\t|对应的数据库表字段会被设置精度(precision)和准度(scale).|\n|@Future|java.util.Date，  java.util.Calendar; 另外由HV支持，如果  Joda Time  日期/时间API在类路径上：任何ReadablePartial 和和的  实现  ReadableInstant。|检查给定的日期是否比现在晚.|没有|\n|@Max|BigDecimal，  BigInteger，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持:(  String 评估由String表示的数值），任何子类型  Number|检查该值是否小于或等于约束条件中指定的最大值.|会给对应的数据库表字段添加一个check的约束条件.|\n|@Min|BigDecimal，  BigInteger，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持:(  String 评估由String表示的数值），任何子类型  Number|检查该值是否大于或等于约束条件中规定的最小值.|会给对应的数据库表字段添加一个check的约束条件.|\n|@NotNull|没有限制|检测该值 不能为空|对应的表字段不允许为null.|\n|@Null|没有限制|为空||\n|@Past|java.util.Date，  java.util.Calendar; 另外由HV支持，如果  Joda Time  日期/时间API在类路径上：任何ReadablePartial 和和的  实现  ReadableInstant。|检查标注对象中的值表示的日期比当前早.|没有|\n|@Pattern(regex=, flag=)|String|检查该字符串是否能够在match指定的情况下被regex定义的正则表达式匹配.|没有|\n|@Size(min=, max=)|检查该值在min max之间|对应的数据库表字段的长度会被设置成约束中定义的最大值.|没有|\n|@Valid|任何非基本类型|递归的对关联对象进行校验, 如果关联对象是个集合或者数组, 那么对其中的元素进行递归校验,如果是一个map,则对其中的值部分进行校验.|没有|","source":"_posts/doc-dev/basics/validate.md","raw":"---\ntitle: 针对 数据的校验\ndate: 2018-03-12\n\n---\n\n## Hibernate Validator 简介\n\n* 平时项目中，难免需要对参数 进行一些参数正确性的校验，这些校验出现在业务代码中，让我们的业务代码显得臃肿，而且，频繁的编写这类参数校验代码很无聊。鉴于此，觉得 Hibernate Validator 框架刚好解决了这些问题，可以很优雅的方式实现参数的校验，让业务代码 和 校验逻辑 分开,不再编写重复的校验逻辑。\n\n* Hibernate Validator 是 Bean Validation 的参考实现 . Hibernate Validator 提供了 JSR 303 规范中所有内置 constraint 的实现，除此之外还有一些附加的 constraint。\nBean Validation 为 JavaBean 验证定义了相应的元数据模型和API。缺省的元数据是 Java Annotations，通过使用 XML 可以对原有的元数据信息进行覆盖和扩展。Bean Validation 是一个运行时的数据验证框架，在验证之后验证的错误信息会被马上返回。\n\n## Hibernate Validator 的作用\n\n1. 验证逻辑与业务逻辑之间进行了分离，降低了程序耦合度；\n2. 统一且规范的验证方式，无需你再次编写重复的验证代码；\n3. 你将更专注于你的业务，将这些繁琐的事情统统丢在一边。\n\n## spring boot 结合hibernate来进行数据校验\n\n项目中，主要用于接口api 的入参校验和 封装工具类 在代码中校验两种使用方式。\n\n引入jar包\n\n```xml\n        <dependency>\n            <groupId>cn.com.siss</groupId>\n            <artifactId>spring-boot-starter-validate</artifactId>\n        </dependency>\n```\n\n使用 方法 ValidationUtils.validate(itemInfo);\n\n```java\n\n@RestController\npublic class DemoController {\n\n    @RequestMapping(value = \"demo\", method = RequestMethod.GET)\n    public void demo(@RequestBody ItemInfo itemInfo) throws DataException {\n        ValidationUtils.validate(itemInfo);\n    }\n\n}\n\n```\n\n常用注解有以下几种形式：\n\n|注解|支持的数据类型|作用|Hibernate元数据影响|\n|:---:|:---:|:---:|:---:|:---:|\n|@AssertFalse|Boolean, boolean|检查带注释的元素是否为  false|没有|\n|@AssertTrue|Boolean, boolean|检查带注释的元素是否为  true|没有|\n|@DecimalMax|BigDecimal，  BigInteger，  String，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持：任何子类型  Number。|被标注的值必须不大于约束中指定的最大值. 这个约束的参数是一个通过BigDecimal定义的最大值的字符串表示.|没有|\n|@DecimalMin|BigDecimal，  BigInteger，  String，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持：任何子类型  Number。|被标注的值必须不小于约束中指定的最小值. 这个约束的参数是一个通过BigDecimal定义的最小值的字符串表示.|没有|\n|@Digits（integer =，fraction =）|BigDecimal，  BigInteger，  String，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持：任何子类型  Number。|检查带注释的值是否是具有最多  integer 数字和  fraction 小数位的数字。\t|对应的数据库表字段会被设置精度(precision)和准度(scale).|\n|@Future|java.util.Date，  java.util.Calendar; 另外由HV支持，如果  Joda Time  日期/时间API在类路径上：任何ReadablePartial 和和的  实现  ReadableInstant。|检查给定的日期是否比现在晚.|没有|\n|@Max|BigDecimal，  BigInteger，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持:(  String 评估由String表示的数值），任何子类型  Number|检查该值是否小于或等于约束条件中指定的最大值.|会给对应的数据库表字段添加一个check的约束条件.|\n|@Min|BigDecimal，  BigInteger，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持:(  String 评估由String表示的数值），任何子类型  Number|检查该值是否大于或等于约束条件中规定的最小值.|会给对应的数据库表字段添加一个check的约束条件.|\n|@NotNull|没有限制|检测该值 不能为空|对应的表字段不允许为null.|\n|@Null|没有限制|为空||\n|@Past|java.util.Date，  java.util.Calendar; 另外由HV支持，如果  Joda Time  日期/时间API在类路径上：任何ReadablePartial 和和的  实现  ReadableInstant。|检查标注对象中的值表示的日期比当前早.|没有|\n|@Pattern(regex=, flag=)|String|检查该字符串是否能够在match指定的情况下被regex定义的正则表达式匹配.|没有|\n|@Size(min=, max=)|检查该值在min max之间|对应的数据库表字段的长度会被设置成约束中定义的最大值.|没有|\n|@Valid|任何非基本类型|递归的对关联对象进行校验, 如果关联对象是个集合或者数组, 那么对其中的元素进行递归校验,如果是一个map,则对其中的值部分进行校验.|没有|","slug":"doc-dev/basics/validate","published":1,"updated":"2021-03-09T14:25:12.163Z","_id":"ckm237zwa000a1mjr7gsw11k9","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"Hibernate-Validator-简介\"><a href=\"#Hibernate-Validator-简介\" class=\"headerlink\" title=\"Hibernate Validator 简介\"></a>Hibernate Validator 简介</h2><ul>\n<li><p>平时项目中，难免需要对参数 进行一些参数正确性的校验，这些校验出现在业务代码中，让我们的业务代码显得臃肿，而且，频繁的编写这类参数校验代码很无聊。鉴于此，觉得 Hibernate Validator 框架刚好解决了这些问题，可以很优雅的方式实现参数的校验，让业务代码 和 校验逻辑 分开,不再编写重复的校验逻辑。</p>\n</li>\n<li><p>Hibernate Validator 是 Bean Validation 的参考实现 . Hibernate Validator 提供了 JSR 303 规范中所有内置 constraint 的实现，除此之外还有一些附加的 constraint。<br>Bean Validation 为 JavaBean 验证定义了相应的元数据模型和API。缺省的元数据是 Java Annotations，通过使用 XML 可以对原有的元数据信息进行覆盖和扩展。Bean Validation 是一个运行时的数据验证框架，在验证之后验证的错误信息会被马上返回。</p>\n</li>\n</ul>\n<h2 id=\"Hibernate-Validator-的作用\"><a href=\"#Hibernate-Validator-的作用\" class=\"headerlink\" title=\"Hibernate Validator 的作用\"></a>Hibernate Validator 的作用</h2><ol>\n<li>验证逻辑与业务逻辑之间进行了分离，降低了程序耦合度；</li>\n<li>统一且规范的验证方式，无需你再次编写重复的验证代码；</li>\n<li>你将更专注于你的业务，将这些繁琐的事情统统丢在一边。</li>\n</ol>\n<h2 id=\"spring-boot-结合hibernate来进行数据校验\"><a href=\"#spring-boot-结合hibernate来进行数据校验\" class=\"headerlink\" title=\"spring boot 结合hibernate来进行数据校验\"></a>spring boot 结合hibernate来进行数据校验</h2><p>项目中，主要用于接口api 的入参校验和 封装工具类 在代码中校验两种使用方式。</p>\n<p>引入jar包</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.com.siss<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-validate<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>使用 方法 ValidationUtils.validate(itemInfo);</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(value = &quot;demo&quot;, method = RequestMethod.GET)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">demo</span><span class=\"params\">(<span class=\"meta\">@RequestBody</span> ItemInfo itemInfo)</span> <span class=\"keyword\">throws</span> DataException </span>&#123;</span><br><span class=\"line\">        ValidationUtils.validate(itemInfo);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>常用注解有以下几种形式：</p>\n<p>|注解|支持的数据类型|作用|Hibernate元数据影响|<br>|:—:|:—:|:—:|:—:|:—:|<br>|@AssertFalse|Boolean, boolean|检查带注释的元素是否为  false|没有|<br>|@AssertTrue|Boolean, boolean|检查带注释的元素是否为  true|没有|<br>|@DecimalMax|BigDecimal，  BigInteger，  String，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持：任何子类型  Number。|被标注的值必须不大于约束中指定的最大值. 这个约束的参数是一个通过BigDecimal定义的最大值的字符串表示.|没有|<br>|@DecimalMin|BigDecimal，  BigInteger，  String，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持：任何子类型  Number。|被标注的值必须不小于约束中指定的最小值. 这个约束的参数是一个通过BigDecimal定义的最小值的字符串表示.|没有|<br>|@Digits（integer =，fraction =）|BigDecimal，  BigInteger，  String，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持：任何子类型  Number。|检查带注释的值是否是具有最多  integer 数字和  fraction 小数位的数字。    |对应的数据库表字段会被设置精度(precision)和准度(scale).|<br>|@Future|java.util.Date，  java.util.Calendar; 另外由HV支持，如果  Joda Time  日期/时间API在类路径上：任何ReadablePartial 和和的  实现  ReadableInstant。|检查给定的日期是否比现在晚.|没有|<br>|@Max|BigDecimal，  BigInteger，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持:(  String 评估由String表示的数值），任何子类型  Number|检查该值是否小于或等于约束条件中指定的最大值.|会给对应的数据库表字段添加一个check的约束条件.|<br>|@Min|BigDecimal，  BigInteger，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持:(  String 评估由String表示的数值），任何子类型  Number|检查该值是否大于或等于约束条件中规定的最小值.|会给对应的数据库表字段添加一个check的约束条件.|<br>|@NotNull|没有限制|检测该值 不能为空|对应的表字段不允许为null.|<br>|@Null|没有限制|为空||<br>|@Past|java.util.Date，  java.util.Calendar; 另外由HV支持，如果  Joda Time  日期/时间API在类路径上：任何ReadablePartial 和和的  实现  ReadableInstant。|检查标注对象中的值表示的日期比当前早.|没有|<br>|@Pattern(regex=, flag=)|String|检查该字符串是否能够在match指定的情况下被regex定义的正则表达式匹配.|没有|<br>|@Size(min=, max=)|检查该值在min max之间|对应的数据库表字段的长度会被设置成约束中定义的最大值.|没有|<br>|@Valid|任何非基本类型|递归的对关联对象进行校验, 如果关联对象是个集合或者数组, 那么对其中的元素进行递归校验,如果是一个map,则对其中的值部分进行校验.|没有|</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Hibernate-Validator-简介\"><a href=\"#Hibernate-Validator-简介\" class=\"headerlink\" title=\"Hibernate Validator 简介\"></a>Hibernate Validator 简介</h2><ul>\n<li><p>平时项目中，难免需要对参数 进行一些参数正确性的校验，这些校验出现在业务代码中，让我们的业务代码显得臃肿，而且，频繁的编写这类参数校验代码很无聊。鉴于此，觉得 Hibernate Validator 框架刚好解决了这些问题，可以很优雅的方式实现参数的校验，让业务代码 和 校验逻辑 分开,不再编写重复的校验逻辑。</p>\n</li>\n<li><p>Hibernate Validator 是 Bean Validation 的参考实现 . Hibernate Validator 提供了 JSR 303 规范中所有内置 constraint 的实现，除此之外还有一些附加的 constraint。<br>Bean Validation 为 JavaBean 验证定义了相应的元数据模型和API。缺省的元数据是 Java Annotations，通过使用 XML 可以对原有的元数据信息进行覆盖和扩展。Bean Validation 是一个运行时的数据验证框架，在验证之后验证的错误信息会被马上返回。</p>\n</li>\n</ul>\n<h2 id=\"Hibernate-Validator-的作用\"><a href=\"#Hibernate-Validator-的作用\" class=\"headerlink\" title=\"Hibernate Validator 的作用\"></a>Hibernate Validator 的作用</h2><ol>\n<li>验证逻辑与业务逻辑之间进行了分离，降低了程序耦合度；</li>\n<li>统一且规范的验证方式，无需你再次编写重复的验证代码；</li>\n<li>你将更专注于你的业务，将这些繁琐的事情统统丢在一边。</li>\n</ol>\n<h2 id=\"spring-boot-结合hibernate来进行数据校验\"><a href=\"#spring-boot-结合hibernate来进行数据校验\" class=\"headerlink\" title=\"spring boot 结合hibernate来进行数据校验\"></a>spring boot 结合hibernate来进行数据校验</h2><p>项目中，主要用于接口api 的入参校验和 封装工具类 在代码中校验两种使用方式。</p>\n<p>引入jar包</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.com.siss<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-validate<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>使用 方法 ValidationUtils.validate(itemInfo);</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(value = &quot;demo&quot;, method = RequestMethod.GET)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">demo</span><span class=\"params\">(<span class=\"meta\">@RequestBody</span> ItemInfo itemInfo)</span> <span class=\"keyword\">throws</span> DataException </span>&#123;</span><br><span class=\"line\">        ValidationUtils.validate(itemInfo);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>常用注解有以下几种形式：</p>\n<p>|注解|支持的数据类型|作用|Hibernate元数据影响|<br>|:—:|:—:|:—:|:—:|:—:|<br>|@AssertFalse|Boolean, boolean|检查带注释的元素是否为  false|没有|<br>|@AssertTrue|Boolean, boolean|检查带注释的元素是否为  true|没有|<br>|@DecimalMax|BigDecimal，  BigInteger，  String，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持：任何子类型  Number。|被标注的值必须不大于约束中指定的最大值. 这个约束的参数是一个通过BigDecimal定义的最大值的字符串表示.|没有|<br>|@DecimalMin|BigDecimal，  BigInteger，  String，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持：任何子类型  Number。|被标注的值必须不小于约束中指定的最小值. 这个约束的参数是一个通过BigDecimal定义的最小值的字符串表示.|没有|<br>|@Digits（integer =，fraction =）|BigDecimal，  BigInteger，  String，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持：任何子类型  Number。|检查带注释的值是否是具有最多  integer 数字和  fraction 小数位的数字。    |对应的数据库表字段会被设置精度(precision)和准度(scale).|<br>|@Future|java.util.Date，  java.util.Calendar; 另外由HV支持，如果  Joda Time  日期/时间API在类路径上：任何ReadablePartial 和和的  实现  ReadableInstant。|检查给定的日期是否比现在晚.|没有|<br>|@Max|BigDecimal，  BigInteger，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持:(  String 评估由String表示的数值），任何子类型  Number|检查该值是否小于或等于约束条件中指定的最大值.|会给对应的数据库表字段添加一个check的约束条件.|<br>|@Min|BigDecimal，  BigInteger，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持:(  String 评估由String表示的数值），任何子类型  Number|检查该值是否大于或等于约束条件中规定的最小值.|会给对应的数据库表字段添加一个check的约束条件.|<br>|@NotNull|没有限制|检测该值 不能为空|对应的表字段不允许为null.|<br>|@Null|没有限制|为空||<br>|@Past|java.util.Date，  java.util.Calendar; 另外由HV支持，如果  Joda Time  日期/时间API在类路径上：任何ReadablePartial 和和的  实现  ReadableInstant。|检查标注对象中的值表示的日期比当前早.|没有|<br>|@Pattern(regex=, flag=)|String|检查该字符串是否能够在match指定的情况下被regex定义的正则表达式匹配.|没有|<br>|@Size(min=, max=)|检查该值在min max之间|对应的数据库表字段的长度会被设置成约束中定义的最大值.|没有|<br>|@Valid|任何非基本类型|递归的对关联对象进行校验, 如果关联对象是个集合或者数组, 那么对其中的元素进行递归校验,如果是一个map,则对其中的值部分进行校验.|没有|</p>\n"},{"title":"SpringBoot 事务的管理","date":"2018-03-11T16:00:00.000Z","_content":"\n我们在开发企业应用时，对于业务人员的一个操作实际是对数据读写的多步操作的结合。由于数据操作在顺序执行的过程中，任何一步操作都有可能发生异常，异常会导致后续操作无法完成，此时由于业务逻辑并未正确的完成，之前成功操作数据的并不可靠，需要在这种情况下进行回退。\n\n事务的作用就是为了保证用户的每一个操作都是可靠的，事务中的每一步操作都必须成功执行，只要有发生异常就回退到事务开始未进行操作的状态。\n\n事务管理是Spring框架中最为常用的功能之一，我们在使用Spring Boot开发应用时，大部分情况下也都需要使用事务。\n\n在业务层使用 @Transactional 开启事务，执行数据库操作后抛出异常。具体代码如下：\n\n```java\n    @Transactional\n    public void addMoney() throws Exception {\n        //先增加余额\n        accountMapper.addMoney();\n        //然后遇到故障\n        throw new RuntimeException(\"发生异常了..\");\n    }\n```\n\n数据库层就很简单了，我们通过注解来实现账户数据的查询，具体如下：\n\n```java\npackage com.hehe.mapper;\n\n@Mapper\npublic interface AccountMapper {\n\n    @Select(\"select * from account where account_id=1\")\n    Account getAccount();\n\n    @Update(\"update account set balance = balance+100 where account_id=1\")\n    void addMoney();\n}\n```\n\n","source":"_posts/doc-dev/basics/transactional.md","raw":"---\ntitle: SpringBoot 事务的管理\ndate: 2018-03-12\n\n---\n\n我们在开发企业应用时，对于业务人员的一个操作实际是对数据读写的多步操作的结合。由于数据操作在顺序执行的过程中，任何一步操作都有可能发生异常，异常会导致后续操作无法完成，此时由于业务逻辑并未正确的完成，之前成功操作数据的并不可靠，需要在这种情况下进行回退。\n\n事务的作用就是为了保证用户的每一个操作都是可靠的，事务中的每一步操作都必须成功执行，只要有发生异常就回退到事务开始未进行操作的状态。\n\n事务管理是Spring框架中最为常用的功能之一，我们在使用Spring Boot开发应用时，大部分情况下也都需要使用事务。\n\n在业务层使用 @Transactional 开启事务，执行数据库操作后抛出异常。具体代码如下：\n\n```java\n    @Transactional\n    public void addMoney() throws Exception {\n        //先增加余额\n        accountMapper.addMoney();\n        //然后遇到故障\n        throw new RuntimeException(\"发生异常了..\");\n    }\n```\n\n数据库层就很简单了，我们通过注解来实现账户数据的查询，具体如下：\n\n```java\npackage com.hehe.mapper;\n\n@Mapper\npublic interface AccountMapper {\n\n    @Select(\"select * from account where account_id=1\")\n    Account getAccount();\n\n    @Update(\"update account set balance = balance+100 where account_id=1\")\n    void addMoney();\n}\n```\n\n","slug":"doc-dev/basics/transactional","published":1,"updated":"2021-03-09T14:25:28.759Z","_id":"ckm237zwb000b1mjrd99000ay","comments":1,"layout":"post","photos":[],"link":"","content":"<p>我们在开发企业应用时，对于业务人员的一个操作实际是对数据读写的多步操作的结合。由于数据操作在顺序执行的过程中，任何一步操作都有可能发生异常，异常会导致后续操作无法完成，此时由于业务逻辑并未正确的完成，之前成功操作数据的并不可靠，需要在这种情况下进行回退。</p>\n<p>事务的作用就是为了保证用户的每一个操作都是可靠的，事务中的每一步操作都必须成功执行，只要有发生异常就回退到事务开始未进行操作的状态。</p>\n<p>事务管理是Spring框架中最为常用的功能之一，我们在使用Spring Boot开发应用时，大部分情况下也都需要使用事务。</p>\n<p>在业务层使用 @Transactional 开启事务，执行数据库操作后抛出异常。具体代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Transactional</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addMoney</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//先增加余额</span></span><br><span class=\"line\">    accountMapper.addMoney();</span><br><span class=\"line\">    <span class=\"comment\">//然后遇到故障</span></span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">&quot;发生异常了..&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>数据库层就很简单了，我们通过注解来实现账户数据的查询，具体如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hehe.mapper;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Mapper</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">AccountMapper</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Select(&quot;select * from account where account_id=1&quot;)</span></span><br><span class=\"line\">    <span class=\"function\">Account <span class=\"title\">getAccount</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Update(&quot;update account set balance = balance+100 where account_id=1&quot;)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">addMoney</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>我们在开发企业应用时，对于业务人员的一个操作实际是对数据读写的多步操作的结合。由于数据操作在顺序执行的过程中，任何一步操作都有可能发生异常，异常会导致后续操作无法完成，此时由于业务逻辑并未正确的完成，之前成功操作数据的并不可靠，需要在这种情况下进行回退。</p>\n<p>事务的作用就是为了保证用户的每一个操作都是可靠的，事务中的每一步操作都必须成功执行，只要有发生异常就回退到事务开始未进行操作的状态。</p>\n<p>事务管理是Spring框架中最为常用的功能之一，我们在使用Spring Boot开发应用时，大部分情况下也都需要使用事务。</p>\n<p>在业务层使用 @Transactional 开启事务，执行数据库操作后抛出异常。具体代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Transactional</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addMoney</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//先增加余额</span></span><br><span class=\"line\">    accountMapper.addMoney();</span><br><span class=\"line\">    <span class=\"comment\">//然后遇到故障</span></span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">&quot;发生异常了..&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>数据库层就很简单了，我们通过注解来实现账户数据的查询，具体如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hehe.mapper;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Mapper</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">AccountMapper</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Select(&quot;select * from account where account_id=1&quot;)</span></span><br><span class=\"line\">    <span class=\"function\">Account <span class=\"title\">getAccount</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Update(&quot;update account set balance = balance+100 where account_id=1&quot;)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">addMoney</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"阿里K8S节点初始化","date":"2019-03-11T16:00:00.000Z","_content":"\n## 修改默认DNS\n\n```bash\ncd /etc/sysconfig/network-scripts\n# 增加默认搜索域为siss.aliyun,并配置DNS为内部的DNS\necho -e  \"DOMAIN=siss.aliyun\\nDNS1=172.18.171.109\\nDNS2=172.18.171.113\" >> ifcfg-eth0\n# 重启网络\nsystemctl restart network\n```\n\n## 安装监控组件Zabbix Agent\n\n```bash\nrpm -ivh https://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm\nyum install zabbix-agent -y\n```\n\n### 替换默认配置\n\n```bash\n# 替换默认的日志文件轮替\nsed -i 's/LogFileSize=0/LogFileSize=1/g' /etc/zabbix/zabbix_agentd.conf\n# 替换默认的127.0.0.1\nsed -i 's/127.0.0.1/zabbix.siss.aliyun/g' /etc/zabbix/zabbix_agentd.conf\n# 替换Hostname\nsed -i \"s/Hostname=Zabbix server/Hostname=$(hostname)/g\" /etc/zabbix/zabbix_agentd.conf\n# 替换HostMeta\nsed -i 's/# HostMetadata=/HostMetadata=linux/g' /etc/zabbix/zabbix_agentd.conf\n# 启动服务\nsystemctl restart zabbix-agent&&systemctl enable zabbix-agent\n```\n\n## 系统日志远端收集\n\n修改系统的rsyslog，将本地日志发送至远端\n\n```bash\n# vim /etc/rsyslog.conf\n...\n# 添加至文件最后\n*.*    @graylog.siss.aliyun:514;RSYSLOG_SyslogProtocol23Format\n\n# 重启服务\nsystemctl restart rsyslog\n```","source":"_posts/doc-dev/ops/k8s-node.md","raw":"---\ntitle: 阿里K8S节点初始化\ndate: 2019-03-12\n\n---\n\n## 修改默认DNS\n\n```bash\ncd /etc/sysconfig/network-scripts\n# 增加默认搜索域为siss.aliyun,并配置DNS为内部的DNS\necho -e  \"DOMAIN=siss.aliyun\\nDNS1=172.18.171.109\\nDNS2=172.18.171.113\" >> ifcfg-eth0\n# 重启网络\nsystemctl restart network\n```\n\n## 安装监控组件Zabbix Agent\n\n```bash\nrpm -ivh https://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm\nyum install zabbix-agent -y\n```\n\n### 替换默认配置\n\n```bash\n# 替换默认的日志文件轮替\nsed -i 's/LogFileSize=0/LogFileSize=1/g' /etc/zabbix/zabbix_agentd.conf\n# 替换默认的127.0.0.1\nsed -i 's/127.0.0.1/zabbix.siss.aliyun/g' /etc/zabbix/zabbix_agentd.conf\n# 替换Hostname\nsed -i \"s/Hostname=Zabbix server/Hostname=$(hostname)/g\" /etc/zabbix/zabbix_agentd.conf\n# 替换HostMeta\nsed -i 's/# HostMetadata=/HostMetadata=linux/g' /etc/zabbix/zabbix_agentd.conf\n# 启动服务\nsystemctl restart zabbix-agent&&systemctl enable zabbix-agent\n```\n\n## 系统日志远端收集\n\n修改系统的rsyslog，将本地日志发送至远端\n\n```bash\n# vim /etc/rsyslog.conf\n...\n# 添加至文件最后\n*.*    @graylog.siss.aliyun:514;RSYSLOG_SyslogProtocol23Format\n\n# 重启服务\nsystemctl restart rsyslog\n```","slug":"doc-dev/ops/k8s-node","published":1,"updated":"2021-03-09T14:26:08.687Z","_id":"ckm237zwf000h1mjr2505eyb4","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"修改默认DNS\"><a href=\"#修改默认DNS\" class=\"headerlink\" title=\"修改默认DNS\"></a>修改默认DNS</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /etc/sysconfig/network-scripts</span><br><span class=\"line\"><span class=\"comment\"># 增加默认搜索域为siss.aliyun,并配置DNS为内部的DNS</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e  <span class=\"string\">&quot;DOMAIN=siss.aliyun\\nDNS1=172.18.171.109\\nDNS2=172.18.171.113&quot;</span> &gt;&gt; ifcfg-eth0</span><br><span class=\"line\"><span class=\"comment\"># 重启网络</span></span><br><span class=\"line\">systemctl restart network</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装监控组件Zabbix-Agent\"><a href=\"#安装监控组件Zabbix-Agent\" class=\"headerlink\" title=\"安装监控组件Zabbix Agent\"></a>安装监控组件Zabbix Agent</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -ivh https://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm</span><br><span class=\"line\">yum install zabbix-agent -y</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"替换默认配置\"><a href=\"#替换默认配置\" class=\"headerlink\" title=\"替换默认配置\"></a>替换默认配置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 替换默认的日志文件轮替</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s/LogFileSize=0/LogFileSize=1/g&#x27;</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class=\"line\"><span class=\"comment\"># 替换默认的127.0.0.1</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s/127.0.0.1/zabbix.siss.aliyun/g&#x27;</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class=\"line\"><span class=\"comment\"># 替换Hostname</span></span><br><span class=\"line\">sed -i <span class=\"string\">&quot;s/Hostname=Zabbix server/Hostname=<span class=\"subst\">$(hostname)</span>/g&quot;</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class=\"line\"><span class=\"comment\"># 替换HostMeta</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s/# HostMetadata=/HostMetadata=linux/g&#x27;</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class=\"line\"><span class=\"comment\"># 启动服务</span></span><br><span class=\"line\">systemctl restart zabbix-agent&amp;&amp;systemctl <span class=\"built_in\">enable</span> zabbix-agent</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"系统日志远端收集\"><a href=\"#系统日志远端收集\" class=\"headerlink\" title=\"系统日志远端收集\"></a>系统日志远端收集</h2><p>修改系统的rsyslog，将本地日志发送至远端</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># vim /etc/rsyslog.conf</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"comment\"># 添加至文件最后</span></span><br><span class=\"line\">*.*    @graylog.siss.aliyun:514;RSYSLOG_SyslogProtocol23Format</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启服务</span></span><br><span class=\"line\">systemctl restart rsyslog</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"修改默认DNS\"><a href=\"#修改默认DNS\" class=\"headerlink\" title=\"修改默认DNS\"></a>修改默认DNS</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /etc/sysconfig/network-scripts</span><br><span class=\"line\"><span class=\"comment\"># 增加默认搜索域为siss.aliyun,并配置DNS为内部的DNS</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e  <span class=\"string\">&quot;DOMAIN=siss.aliyun\\nDNS1=172.18.171.109\\nDNS2=172.18.171.113&quot;</span> &gt;&gt; ifcfg-eth0</span><br><span class=\"line\"><span class=\"comment\"># 重启网络</span></span><br><span class=\"line\">systemctl restart network</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装监控组件Zabbix-Agent\"><a href=\"#安装监控组件Zabbix-Agent\" class=\"headerlink\" title=\"安装监控组件Zabbix Agent\"></a>安装监控组件Zabbix Agent</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -ivh https://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm</span><br><span class=\"line\">yum install zabbix-agent -y</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"替换默认配置\"><a href=\"#替换默认配置\" class=\"headerlink\" title=\"替换默认配置\"></a>替换默认配置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 替换默认的日志文件轮替</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s/LogFileSize=0/LogFileSize=1/g&#x27;</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class=\"line\"><span class=\"comment\"># 替换默认的127.0.0.1</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s/127.0.0.1/zabbix.siss.aliyun/g&#x27;</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class=\"line\"><span class=\"comment\"># 替换Hostname</span></span><br><span class=\"line\">sed -i <span class=\"string\">&quot;s/Hostname=Zabbix server/Hostname=<span class=\"subst\">$(hostname)</span>/g&quot;</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class=\"line\"><span class=\"comment\"># 替换HostMeta</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s/# HostMetadata=/HostMetadata=linux/g&#x27;</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class=\"line\"><span class=\"comment\"># 启动服务</span></span><br><span class=\"line\">systemctl restart zabbix-agent&amp;&amp;systemctl <span class=\"built_in\">enable</span> zabbix-agent</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"系统日志远端收集\"><a href=\"#系统日志远端收集\" class=\"headerlink\" title=\"系统日志远端收集\"></a>系统日志远端收集</h2><p>修改系统的rsyslog，将本地日志发送至远端</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># vim /etc/rsyslog.conf</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"comment\"># 添加至文件最后</span></span><br><span class=\"line\">*.*    @graylog.siss.aliyun:514;RSYSLOG_SyslogProtocol23Format</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启服务</span></span><br><span class=\"line\">systemctl restart rsyslog</span><br></pre></td></tr></table></figure>"},{"title":"操作系统标准化","date":"2019-03-11T16:00:00.000Z","_content":"\n## 使用内部DNS服务器\n\n```bash\necho  \"nameserver 172.18.171.113\" > /etc/resolv.conf\necho  \"nameserver 172.18.171.109\" >> /etc/resolv.conf\n# 另外需要将网卡配置加上本地DNS配置，防止重启丢失DNS\n```\n\n## 内核参数调整\n\n```bash\nvim /etc/sysctl.d/110-siss.conf\n\n# IPv4转发开启\nnet.ipv4.ip_forward = 1\n\n# 开启TCP连接中TIME-WAIT sockets的快速回收\nnet.ipv4.tcp_tw_recycle = 1\n\n# 开启TCP连接复用\nnet.ipv4.tcp_tw_reuse = 1\n\n# 开启对于TCP时间戳的支持\nnet.ipv4.tcp_timestamps = 1\n\n# 出现SYN等待队列溢出时启用cookie处理，防范少量的SYN攻击。\nnet.ipv4.tcp_syncookies = 1\n\n# 本地发起连接的端口范围\nnet.ipv4.ip_local_port_range = 1024 65000\n\n# 监听端口的最大队列长度\nnet.core.somaxconn = 16384\n\n# 应用参数\nsysctl -p /etc/sysct.d/110-siss.conf\n```\n\n## 数据卷使用LVM，并独立挂载\n\n```bash\n# 查看系统所有磁盘\nfdisk -l\n\n#假设空白磁盘为/dev/xvdc,建立PV/VG/LV\npvcreate /dev/xvdc  && vgcreate data /dev/xvdc\nlvcreate -n data -l 100%VG data && mkfs.xfs /dev/data/data\n\nmkidr /data\necho \"/dev/data/data  /data  xfs  defaults 1 1\" >> /etc/fstab\nmount -a\n```\n\n## 基础包安装\n\n```bash\n  curl https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo > docker-ce.repo\n  rpm -ivh https://mirrors.aliyun.com/zabbix/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm\n  yum install docker-ce vmstatus  zabbix-agent  -y\n```\n\n## Docker默认参数修改\n\n```bash\nvim /etc/docker/daemon.json\n{\n  \"log-driver\": \"json-file\",\n  \"log-opt\": {\n    \"max-file\": \"10\",\n    \"max-size\": \"10M\"\n  },\n  \"data-root\": \"/data/docker\"\n}\n```\n\n## 文件资源限制修改\n\n```bash\nvim /etc/security/limits.conf\n* soft nofile 65536\n* hard nofile 65536\n* soft nproc  65536\n* soft nproc  65536\n```\n\n## 系统日志收集与调整\n\n- 限制默认`journald`产生的日志大小，防止撑爆磁盘\n\n```bash\nvim /etc/systemd/journald.conf\nSystemMaxUse=50M\nRuntimeMaxUse=50M\nSystemMaxFiles=10\nRuntimeMaxFiles=10\n```\n\n- 默认`rsyslog`日志发送到统一日志收集器(`graylog2`)\n\n```bash\nvim /etc/rsyslog.conf\n# graylog.siss.io为GrayLog服务器地址\n*.*    @graylog.siss.io:514;RSYSLOG_SyslogProtocol23Format\nsystemctl restart rsyslog\n```\n\n## Ansible公钥预存放\n\n## 脚本下载\n\n[centos7_init.sh](./pkg/centos7_init.sh)","source":"_posts/doc-dev/ops/standard.md","raw":"---\ntitle: 操作系统标准化\ndate: 2019-03-12\n\n---\n\n## 使用内部DNS服务器\n\n```bash\necho  \"nameserver 172.18.171.113\" > /etc/resolv.conf\necho  \"nameserver 172.18.171.109\" >> /etc/resolv.conf\n# 另外需要将网卡配置加上本地DNS配置，防止重启丢失DNS\n```\n\n## 内核参数调整\n\n```bash\nvim /etc/sysctl.d/110-siss.conf\n\n# IPv4转发开启\nnet.ipv4.ip_forward = 1\n\n# 开启TCP连接中TIME-WAIT sockets的快速回收\nnet.ipv4.tcp_tw_recycle = 1\n\n# 开启TCP连接复用\nnet.ipv4.tcp_tw_reuse = 1\n\n# 开启对于TCP时间戳的支持\nnet.ipv4.tcp_timestamps = 1\n\n# 出现SYN等待队列溢出时启用cookie处理，防范少量的SYN攻击。\nnet.ipv4.tcp_syncookies = 1\n\n# 本地发起连接的端口范围\nnet.ipv4.ip_local_port_range = 1024 65000\n\n# 监听端口的最大队列长度\nnet.core.somaxconn = 16384\n\n# 应用参数\nsysctl -p /etc/sysct.d/110-siss.conf\n```\n\n## 数据卷使用LVM，并独立挂载\n\n```bash\n# 查看系统所有磁盘\nfdisk -l\n\n#假设空白磁盘为/dev/xvdc,建立PV/VG/LV\npvcreate /dev/xvdc  && vgcreate data /dev/xvdc\nlvcreate -n data -l 100%VG data && mkfs.xfs /dev/data/data\n\nmkidr /data\necho \"/dev/data/data  /data  xfs  defaults 1 1\" >> /etc/fstab\nmount -a\n```\n\n## 基础包安装\n\n```bash\n  curl https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo > docker-ce.repo\n  rpm -ivh https://mirrors.aliyun.com/zabbix/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm\n  yum install docker-ce vmstatus  zabbix-agent  -y\n```\n\n## Docker默认参数修改\n\n```bash\nvim /etc/docker/daemon.json\n{\n  \"log-driver\": \"json-file\",\n  \"log-opt\": {\n    \"max-file\": \"10\",\n    \"max-size\": \"10M\"\n  },\n  \"data-root\": \"/data/docker\"\n}\n```\n\n## 文件资源限制修改\n\n```bash\nvim /etc/security/limits.conf\n* soft nofile 65536\n* hard nofile 65536\n* soft nproc  65536\n* soft nproc  65536\n```\n\n## 系统日志收集与调整\n\n- 限制默认`journald`产生的日志大小，防止撑爆磁盘\n\n```bash\nvim /etc/systemd/journald.conf\nSystemMaxUse=50M\nRuntimeMaxUse=50M\nSystemMaxFiles=10\nRuntimeMaxFiles=10\n```\n\n- 默认`rsyslog`日志发送到统一日志收集器(`graylog2`)\n\n```bash\nvim /etc/rsyslog.conf\n# graylog.siss.io为GrayLog服务器地址\n*.*    @graylog.siss.io:514;RSYSLOG_SyslogProtocol23Format\nsystemctl restart rsyslog\n```\n\n## Ansible公钥预存放\n\n## 脚本下载\n\n[centos7_init.sh](./pkg/centos7_init.sh)","slug":"doc-dev/ops/standard","published":1,"updated":"2021-03-09T14:26:12.864Z","_id":"ckm237zwg000i1mjrbofjfgkq","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"使用内部DNS服务器\"><a href=\"#使用内部DNS服务器\" class=\"headerlink\" title=\"使用内部DNS服务器\"></a>使用内部DNS服务器</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span>  <span class=\"string\">&quot;nameserver 172.18.171.113&quot;</span> &gt; /etc/resolv.conf</span><br><span class=\"line\"><span class=\"built_in\">echo</span>  <span class=\"string\">&quot;nameserver 172.18.171.109&quot;</span> &gt;&gt; /etc/resolv.conf</span><br><span class=\"line\"><span class=\"comment\"># 另外需要将网卡配置加上本地DNS配置，防止重启丢失DNS</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"内核参数调整\"><a href=\"#内核参数调整\" class=\"headerlink\" title=\"内核参数调整\"></a>内核参数调整</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/sysctl.d/110-siss.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># IPv4转发开启</span></span><br><span class=\"line\">net.ipv4.ip_forward = 1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开启TCP连接中TIME-WAIT sockets的快速回收</span></span><br><span class=\"line\">net.ipv4.tcp_tw_recycle = 1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开启TCP连接复用</span></span><br><span class=\"line\">net.ipv4.tcp_tw_reuse = 1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开启对于TCP时间戳的支持</span></span><br><span class=\"line\">net.ipv4.tcp_timestamps = 1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 出现SYN等待队列溢出时启用cookie处理，防范少量的SYN攻击。</span></span><br><span class=\"line\">net.ipv4.tcp_syncookies = 1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 本地发起连接的端口范围</span></span><br><span class=\"line\">net.ipv4.ip_local_port_range = 1024 65000</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 监听端口的最大队列长度</span></span><br><span class=\"line\">net.core.somaxconn = 16384</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 应用参数</span></span><br><span class=\"line\">sysctl -p /etc/sysct.d/110-siss.conf</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数据卷使用LVM，并独立挂载\"><a href=\"#数据卷使用LVM，并独立挂载\" class=\"headerlink\" title=\"数据卷使用LVM，并独立挂载\"></a>数据卷使用LVM，并独立挂载</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看系统所有磁盘</span></span><br><span class=\"line\">fdisk -l</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#假设空白磁盘为/dev/xvdc,建立PV/VG/LV</span></span><br><span class=\"line\">pvcreate /dev/xvdc  &amp;&amp; vgcreate data /dev/xvdc</span><br><span class=\"line\">lvcreate -n data -l 100%VG data &amp;&amp; mkfs.xfs /dev/data/data</span><br><span class=\"line\"></span><br><span class=\"line\">mkidr /data</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;/dev/data/data  /data  xfs  defaults 1 1&quot;</span> &gt;&gt; /etc/fstab</span><br><span class=\"line\">mount -a</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"基础包安装\"><a href=\"#基础包安装\" class=\"headerlink\" title=\"基础包安装\"></a>基础包安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo &gt; docker-ce.repo</span><br><span class=\"line\">rpm -ivh https://mirrors.aliyun.com/zabbix/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm</span><br><span class=\"line\">yum install docker-ce vmstatus  zabbix-agent  -y</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Docker默认参数修改\"><a href=\"#Docker默认参数修改\" class=\"headerlink\" title=\"Docker默认参数修改\"></a>Docker默认参数修改</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/docker/daemon.json</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;log-driver&quot;</span>: <span class=\"string\">&quot;json-file&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;log-opt&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;max-file&quot;</span>: <span class=\"string\">&quot;10&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;max-size&quot;</span>: <span class=\"string\">&quot;10M&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&quot;data-root&quot;</span>: <span class=\"string\">&quot;/data/docker&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文件资源限制修改\"><a href=\"#文件资源限制修改\" class=\"headerlink\" title=\"文件资源限制修改\"></a>文件资源限制修改</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/security/limits.conf</span><br><span class=\"line\">* soft nofile 65536</span><br><span class=\"line\">* hard nofile 65536</span><br><span class=\"line\">* soft nproc  65536</span><br><span class=\"line\">* soft nproc  65536</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"系统日志收集与调整\"><a href=\"#系统日志收集与调整\" class=\"headerlink\" title=\"系统日志收集与调整\"></a>系统日志收集与调整</h2><ul>\n<li>限制默认<code>journald</code>产生的日志大小，防止撑爆磁盘</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/systemd/journald.conf</span><br><span class=\"line\">SystemMaxUse=50M</span><br><span class=\"line\">RuntimeMaxUse=50M</span><br><span class=\"line\">SystemMaxFiles=10</span><br><span class=\"line\">RuntimeMaxFiles=10</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>默认<code>rsyslog</code>日志发送到统一日志收集器(<code>graylog2</code>)</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/rsyslog.conf</span><br><span class=\"line\"><span class=\"comment\"># graylog.siss.io为GrayLog服务器地址</span></span><br><span class=\"line\">*.*    @graylog.siss.io:514;RSYSLOG_SyslogProtocol23Format</span><br><span class=\"line\">systemctl restart rsyslog</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Ansible公钥预存放\"><a href=\"#Ansible公钥预存放\" class=\"headerlink\" title=\"Ansible公钥预存放\"></a>Ansible公钥预存放</h2><h2 id=\"脚本下载\"><a href=\"#脚本下载\" class=\"headerlink\" title=\"脚本下载\"></a>脚本下载</h2><p><a href=\"./pkg/centos7_init.sh\">centos7_init.sh</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"使用内部DNS服务器\"><a href=\"#使用内部DNS服务器\" class=\"headerlink\" title=\"使用内部DNS服务器\"></a>使用内部DNS服务器</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span>  <span class=\"string\">&quot;nameserver 172.18.171.113&quot;</span> &gt; /etc/resolv.conf</span><br><span class=\"line\"><span class=\"built_in\">echo</span>  <span class=\"string\">&quot;nameserver 172.18.171.109&quot;</span> &gt;&gt; /etc/resolv.conf</span><br><span class=\"line\"><span class=\"comment\"># 另外需要将网卡配置加上本地DNS配置，防止重启丢失DNS</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"内核参数调整\"><a href=\"#内核参数调整\" class=\"headerlink\" title=\"内核参数调整\"></a>内核参数调整</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/sysctl.d/110-siss.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># IPv4转发开启</span></span><br><span class=\"line\">net.ipv4.ip_forward = 1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开启TCP连接中TIME-WAIT sockets的快速回收</span></span><br><span class=\"line\">net.ipv4.tcp_tw_recycle = 1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开启TCP连接复用</span></span><br><span class=\"line\">net.ipv4.tcp_tw_reuse = 1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开启对于TCP时间戳的支持</span></span><br><span class=\"line\">net.ipv4.tcp_timestamps = 1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 出现SYN等待队列溢出时启用cookie处理，防范少量的SYN攻击。</span></span><br><span class=\"line\">net.ipv4.tcp_syncookies = 1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 本地发起连接的端口范围</span></span><br><span class=\"line\">net.ipv4.ip_local_port_range = 1024 65000</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 监听端口的最大队列长度</span></span><br><span class=\"line\">net.core.somaxconn = 16384</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 应用参数</span></span><br><span class=\"line\">sysctl -p /etc/sysct.d/110-siss.conf</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数据卷使用LVM，并独立挂载\"><a href=\"#数据卷使用LVM，并独立挂载\" class=\"headerlink\" title=\"数据卷使用LVM，并独立挂载\"></a>数据卷使用LVM，并独立挂载</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看系统所有磁盘</span></span><br><span class=\"line\">fdisk -l</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#假设空白磁盘为/dev/xvdc,建立PV/VG/LV</span></span><br><span class=\"line\">pvcreate /dev/xvdc  &amp;&amp; vgcreate data /dev/xvdc</span><br><span class=\"line\">lvcreate -n data -l 100%VG data &amp;&amp; mkfs.xfs /dev/data/data</span><br><span class=\"line\"></span><br><span class=\"line\">mkidr /data</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;/dev/data/data  /data  xfs  defaults 1 1&quot;</span> &gt;&gt; /etc/fstab</span><br><span class=\"line\">mount -a</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"基础包安装\"><a href=\"#基础包安装\" class=\"headerlink\" title=\"基础包安装\"></a>基础包安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo &gt; docker-ce.repo</span><br><span class=\"line\">rpm -ivh https://mirrors.aliyun.com/zabbix/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm</span><br><span class=\"line\">yum install docker-ce vmstatus  zabbix-agent  -y</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Docker默认参数修改\"><a href=\"#Docker默认参数修改\" class=\"headerlink\" title=\"Docker默认参数修改\"></a>Docker默认参数修改</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/docker/daemon.json</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;log-driver&quot;</span>: <span class=\"string\">&quot;json-file&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;log-opt&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;max-file&quot;</span>: <span class=\"string\">&quot;10&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;max-size&quot;</span>: <span class=\"string\">&quot;10M&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&quot;data-root&quot;</span>: <span class=\"string\">&quot;/data/docker&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文件资源限制修改\"><a href=\"#文件资源限制修改\" class=\"headerlink\" title=\"文件资源限制修改\"></a>文件资源限制修改</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/security/limits.conf</span><br><span class=\"line\">* soft nofile 65536</span><br><span class=\"line\">* hard nofile 65536</span><br><span class=\"line\">* soft nproc  65536</span><br><span class=\"line\">* soft nproc  65536</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"系统日志收集与调整\"><a href=\"#系统日志收集与调整\" class=\"headerlink\" title=\"系统日志收集与调整\"></a>系统日志收集与调整</h2><ul>\n<li>限制默认<code>journald</code>产生的日志大小，防止撑爆磁盘</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/systemd/journald.conf</span><br><span class=\"line\">SystemMaxUse=50M</span><br><span class=\"line\">RuntimeMaxUse=50M</span><br><span class=\"line\">SystemMaxFiles=10</span><br><span class=\"line\">RuntimeMaxFiles=10</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>默认<code>rsyslog</code>日志发送到统一日志收集器(<code>graylog2</code>)</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/rsyslog.conf</span><br><span class=\"line\"><span class=\"comment\"># graylog.siss.io为GrayLog服务器地址</span></span><br><span class=\"line\">*.*    @graylog.siss.io:514;RSYSLOG_SyslogProtocol23Format</span><br><span class=\"line\">systemctl restart rsyslog</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Ansible公钥预存放\"><a href=\"#Ansible公钥预存放\" class=\"headerlink\" title=\"Ansible公钥预存放\"></a>Ansible公钥预存放</h2><h2 id=\"脚本下载\"><a href=\"#脚本下载\" class=\"headerlink\" title=\"脚本下载\"></a>脚本下载</h2><p><a href=\"./pkg/centos7_init.sh\">centos7_init.sh</a></p>\n"},{"title":"本地开发环境基础服务支持使用DNS设置方法","date":"2019-03-11T16:00:00.000Z","_content":"\n## 修改Windows设置\n\n进入控制面板---->网络连接--->本地连接\n\n![网络连接](img/network.jpg)\n\n在弹出的菜单中，点击属性按钮\n![属性](img/proper.jpg)\n\n弹出的菜单中，先选中Internet协议版本4---再点击属性\n![ipv4属性](img/ipv4.jpg)\n\n将首选DNS修改为128.0.100.170\n![dns](img/dns.jpg)\n\n再点击高级按钮,弹出的对话框切换到DNS选项卡，如下图所示\n![高级](img/adv.jpg)\n\n选中附加这些DNS后续，再点击添加。添加完成后再点击确定，最后依次关闭当前窗口\n![添加默认搜索域](img/add.jpg)\n\n## 测试\n\n打开终端命令行窗口，执行`ping mysql-dev`,应该会自动将`mysql-dev`转换为`mysql-dev.siss.io`该域名，并正确返回IP地址\n![ping](img/ping.jpg)\n\n附:\n[开发环境信息](../serviceinfo/dev.md)\n","source":"_posts/doc-dev/ops/use_dns.md","raw":"---\ntitle: 本地开发环境基础服务支持使用DNS设置方法\ndate: 2019-03-12\n\n---\n\n## 修改Windows设置\n\n进入控制面板---->网络连接--->本地连接\n\n![网络连接](img/network.jpg)\n\n在弹出的菜单中，点击属性按钮\n![属性](img/proper.jpg)\n\n弹出的菜单中，先选中Internet协议版本4---再点击属性\n![ipv4属性](img/ipv4.jpg)\n\n将首选DNS修改为128.0.100.170\n![dns](img/dns.jpg)\n\n再点击高级按钮,弹出的对话框切换到DNS选项卡，如下图所示\n![高级](img/adv.jpg)\n\n选中附加这些DNS后续，再点击添加。添加完成后再点击确定，最后依次关闭当前窗口\n![添加默认搜索域](img/add.jpg)\n\n## 测试\n\n打开终端命令行窗口，执行`ping mysql-dev`,应该会自动将`mysql-dev`转换为`mysql-dev.siss.io`该域名，并正确返回IP地址\n![ping](img/ping.jpg)\n\n附:\n[开发环境信息](../serviceinfo/dev.md)\n","slug":"doc-dev/ops/use_dns","published":1,"updated":"2021-03-09T14:26:16.893Z","_id":"ckm237zwh000j1mjr3q4y31k0","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"修改Windows设置\"><a href=\"#修改Windows设置\" class=\"headerlink\" title=\"修改Windows设置\"></a>修改Windows设置</h2><p>进入控制面板—-&gt;网络连接—&gt;本地连接</p>\n<p><img src=\"img/network.jpg\" alt=\"网络连接\"></p>\n<p>在弹出的菜单中，点击属性按钮<br><img src=\"img/proper.jpg\" alt=\"属性\"></p>\n<p>弹出的菜单中，先选中Internet协议版本4—再点击属性<br><img src=\"img/ipv4.jpg\" alt=\"ipv4属性\"></p>\n<p>将首选DNS修改为128.0.100.170<br><img src=\"img/dns.jpg\" alt=\"dns\"></p>\n<p>再点击高级按钮,弹出的对话框切换到DNS选项卡，如下图所示<br><img src=\"img/adv.jpg\" alt=\"高级\"></p>\n<p>选中附加这些DNS后续，再点击添加。添加完成后再点击确定，最后依次关闭当前窗口<br><img src=\"img/add.jpg\" alt=\"添加默认搜索域\"></p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>打开终端命令行窗口，执行<code>ping mysql-dev</code>,应该会自动将<code>mysql-dev</code>转换为<code>mysql-dev.siss.io</code>该域名，并正确返回IP地址<br><img src=\"img/ping.jpg\" alt=\"ping\"></p>\n<p>附:<br><a href=\"../serviceinfo/dev.md\">开发环境信息</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"修改Windows设置\"><a href=\"#修改Windows设置\" class=\"headerlink\" title=\"修改Windows设置\"></a>修改Windows设置</h2><p>进入控制面板—-&gt;网络连接—&gt;本地连接</p>\n<p><img src=\"img/network.jpg\" alt=\"网络连接\"></p>\n<p>在弹出的菜单中，点击属性按钮<br><img src=\"img/proper.jpg\" alt=\"属性\"></p>\n<p>弹出的菜单中，先选中Internet协议版本4—再点击属性<br><img src=\"img/ipv4.jpg\" alt=\"ipv4属性\"></p>\n<p>将首选DNS修改为128.0.100.170<br><img src=\"img/dns.jpg\" alt=\"dns\"></p>\n<p>再点击高级按钮,弹出的对话框切换到DNS选项卡，如下图所示<br><img src=\"img/adv.jpg\" alt=\"高级\"></p>\n<p>选中附加这些DNS后续，再点击添加。添加完成后再点击确定，最后依次关闭当前窗口<br><img src=\"img/add.jpg\" alt=\"添加默认搜索域\"></p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>打开终端命令行窗口，执行<code>ping mysql-dev</code>,应该会自动将<code>mysql-dev</code>转换为<code>mysql-dev.siss.io</code>该域名，并正确返回IP地址<br><img src=\"img/ping.jpg\" alt=\"ping\"></p>\n<p>附:<br><a href=\"../serviceinfo/dev.md\">开发环境信息</a></p>\n"},{"title":"本地YUM源搭建","date":"2019-03-11T16:00:00.000Z","_content":"\nLinux系统的包管理是`yum`。默认刚安装好的系统一般都是从CentOS官方下载相关软件包，这样就会浪费很多带宽。\n\n## 服务端配置\n\n```bash\n# 安装yum-utils\nyum install yum-utils createrepo  nginx -y\n\n# 准备存储YUM源数据的文件夹\nmkdir -p /data/yumdata\n```\n\n同步脚本下载\n\n[syncRepo.sh](./pkg/syncRepo.sh)\n\n```bash\nyum repolist\n```\n\n![yum repolist](img/yumlist.png)\n\n```bash\n# 执行脚本，同步yum源以及生成yum源数据\ncd /data/yumdata\nchmod +x syncRepo.sh\nsh syncRepos.h\n\n# 修改NGINX配置文件,将同步至本地的YUM通过HTTP给内部使用\nvi /etc/nginx/nginx.conf\n...\nlocation / {\n    autoindex on;\n    root /data/yumdata/;\n}\n\n# 开启NGINX\nsystemctl enable nginx && systemctl start nginx\n\n# 加入定时任务，每天自动同上层yu\nvim /etc/crontab\n2 3 * * * root /data/yumdata/syncRepo.sh\n```\n\n## 客户端配置\n\n1. 先备份系统原有的repo文件\n\n    ```bash\n    cd /etc/yum.repos.d && mkdir backup\n    mv *.repo backup\n    ```\n\n2. 在/etc/yum.repos.d/目录下新建本地YUM源的文件\n\n   ```bash\n   vim /etc/yum.repos.d/local.repo\n\n   [centos-base]\n   name=CentOS-Base\n   baseurl=http://128.0.100.170/base/\n   enable=1\n   gpgcheck=0\n\n   [centos-update]\n   name=CentOS-Update\n   baseurl=http://128.0.100.170/updates/\n   enable=1\n   gpgcheck=0\n\n   [centos-extrals]\n   name=CentOS-Extrals\n   baseurl=http://128.0.100.170/extras/\n   enable=1\n   gpgcheck=0\n\n   [centos-epel]\n   name=CentOS-EPEL\n   baseurl=http://128.0.100.170/epel/\n   enable=1\n   gpgcheck=0\n\n   [docker-ce]\n   name=Docker-CE\n   baseurl=http://128.0.100.170/docker-ce/\n   enable=1\n   gpgcheck=0\n   ```","source":"_posts/doc-dev/ops/yum.md","raw":"---\ntitle: 本地YUM源搭建\ndate: 2019-03-12\n\n---\n\nLinux系统的包管理是`yum`。默认刚安装好的系统一般都是从CentOS官方下载相关软件包，这样就会浪费很多带宽。\n\n## 服务端配置\n\n```bash\n# 安装yum-utils\nyum install yum-utils createrepo  nginx -y\n\n# 准备存储YUM源数据的文件夹\nmkdir -p /data/yumdata\n```\n\n同步脚本下载\n\n[syncRepo.sh](./pkg/syncRepo.sh)\n\n```bash\nyum repolist\n```\n\n![yum repolist](img/yumlist.png)\n\n```bash\n# 执行脚本，同步yum源以及生成yum源数据\ncd /data/yumdata\nchmod +x syncRepo.sh\nsh syncRepos.h\n\n# 修改NGINX配置文件,将同步至本地的YUM通过HTTP给内部使用\nvi /etc/nginx/nginx.conf\n...\nlocation / {\n    autoindex on;\n    root /data/yumdata/;\n}\n\n# 开启NGINX\nsystemctl enable nginx && systemctl start nginx\n\n# 加入定时任务，每天自动同上层yu\nvim /etc/crontab\n2 3 * * * root /data/yumdata/syncRepo.sh\n```\n\n## 客户端配置\n\n1. 先备份系统原有的repo文件\n\n    ```bash\n    cd /etc/yum.repos.d && mkdir backup\n    mv *.repo backup\n    ```\n\n2. 在/etc/yum.repos.d/目录下新建本地YUM源的文件\n\n   ```bash\n   vim /etc/yum.repos.d/local.repo\n\n   [centos-base]\n   name=CentOS-Base\n   baseurl=http://128.0.100.170/base/\n   enable=1\n   gpgcheck=0\n\n   [centos-update]\n   name=CentOS-Update\n   baseurl=http://128.0.100.170/updates/\n   enable=1\n   gpgcheck=0\n\n   [centos-extrals]\n   name=CentOS-Extrals\n   baseurl=http://128.0.100.170/extras/\n   enable=1\n   gpgcheck=0\n\n   [centos-epel]\n   name=CentOS-EPEL\n   baseurl=http://128.0.100.170/epel/\n   enable=1\n   gpgcheck=0\n\n   [docker-ce]\n   name=Docker-CE\n   baseurl=http://128.0.100.170/docker-ce/\n   enable=1\n   gpgcheck=0\n   ```","slug":"doc-dev/ops/yum","published":1,"updated":"2021-03-09T14:26:22.554Z","_id":"ckm237zwl000k1mjrhdf19z0n","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Linux系统的包管理是<code>yum</code>。默认刚安装好的系统一般都是从CentOS官方下载相关软件包，这样就会浪费很多带宽。</p>\n<h2 id=\"服务端配置\"><a href=\"#服务端配置\" class=\"headerlink\" title=\"服务端配置\"></a>服务端配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装yum-utils</span></span><br><span class=\"line\">yum install yum-utils createrepo  nginx -y</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 准备存储YUM源数据的文件夹</span></span><br><span class=\"line\">mkdir -p /data/yumdata</span><br></pre></td></tr></table></figure>\n\n<p>同步脚本下载</p>\n<p><a href=\"./pkg/syncRepo.sh\">syncRepo.sh</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum repolist</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"img/yumlist.png\" alt=\"yum repolist\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 执行脚本，同步yum源以及生成yum源数据</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /data/yumdata</span><br><span class=\"line\">chmod +x syncRepo.sh</span><br><span class=\"line\">sh syncRepos.h</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改NGINX配置文件,将同步至本地的YUM通过HTTP给内部使用</span></span><br><span class=\"line\">vi /etc/nginx/nginx.conf</span><br><span class=\"line\">...</span><br><span class=\"line\">location / &#123;</span><br><span class=\"line\">    autoindex on;</span><br><span class=\"line\">    root /data/yumdata/;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开启NGINX</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> nginx &amp;&amp; systemctl start nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加入定时任务，每天自动同上层yu</span></span><br><span class=\"line\">vim /etc/crontab</span><br><span class=\"line\">2 3 * * * root /data/yumdata/syncRepo.sh</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"客户端配置\"><a href=\"#客户端配置\" class=\"headerlink\" title=\"客户端配置\"></a>客户端配置</h2><ol>\n<li><p>先备份系统原有的repo文件</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /etc/yum.repos.d &amp;&amp; mkdir backup</span><br><span class=\"line\">mv *.repo backup</span><br></pre></td></tr></table></figure></li>\n<li><p>在/etc/yum.repos.d/目录下新建本地YUM源的文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/yum.repos.d/local.repo</span><br><span class=\"line\"></span><br><span class=\"line\">[centos-base]</span><br><span class=\"line\">name=CentOS-Base</span><br><span class=\"line\">baseurl=http://128.0.100.170/base/</span><br><span class=\"line\"><span class=\"built_in\">enable</span>=1</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\"></span><br><span class=\"line\">[centos-update]</span><br><span class=\"line\">name=CentOS-Update</span><br><span class=\"line\">baseurl=http://128.0.100.170/updates/</span><br><span class=\"line\"><span class=\"built_in\">enable</span>=1</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\"></span><br><span class=\"line\">[centos-extrals]</span><br><span class=\"line\">name=CentOS-Extrals</span><br><span class=\"line\">baseurl=http://128.0.100.170/extras/</span><br><span class=\"line\"><span class=\"built_in\">enable</span>=1</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\"></span><br><span class=\"line\">[centos-epel]</span><br><span class=\"line\">name=CentOS-EPEL</span><br><span class=\"line\">baseurl=http://128.0.100.170/epel/</span><br><span class=\"line\"><span class=\"built_in\">enable</span>=1</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\"></span><br><span class=\"line\">[docker-ce]</span><br><span class=\"line\">name=Docker-CE</span><br><span class=\"line\">baseurl=http://128.0.100.170/docker-ce/</span><br><span class=\"line\"><span class=\"built_in\">enable</span>=1</span><br><span class=\"line\">gpgcheck=0</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>Linux系统的包管理是<code>yum</code>。默认刚安装好的系统一般都是从CentOS官方下载相关软件包，这样就会浪费很多带宽。</p>\n<h2 id=\"服务端配置\"><a href=\"#服务端配置\" class=\"headerlink\" title=\"服务端配置\"></a>服务端配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装yum-utils</span></span><br><span class=\"line\">yum install yum-utils createrepo  nginx -y</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 准备存储YUM源数据的文件夹</span></span><br><span class=\"line\">mkdir -p /data/yumdata</span><br></pre></td></tr></table></figure>\n\n<p>同步脚本下载</p>\n<p><a href=\"./pkg/syncRepo.sh\">syncRepo.sh</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum repolist</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"img/yumlist.png\" alt=\"yum repolist\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 执行脚本，同步yum源以及生成yum源数据</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /data/yumdata</span><br><span class=\"line\">chmod +x syncRepo.sh</span><br><span class=\"line\">sh syncRepos.h</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改NGINX配置文件,将同步至本地的YUM通过HTTP给内部使用</span></span><br><span class=\"line\">vi /etc/nginx/nginx.conf</span><br><span class=\"line\">...</span><br><span class=\"line\">location / &#123;</span><br><span class=\"line\">    autoindex on;</span><br><span class=\"line\">    root /data/yumdata/;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开启NGINX</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> nginx &amp;&amp; systemctl start nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加入定时任务，每天自动同上层yu</span></span><br><span class=\"line\">vim /etc/crontab</span><br><span class=\"line\">2 3 * * * root /data/yumdata/syncRepo.sh</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"客户端配置\"><a href=\"#客户端配置\" class=\"headerlink\" title=\"客户端配置\"></a>客户端配置</h2><ol>\n<li><p>先备份系统原有的repo文件</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /etc/yum.repos.d &amp;&amp; mkdir backup</span><br><span class=\"line\">mv *.repo backup</span><br></pre></td></tr></table></figure></li>\n<li><p>在/etc/yum.repos.d/目录下新建本地YUM源的文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/yum.repos.d/local.repo</span><br><span class=\"line\"></span><br><span class=\"line\">[centos-base]</span><br><span class=\"line\">name=CentOS-Base</span><br><span class=\"line\">baseurl=http://128.0.100.170/base/</span><br><span class=\"line\"><span class=\"built_in\">enable</span>=1</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\"></span><br><span class=\"line\">[centos-update]</span><br><span class=\"line\">name=CentOS-Update</span><br><span class=\"line\">baseurl=http://128.0.100.170/updates/</span><br><span class=\"line\"><span class=\"built_in\">enable</span>=1</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\"></span><br><span class=\"line\">[centos-extrals]</span><br><span class=\"line\">name=CentOS-Extrals</span><br><span class=\"line\">baseurl=http://128.0.100.170/extras/</span><br><span class=\"line\"><span class=\"built_in\">enable</span>=1</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\"></span><br><span class=\"line\">[centos-epel]</span><br><span class=\"line\">name=CentOS-EPEL</span><br><span class=\"line\">baseurl=http://128.0.100.170/epel/</span><br><span class=\"line\"><span class=\"built_in\">enable</span>=1</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\"></span><br><span class=\"line\">[docker-ce]</span><br><span class=\"line\">name=Docker-CE</span><br><span class=\"line\">baseurl=http://128.0.100.170/docker-ce/</span><br><span class=\"line\"><span class=\"built_in\">enable</span>=1</span><br><span class=\"line\">gpgcheck=0</span><br></pre></td></tr></table></figure></li>\n</ol>\n"},{"title":"SpringBoot整合Swagger2","date":"2019-03-11T16:00:00.000Z","_content":"\n## 前言\n\n手写Api文档的几个痛点：\n\n1. 文档需要更新的时候，需要再次发送一份给前端，也就是文档更新交流不及时。\n2. 接口返回结果不明确\n3. 不能直接在线测试接口，通常需要使用工具，比如postman\n4. 接口文档太多，不好管理\n5. Swagger也就是为了解决这个问题，当然也不能说Swagger就一定是完美的，当然也有缺点，最明显的就是代码移入性比较强。\n\n## 使用\n\n在`pom.xml`中添加依赖\n\n```xml\n<dependency>\n\t<groupId>io.springfox</groupId>\n\t<artifactId>springfox-swagger2</artifactId>\n\t<version>2.6.1</version>\n</dependency>\n\n\n<dependency>\n\t<groupId>io.springfox</groupId>\n\t<artifactId>springfox-swagger-ui</artifactId>\n\t<version>2.6.1</version>\n</dependency>\n```\n\n在启动类中添加swagger 开关\n\n```java\n@SpringBootApplication\n@EnableSwagger2\npublic class SpringbootSwagger2Application {\n\npublic static void main(String[] args) {\n\tSpringApplication.run(SpringbootSwagger2Application.class, args);\n}\n}\n```\n\n### 测试的demo\n\n```java\n@RestController\n@Api(\"Hello-world 相关api\")\npublic class HelloWorld {\n\n    @Autowired\n    private HelloRpcService helloRpcService;\n\n    @Autowired\n    private RedisTemplate redisTemplate;\n\n    @Autowired\n    private KafkaTemplate kafkaTemplate;\n\n    @ApiOperation(\"调用rpc服务\")\n    @ApiImplicitParams({\n            @ApiImplicitParam(paramType=\"header\",name=\"username\",dataType=\"String\",required=true,value=\"用户的姓名\",defaultValue=\"xxxx\"),\n            @ApiImplicitParam(paramType=\"query\",name=\"password\",dataType=\"String\",required=true,value=\"用户的密码\",defaultValue=\"xxxxxxxxxxxx\")\n    })\n    @ApiResponses({\n            @ApiResponse(code=400,message=\"请求参数没填好\"),\n            @ApiResponse(code=404,message=\"请求路径没有或页面跳转路径不对\"),\n            @ApiResponse(code=500,message=\"服务器异常\")\n    })\n    @RequestMapping(value = \"/qq\", method = RequestMethod.POST)\n    public Object get(@RequestBody User user){\n        System.out.println(\"controller get method\");\n        Hello b = helloRpcService.get(\"qq\");\n        return b;\n    }\n}\n```\n\n得到一下效果\n\n![world](img/world.jpg)\n\n![hello](img/hello.jpg)\n\n### Swagger注解\n\nswagger通过注解表明该接口会生成文档，包括接口名、请求方法、参数、返回信息的等等。\n\n@Api：修饰整个类，描述Controller的作用\n@ApiOperation：描述一个类的一个方法，或者说一个接口\n@ApiParam：单个参数描述\n@ApiModel：用对象来接收参数\n@ApiProperty：用对象接收参数时，描述对象的一个字段\n@ApiResponse：HTTP响应其中1个描述\n@ApiResponses：HTTP响应整体描述\n@ApiIgnore：使用该注解忽略这个API\n@ApiError ：发生错误返回的信息\n@ApiImplicitParam：一个请求参数\n@ApiImplicitParams：多个请求参数","source":"_posts/doc-dev/standard/Swagger2.md","raw":"---\ntitle: SpringBoot整合Swagger2\ndate: 2019-03-12\n\n---\n\n## 前言\n\n手写Api文档的几个痛点：\n\n1. 文档需要更新的时候，需要再次发送一份给前端，也就是文档更新交流不及时。\n2. 接口返回结果不明确\n3. 不能直接在线测试接口，通常需要使用工具，比如postman\n4. 接口文档太多，不好管理\n5. Swagger也就是为了解决这个问题，当然也不能说Swagger就一定是完美的，当然也有缺点，最明显的就是代码移入性比较强。\n\n## 使用\n\n在`pom.xml`中添加依赖\n\n```xml\n<dependency>\n\t<groupId>io.springfox</groupId>\n\t<artifactId>springfox-swagger2</artifactId>\n\t<version>2.6.1</version>\n</dependency>\n\n\n<dependency>\n\t<groupId>io.springfox</groupId>\n\t<artifactId>springfox-swagger-ui</artifactId>\n\t<version>2.6.1</version>\n</dependency>\n```\n\n在启动类中添加swagger 开关\n\n```java\n@SpringBootApplication\n@EnableSwagger2\npublic class SpringbootSwagger2Application {\n\npublic static void main(String[] args) {\n\tSpringApplication.run(SpringbootSwagger2Application.class, args);\n}\n}\n```\n\n### 测试的demo\n\n```java\n@RestController\n@Api(\"Hello-world 相关api\")\npublic class HelloWorld {\n\n    @Autowired\n    private HelloRpcService helloRpcService;\n\n    @Autowired\n    private RedisTemplate redisTemplate;\n\n    @Autowired\n    private KafkaTemplate kafkaTemplate;\n\n    @ApiOperation(\"调用rpc服务\")\n    @ApiImplicitParams({\n            @ApiImplicitParam(paramType=\"header\",name=\"username\",dataType=\"String\",required=true,value=\"用户的姓名\",defaultValue=\"xxxx\"),\n            @ApiImplicitParam(paramType=\"query\",name=\"password\",dataType=\"String\",required=true,value=\"用户的密码\",defaultValue=\"xxxxxxxxxxxx\")\n    })\n    @ApiResponses({\n            @ApiResponse(code=400,message=\"请求参数没填好\"),\n            @ApiResponse(code=404,message=\"请求路径没有或页面跳转路径不对\"),\n            @ApiResponse(code=500,message=\"服务器异常\")\n    })\n    @RequestMapping(value = \"/qq\", method = RequestMethod.POST)\n    public Object get(@RequestBody User user){\n        System.out.println(\"controller get method\");\n        Hello b = helloRpcService.get(\"qq\");\n        return b;\n    }\n}\n```\n\n得到一下效果\n\n![world](img/world.jpg)\n\n![hello](img/hello.jpg)\n\n### Swagger注解\n\nswagger通过注解表明该接口会生成文档，包括接口名、请求方法、参数、返回信息的等等。\n\n@Api：修饰整个类，描述Controller的作用\n@ApiOperation：描述一个类的一个方法，或者说一个接口\n@ApiParam：单个参数描述\n@ApiModel：用对象来接收参数\n@ApiProperty：用对象接收参数时，描述对象的一个字段\n@ApiResponse：HTTP响应其中1个描述\n@ApiResponses：HTTP响应整体描述\n@ApiIgnore：使用该注解忽略这个API\n@ApiError ：发生错误返回的信息\n@ApiImplicitParam：一个请求参数\n@ApiImplicitParams：多个请求参数","slug":"doc-dev/standard/Swagger2","published":1,"updated":"2021-03-09T14:26:29.388Z","_id":"ckm237zwm000l1mjrfnap765z","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>手写Api文档的几个痛点：</p>\n<ol>\n<li>文档需要更新的时候，需要再次发送一份给前端，也就是文档更新交流不及时。</li>\n<li>接口返回结果不明确</li>\n<li>不能直接在线测试接口，通常需要使用工具，比如postman</li>\n<li>接口文档太多，不好管理</li>\n<li>Swagger也就是为了解决这个问题，当然也不能说Swagger就一定是完美的，当然也有缺点，最明显的就是代码移入性比较强。</li>\n</ol>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>在<code>pom.xml</code>中添加依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>io.springfox<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>springfox-swagger2<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.6.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>io.springfox<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>springfox-swagger-ui<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.6.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在启动类中添加swagger 开关</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"meta\">@EnableSwagger2</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringbootSwagger2Application</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\tSpringApplication.run(SpringbootSwagger2Application.class, args);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"测试的demo\"><a href=\"#测试的demo\" class=\"headerlink\" title=\"测试的demo\"></a>测试的demo</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@Api(&quot;Hello-world 相关api&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloWorld</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> HelloRpcService helloRpcService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RedisTemplate redisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> KafkaTemplate kafkaTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ApiOperation(&quot;调用rpc服务&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@ApiImplicitParams(&#123;</span></span><br><span class=\"line\"><span class=\"meta\">            @ApiImplicitParam(paramType=&quot;header&quot;,name=&quot;username&quot;,dataType=&quot;String&quot;,required=true,value=&quot;用户的姓名&quot;,defaultValue=&quot;xxxx&quot;),</span></span><br><span class=\"line\"><span class=\"meta\">            @ApiImplicitParam(paramType=&quot;query&quot;,name=&quot;password&quot;,dataType=&quot;String&quot;,required=true,value=&quot;用户的密码&quot;,defaultValue=&quot;xxxxxxxxxxxx&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">    &#125;)</span></span><br><span class=\"line\">    <span class=\"meta\">@ApiResponses(&#123;</span></span><br><span class=\"line\"><span class=\"meta\">            @ApiResponse(code=400,message=&quot;请求参数没填好&quot;),</span></span><br><span class=\"line\"><span class=\"meta\">            @ApiResponse(code=404,message=&quot;请求路径没有或页面跳转路径不对&quot;),</span></span><br><span class=\"line\"><span class=\"meta\">            @ApiResponse(code=500,message=&quot;服务器异常&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">    &#125;)</span></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(value = &quot;/qq&quot;, method = RequestMethod.POST)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">get</span><span class=\"params\">(<span class=\"meta\">@RequestBody</span> User user)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;controller get method&quot;</span>);</span><br><span class=\"line\">        Hello b = helloRpcService.get(<span class=\"string\">&quot;qq&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>得到一下效果</p>\n<p><img src=\"img/world.jpg\" alt=\"world\"></p>\n<p><img src=\"img/hello.jpg\" alt=\"hello\"></p>\n<h3 id=\"Swagger注解\"><a href=\"#Swagger注解\" class=\"headerlink\" title=\"Swagger注解\"></a>Swagger注解</h3><p>swagger通过注解表明该接口会生成文档，包括接口名、请求方法、参数、返回信息的等等。</p>\n<p>@Api：修饰整个类，描述Controller的作用<br>@ApiOperation：描述一个类的一个方法，或者说一个接口<br>@ApiParam：单个参数描述<br>@ApiModel：用对象来接收参数<br>@ApiProperty：用对象接收参数时，描述对象的一个字段<br>@ApiResponse：HTTP响应其中1个描述<br>@ApiResponses：HTTP响应整体描述<br>@ApiIgnore：使用该注解忽略这个API<br>@ApiError ：发生错误返回的信息<br>@ApiImplicitParam：一个请求参数<br>@ApiImplicitParams：多个请求参数</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>手写Api文档的几个痛点：</p>\n<ol>\n<li>文档需要更新的时候，需要再次发送一份给前端，也就是文档更新交流不及时。</li>\n<li>接口返回结果不明确</li>\n<li>不能直接在线测试接口，通常需要使用工具，比如postman</li>\n<li>接口文档太多，不好管理</li>\n<li>Swagger也就是为了解决这个问题，当然也不能说Swagger就一定是完美的，当然也有缺点，最明显的就是代码移入性比较强。</li>\n</ol>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>在<code>pom.xml</code>中添加依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>io.springfox<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>springfox-swagger2<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.6.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>io.springfox<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>springfox-swagger-ui<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.6.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在启动类中添加swagger 开关</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"meta\">@EnableSwagger2</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringbootSwagger2Application</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\tSpringApplication.run(SpringbootSwagger2Application.class, args);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"测试的demo\"><a href=\"#测试的demo\" class=\"headerlink\" title=\"测试的demo\"></a>测试的demo</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@Api(&quot;Hello-world 相关api&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloWorld</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> HelloRpcService helloRpcService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RedisTemplate redisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> KafkaTemplate kafkaTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ApiOperation(&quot;调用rpc服务&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@ApiImplicitParams(&#123;</span></span><br><span class=\"line\"><span class=\"meta\">            @ApiImplicitParam(paramType=&quot;header&quot;,name=&quot;username&quot;,dataType=&quot;String&quot;,required=true,value=&quot;用户的姓名&quot;,defaultValue=&quot;xxxx&quot;),</span></span><br><span class=\"line\"><span class=\"meta\">            @ApiImplicitParam(paramType=&quot;query&quot;,name=&quot;password&quot;,dataType=&quot;String&quot;,required=true,value=&quot;用户的密码&quot;,defaultValue=&quot;xxxxxxxxxxxx&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">    &#125;)</span></span><br><span class=\"line\">    <span class=\"meta\">@ApiResponses(&#123;</span></span><br><span class=\"line\"><span class=\"meta\">            @ApiResponse(code=400,message=&quot;请求参数没填好&quot;),</span></span><br><span class=\"line\"><span class=\"meta\">            @ApiResponse(code=404,message=&quot;请求路径没有或页面跳转路径不对&quot;),</span></span><br><span class=\"line\"><span class=\"meta\">            @ApiResponse(code=500,message=&quot;服务器异常&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">    &#125;)</span></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(value = &quot;/qq&quot;, method = RequestMethod.POST)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">get</span><span class=\"params\">(<span class=\"meta\">@RequestBody</span> User user)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;controller get method&quot;</span>);</span><br><span class=\"line\">        Hello b = helloRpcService.get(<span class=\"string\">&quot;qq&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>得到一下效果</p>\n<p><img src=\"img/world.jpg\" alt=\"world\"></p>\n<p><img src=\"img/hello.jpg\" alt=\"hello\"></p>\n<h3 id=\"Swagger注解\"><a href=\"#Swagger注解\" class=\"headerlink\" title=\"Swagger注解\"></a>Swagger注解</h3><p>swagger通过注解表明该接口会生成文档，包括接口名、请求方法、参数、返回信息的等等。</p>\n<p>@Api：修饰整个类，描述Controller的作用<br>@ApiOperation：描述一个类的一个方法，或者说一个接口<br>@ApiParam：单个参数描述<br>@ApiModel：用对象来接收参数<br>@ApiProperty：用对象接收参数时，描述对象的一个字段<br>@ApiResponse：HTTP响应其中1个描述<br>@ApiResponses：HTTP响应整体描述<br>@ApiIgnore：使用该注解忽略这个API<br>@ApiError ：发生错误返回的信息<br>@ApiImplicitParam：一个请求参数<br>@ApiImplicitParams：多个请求参数</p>\n"},{"title":"Linux 命名空间概述","date":"2021-03-10T09:12:47.000Z","_content":"\n## namespace 的概念\n\nnamespace 是 Linux 内核用来隔离内核资源的方式。\n通过 namespace 可以让一些进程只能看到与自己相关的一部分资源，而另外一些进程也只能看到与它们自己相关的资源，这两拨进程根本就感觉不到对方的存在。\n具体的实现方式是把一个或多个进程的相关资源指定在同一个 namespace 中。\n\n\n## namespace 的比喻\n\n对于某些人来说，namespace这个定义有很多不能让人理解的地方，因此以下这种比方可能会对你有所帮助。\n考虑一下我的公寓楼。从技术上讲，这是两座不同的建筑，都有自己的入口。\n但是，停车场，健身房，游泳池和公共休息室是共享的。这些建筑物有自己的名称，城市广场和城市广场2。\n他们有自己的街道地址，楼层和电梯。然而，它们依附于相同的物理复合体。\n\n物理复合体与计算机的想法相同。两个名称空间（或多个名称空间）可以驻留在同一台物理计算机上，\n并且与公寓楼一样，名称空间可以共享对某些资源的访问权限，也可以具有独占访问权限。\n\n今天，有七种常见的名称空间被广泛使用。\n以公寓为指导，让我们逐步总结每种类型的功能。\n下面是每种名称空间类型的简要概述。在后续文章中，我们将通过示例展示每个命名空间的工作方式。\n\n## namespace 的类型有哪些\n\n* 进程隔离（PID名称空间）\n* 网络接口（网络名称空间）\n\n\n* Unix时间共享系统（uts名称空间）\n* 用户名称空间\n* 挂载（mnt名称空间）\n* 进程间通信（IPC）\n* CGroups\n\n\n## linux 网络命名空间\n\n1. ip netns add xx 建立一個 namespace\n\n```bash\n$ ip netns add net1\n$ ip netns ls\nnet1\n```\n\n2. ip netns exec <netns namespace> <BASH SHELL> 在新 namespace net1 中執行 BASH SHELL 命令\n\n```bash\n$ ip netns exec net1 bash\n\n# exit 退出容器空间\n\n$ exit\n```\n\n\n![img.png](img.png)\n\n每個 namespace 在建立的時候會自動建立一個迴環介面 lo ，預設不啟用，可以通過  啟用。\n\n```bash\n$ ip link set lo up\n```\n\nnetwork namespace 之間的通訊\n新建立的 namespace 預設不能和主機網路，以及其他 namespace 通訊。\n\n可以使用 Linux 提供的 veth pair 來完成通訊。下面顯示兩個 namespace 之间的网络拓扑图：\n\n![img_2.png](img_2.png)\n\n3.1 ip link add type veth 建立 veth pair\n\n```bash\n# 查看veth\n\n$ ip link\n\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n2: ens192: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000\n    link/ether 00:50:56:a9:e9:17 brd ff:ff:ff:ff:ff:ff\n3: docker0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default\n    link/ether 02:42:8b:f3:61:ac brd ff:ff:ff:ff:ff:ff\n    \n    \n```\n\n添加 link veth pair\n```bash\n# 添加 veth pair\n\n$ ip link add type veth\n\n# 使用命令 ip link add xxx type veth peer name yyy 指定 veth pair 的名字。\n\n$ ip link add veth1 type veth peer name veth2\n\n$ ip link\n\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n2: ens192: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000\n    link/ether 00:50:56:a9:e9:17 brd ff:ff:ff:ff:ff:ff\n3: docker0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default\n    link/ether 02:42:8b:f3:61:ac brd ff:ff:ff:ff:ff:ff\n8: veth2@veth1: <BROADCAST,MULTICAST,M-DOWN> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000\n    link/ether 6e:86:2f:10:5c:50 brd ff:ff:ff:ff:ff:ff\n9: veth1@veth2: <BROADCAST,MULTICAST,M-DOWN> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000\n    link/ether 0a:b8:54:5b:9f:7d brd ff:ff:ff:ff:ff:ff\n    \nveth pair 因为是成对出现的 所以 有8和9 \n\n分别是`veth1@veth2` -- `veth2@veth1` \n```\n\n3.2 ip link set xx netns yy 將 veth xx 加入到 namespace yy 中\n\n```bash\n$ ip link set veth1 netns net1\n\n$ ip link set veth2 netns net2\n\n```\n\n\n加入到namespace 有以下现象\n\n```bash\n$ ip link\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n2: ens192: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000\n    link/ether 00:50:56:a9:e9:17 brd ff:ff:ff:ff:ff:ff\n3: docker0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default\n    link/ether 02:42:8b:f3:61:ac brd ff:ff:ff:ff:ff:ff\n8: veth2@if9: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000\n    link/ether 6e:86:2f:10:5c:50 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    \n$ ip link set veth2 netns net2\n\n$ ip link\n\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n2: ens192: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000\n    link/ether 00:50:56:a9:e9:17 brd ff:ff:ff:ff:ff:ff\n3: docker0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default\n    link/ether 02:42:8b:f3:61:ac brd ff:ff:ff:ff:ff:ff\n```\n\n3.3 給 veth pair 配上 ip 地址\n\n```bash\n# 给net0 namespace 空间 veth0 up\n$ ip netns exec net1 ip link set veth1 up\n\n$ ip addr add 10.1.1.1/24 dev veth1\n# veth0 up 设置ip 启动起来\n\n$ ip route\n10.1.1.0/24 dev veth1 proto kernel scope link src 10.1.1.1\n\n# 给net2 namespace 空间 veth2 up\n\n$ ip addr add 10.1.1.2/24 dev veth2\n\n```\n\n![img_3.png](img_3.png)\n\n\n","source":"_posts/linux/namespace.md","raw":"---\ntitle: Linux 命名空间概述\ndate: 2021-03-10 17:12:47\ntags:\n- linux\n- kernal\n---\n\n## namespace 的概念\n\nnamespace 是 Linux 内核用来隔离内核资源的方式。\n通过 namespace 可以让一些进程只能看到与自己相关的一部分资源，而另外一些进程也只能看到与它们自己相关的资源，这两拨进程根本就感觉不到对方的存在。\n具体的实现方式是把一个或多个进程的相关资源指定在同一个 namespace 中。\n\n\n## namespace 的比喻\n\n对于某些人来说，namespace这个定义有很多不能让人理解的地方，因此以下这种比方可能会对你有所帮助。\n考虑一下我的公寓楼。从技术上讲，这是两座不同的建筑，都有自己的入口。\n但是，停车场，健身房，游泳池和公共休息室是共享的。这些建筑物有自己的名称，城市广场和城市广场2。\n他们有自己的街道地址，楼层和电梯。然而，它们依附于相同的物理复合体。\n\n物理复合体与计算机的想法相同。两个名称空间（或多个名称空间）可以驻留在同一台物理计算机上，\n并且与公寓楼一样，名称空间可以共享对某些资源的访问权限，也可以具有独占访问权限。\n\n今天，有七种常见的名称空间被广泛使用。\n以公寓为指导，让我们逐步总结每种类型的功能。\n下面是每种名称空间类型的简要概述。在后续文章中，我们将通过示例展示每个命名空间的工作方式。\n\n## namespace 的类型有哪些\n\n* 进程隔离（PID名称空间）\n* 网络接口（网络名称空间）\n\n\n* Unix时间共享系统（uts名称空间）\n* 用户名称空间\n* 挂载（mnt名称空间）\n* 进程间通信（IPC）\n* CGroups\n\n\n## linux 网络命名空间\n\n1. ip netns add xx 建立一個 namespace\n\n```bash\n$ ip netns add net1\n$ ip netns ls\nnet1\n```\n\n2. ip netns exec <netns namespace> <BASH SHELL> 在新 namespace net1 中執行 BASH SHELL 命令\n\n```bash\n$ ip netns exec net1 bash\n\n# exit 退出容器空间\n\n$ exit\n```\n\n\n![img.png](img.png)\n\n每個 namespace 在建立的時候會自動建立一個迴環介面 lo ，預設不啟用，可以通過  啟用。\n\n```bash\n$ ip link set lo up\n```\n\nnetwork namespace 之間的通訊\n新建立的 namespace 預設不能和主機網路，以及其他 namespace 通訊。\n\n可以使用 Linux 提供的 veth pair 來完成通訊。下面顯示兩個 namespace 之间的网络拓扑图：\n\n![img_2.png](img_2.png)\n\n3.1 ip link add type veth 建立 veth pair\n\n```bash\n# 查看veth\n\n$ ip link\n\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n2: ens192: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000\n    link/ether 00:50:56:a9:e9:17 brd ff:ff:ff:ff:ff:ff\n3: docker0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default\n    link/ether 02:42:8b:f3:61:ac brd ff:ff:ff:ff:ff:ff\n    \n    \n```\n\n添加 link veth pair\n```bash\n# 添加 veth pair\n\n$ ip link add type veth\n\n# 使用命令 ip link add xxx type veth peer name yyy 指定 veth pair 的名字。\n\n$ ip link add veth1 type veth peer name veth2\n\n$ ip link\n\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n2: ens192: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000\n    link/ether 00:50:56:a9:e9:17 brd ff:ff:ff:ff:ff:ff\n3: docker0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default\n    link/ether 02:42:8b:f3:61:ac brd ff:ff:ff:ff:ff:ff\n8: veth2@veth1: <BROADCAST,MULTICAST,M-DOWN> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000\n    link/ether 6e:86:2f:10:5c:50 brd ff:ff:ff:ff:ff:ff\n9: veth1@veth2: <BROADCAST,MULTICAST,M-DOWN> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000\n    link/ether 0a:b8:54:5b:9f:7d brd ff:ff:ff:ff:ff:ff\n    \nveth pair 因为是成对出现的 所以 有8和9 \n\n分别是`veth1@veth2` -- `veth2@veth1` \n```\n\n3.2 ip link set xx netns yy 將 veth xx 加入到 namespace yy 中\n\n```bash\n$ ip link set veth1 netns net1\n\n$ ip link set veth2 netns net2\n\n```\n\n\n加入到namespace 有以下现象\n\n```bash\n$ ip link\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n2: ens192: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000\n    link/ether 00:50:56:a9:e9:17 brd ff:ff:ff:ff:ff:ff\n3: docker0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default\n    link/ether 02:42:8b:f3:61:ac brd ff:ff:ff:ff:ff:ff\n8: veth2@if9: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000\n    link/ether 6e:86:2f:10:5c:50 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    \n$ ip link set veth2 netns net2\n\n$ ip link\n\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n2: ens192: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000\n    link/ether 00:50:56:a9:e9:17 brd ff:ff:ff:ff:ff:ff\n3: docker0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default\n    link/ether 02:42:8b:f3:61:ac brd ff:ff:ff:ff:ff:ff\n```\n\n3.3 給 veth pair 配上 ip 地址\n\n```bash\n# 给net0 namespace 空间 veth0 up\n$ ip netns exec net1 ip link set veth1 up\n\n$ ip addr add 10.1.1.1/24 dev veth1\n# veth0 up 设置ip 启动起来\n\n$ ip route\n10.1.1.0/24 dev veth1 proto kernel scope link src 10.1.1.1\n\n# 给net2 namespace 空间 veth2 up\n\n$ ip addr add 10.1.1.2/24 dev veth2\n\n```\n\n![img_3.png](img_3.png)\n\n\n","slug":"linux/namespace","published":1,"updated":"2021-03-18T02:06:09.495Z","_id":"ckm4m99l10000iajrhbnfg6f9","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"namespace-的概念\"><a href=\"#namespace-的概念\" class=\"headerlink\" title=\"namespace 的概念\"></a>namespace 的概念</h2><p>namespace 是 Linux 内核用来隔离内核资源的方式。<br>通过 namespace 可以让一些进程只能看到与自己相关的一部分资源，而另外一些进程也只能看到与它们自己相关的资源，这两拨进程根本就感觉不到对方的存在。<br>具体的实现方式是把一个或多个进程的相关资源指定在同一个 namespace 中。</p>\n<h2 id=\"namespace-的比喻\"><a href=\"#namespace-的比喻\" class=\"headerlink\" title=\"namespace 的比喻\"></a>namespace 的比喻</h2><p>对于某些人来说，namespace这个定义有很多不能让人理解的地方，因此以下这种比方可能会对你有所帮助。<br>考虑一下我的公寓楼。从技术上讲，这是两座不同的建筑，都有自己的入口。<br>但是，停车场，健身房，游泳池和公共休息室是共享的。这些建筑物有自己的名称，城市广场和城市广场2。<br>他们有自己的街道地址，楼层和电梯。然而，它们依附于相同的物理复合体。</p>\n<p>物理复合体与计算机的想法相同。两个名称空间（或多个名称空间）可以驻留在同一台物理计算机上，<br>并且与公寓楼一样，名称空间可以共享对某些资源的访问权限，也可以具有独占访问权限。</p>\n<p>今天，有七种常见的名称空间被广泛使用。<br>以公寓为指导，让我们逐步总结每种类型的功能。<br>下面是每种名称空间类型的简要概述。在后续文章中，我们将通过示例展示每个命名空间的工作方式。</p>\n<h2 id=\"namespace-的类型有哪些\"><a href=\"#namespace-的类型有哪些\" class=\"headerlink\" title=\"namespace 的类型有哪些\"></a>namespace 的类型有哪些</h2><ul>\n<li>进程隔离（PID名称空间）</li>\n<li>网络接口（网络名称空间）</li>\n</ul>\n<ul>\n<li>Unix时间共享系统（uts名称空间）</li>\n<li>用户名称空间</li>\n<li>挂载（mnt名称空间）</li>\n<li>进程间通信（IPC）</li>\n<li>CGroups</li>\n</ul>\n<h2 id=\"linux-网络命名空间\"><a href=\"#linux-网络命名空间\" class=\"headerlink\" title=\"linux 网络命名空间\"></a>linux 网络命名空间</h2><ol>\n<li>ip netns add xx 建立一個 namespace</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ip netns add net1</span><br><span class=\"line\">$ ip netns ls</span><br><span class=\"line\">net1</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>ip netns exec <netns namespace> <BASH shell> 在新 namespace net1 中執行 BASH SHELL 命令</BASH></netns></li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ip netns <span class=\"built_in\">exec</span> net1 bash</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># exit 退出容器空间</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ <span class=\"built_in\">exit</span></span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/2021/03/10/linux/namespace/img.png\" alt=\"img.png\"></p>\n<p>每個 namespace 在建立的時候會自動建立一個迴環介面 lo ，預設不啟用，可以通過  啟用。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ip link <span class=\"built_in\">set</span> lo up</span><br></pre></td></tr></table></figure>\n\n<p>network namespace 之間的通訊<br>新建立的 namespace 預設不能和主機網路，以及其他 namespace 通訊。</p>\n<p>可以使用 Linux 提供的 veth pair 來完成通訊。下面顯示兩個 namespace 之间的网络拓扑图：</p>\n<p><img src=\"/2021/03/10/linux/namespace/img_2.png\" alt=\"img_2.png\"></p>\n<p>3.1 ip link add type veth 建立 veth pair</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看veth</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ ip link</span><br><span class=\"line\"></span><br><span class=\"line\">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000</span><br><span class=\"line\">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class=\"line\">2: ens192: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000</span><br><span class=\"line\">    link/ether 00:50:56:a9:e9:17 brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">3: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default</span><br><span class=\"line\">    link/ether 02:42:8b:f3:61:ac brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n\n<p>添加 link veth pair</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加 veth pair</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ ip link add <span class=\"built_in\">type</span> veth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用命令 ip link add xxx type veth peer name yyy 指定 veth pair 的名字。</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ ip link add veth1 <span class=\"built_in\">type</span> veth peer name veth2</span><br><span class=\"line\"></span><br><span class=\"line\">$ ip link</span><br><span class=\"line\"></span><br><span class=\"line\">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000</span><br><span class=\"line\">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class=\"line\">2: ens192: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000</span><br><span class=\"line\">    link/ether 00:50:56:a9:e9:17 brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">3: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default</span><br><span class=\"line\">    link/ether 02:42:8b:f3:61:ac brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">8: veth2@veth1: &lt;BROADCAST,MULTICAST,M-DOWN&gt; mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000</span><br><span class=\"line\">    link/ether 6e:86:2f:10:5c:50 brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">9: veth1@veth2: &lt;BROADCAST,MULTICAST,M-DOWN&gt; mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000</span><br><span class=\"line\">    link/ether 0a:b8:54:5b:9f:7d brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">    </span><br><span class=\"line\">veth pair 因为是成对出现的 所以 有8和9 </span><br><span class=\"line\"></span><br><span class=\"line\">分别是`veth1@veth2` -- `veth2@veth1` </span><br></pre></td></tr></table></figure>\n\n<p>3.2 ip link set xx netns yy 將 veth xx 加入到 namespace yy 中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ip link <span class=\"built_in\">set</span> veth1 netns net1</span><br><span class=\"line\"></span><br><span class=\"line\">$ ip link <span class=\"built_in\">set</span> veth2 netns net2</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>加入到namespace 有以下现象</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ip link</span><br><span class=\"line\">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000</span><br><span class=\"line\">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class=\"line\">2: ens192: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000</span><br><span class=\"line\">    link/ether 00:50:56:a9:e9:17 brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">3: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default</span><br><span class=\"line\">    link/ether 02:42:8b:f3:61:ac brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">8: veth2@if9: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000</span><br><span class=\"line\">    link/ether 6e:86:2f:10:5c:50 brd ff:ff:ff:ff:ff:ff link-netnsid 0</span><br><span class=\"line\">    </span><br><span class=\"line\">$ ip link <span class=\"built_in\">set</span> veth2 netns net2</span><br><span class=\"line\"></span><br><span class=\"line\">$ ip link</span><br><span class=\"line\"></span><br><span class=\"line\">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000</span><br><span class=\"line\">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class=\"line\">2: ens192: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000</span><br><span class=\"line\">    link/ether 00:50:56:a9:e9:17 brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">3: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default</span><br><span class=\"line\">    link/ether 02:42:8b:f3:61:ac brd ff:ff:ff:ff:ff:ff</span><br></pre></td></tr></table></figure>\n\n<p>3.3 給 veth pair 配上 ip 地址</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 给net0 namespace 空间 veth0 up</span></span><br><span class=\"line\">$ ip netns <span class=\"built_in\">exec</span> net1 ip link <span class=\"built_in\">set</span> veth1 up</span><br><span class=\"line\"></span><br><span class=\"line\">$ ip addr add 10.1.1.1/24 dev veth1</span><br><span class=\"line\"><span class=\"comment\"># veth0 up 设置ip 启动起来</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ ip route</span><br><span class=\"line\">10.1.1.0/24 dev veth1 proto kernel scope link src 10.1.1.1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 给net2 namespace 空间 veth2 up</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ ip addr add 10.1.1.2/24 dev veth2</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2021/03/10/linux/namespace/img_3.png\" alt=\"img_3.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"namespace-的概念\"><a href=\"#namespace-的概念\" class=\"headerlink\" title=\"namespace 的概念\"></a>namespace 的概念</h2><p>namespace 是 Linux 内核用来隔离内核资源的方式。<br>通过 namespace 可以让一些进程只能看到与自己相关的一部分资源，而另外一些进程也只能看到与它们自己相关的资源，这两拨进程根本就感觉不到对方的存在。<br>具体的实现方式是把一个或多个进程的相关资源指定在同一个 namespace 中。</p>\n<h2 id=\"namespace-的比喻\"><a href=\"#namespace-的比喻\" class=\"headerlink\" title=\"namespace 的比喻\"></a>namespace 的比喻</h2><p>对于某些人来说，namespace这个定义有很多不能让人理解的地方，因此以下这种比方可能会对你有所帮助。<br>考虑一下我的公寓楼。从技术上讲，这是两座不同的建筑，都有自己的入口。<br>但是，停车场，健身房，游泳池和公共休息室是共享的。这些建筑物有自己的名称，城市广场和城市广场2。<br>他们有自己的街道地址，楼层和电梯。然而，它们依附于相同的物理复合体。</p>\n<p>物理复合体与计算机的想法相同。两个名称空间（或多个名称空间）可以驻留在同一台物理计算机上，<br>并且与公寓楼一样，名称空间可以共享对某些资源的访问权限，也可以具有独占访问权限。</p>\n<p>今天，有七种常见的名称空间被广泛使用。<br>以公寓为指导，让我们逐步总结每种类型的功能。<br>下面是每种名称空间类型的简要概述。在后续文章中，我们将通过示例展示每个命名空间的工作方式。</p>\n<h2 id=\"namespace-的类型有哪些\"><a href=\"#namespace-的类型有哪些\" class=\"headerlink\" title=\"namespace 的类型有哪些\"></a>namespace 的类型有哪些</h2><ul>\n<li>进程隔离（PID名称空间）</li>\n<li>网络接口（网络名称空间）</li>\n</ul>\n<ul>\n<li>Unix时间共享系统（uts名称空间）</li>\n<li>用户名称空间</li>\n<li>挂载（mnt名称空间）</li>\n<li>进程间通信（IPC）</li>\n<li>CGroups</li>\n</ul>\n<h2 id=\"linux-网络命名空间\"><a href=\"#linux-网络命名空间\" class=\"headerlink\" title=\"linux 网络命名空间\"></a>linux 网络命名空间</h2><ol>\n<li>ip netns add xx 建立一個 namespace</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ip netns add net1</span><br><span class=\"line\">$ ip netns ls</span><br><span class=\"line\">net1</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>ip netns exec <netns namespace> <BASH shell> 在新 namespace net1 中執行 BASH SHELL 命令</BASH></netns></li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ip netns <span class=\"built_in\">exec</span> net1 bash</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># exit 退出容器空间</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ <span class=\"built_in\">exit</span></span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/2021/03/10/linux/namespace/img.png\" alt=\"img.png\"></p>\n<p>每個 namespace 在建立的時候會自動建立一個迴環介面 lo ，預設不啟用，可以通過  啟用。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ip link <span class=\"built_in\">set</span> lo up</span><br></pre></td></tr></table></figure>\n\n<p>network namespace 之間的通訊<br>新建立的 namespace 預設不能和主機網路，以及其他 namespace 通訊。</p>\n<p>可以使用 Linux 提供的 veth pair 來完成通訊。下面顯示兩個 namespace 之间的网络拓扑图：</p>\n<p><img src=\"/2021/03/10/linux/namespace/img_2.png\" alt=\"img_2.png\"></p>\n<p>3.1 ip link add type veth 建立 veth pair</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看veth</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ ip link</span><br><span class=\"line\"></span><br><span class=\"line\">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000</span><br><span class=\"line\">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class=\"line\">2: ens192: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000</span><br><span class=\"line\">    link/ether 00:50:56:a9:e9:17 brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">3: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default</span><br><span class=\"line\">    link/ether 02:42:8b:f3:61:ac brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n\n<p>添加 link veth pair</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加 veth pair</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ ip link add <span class=\"built_in\">type</span> veth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用命令 ip link add xxx type veth peer name yyy 指定 veth pair 的名字。</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ ip link add veth1 <span class=\"built_in\">type</span> veth peer name veth2</span><br><span class=\"line\"></span><br><span class=\"line\">$ ip link</span><br><span class=\"line\"></span><br><span class=\"line\">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000</span><br><span class=\"line\">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class=\"line\">2: ens192: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000</span><br><span class=\"line\">    link/ether 00:50:56:a9:e9:17 brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">3: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default</span><br><span class=\"line\">    link/ether 02:42:8b:f3:61:ac brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">8: veth2@veth1: &lt;BROADCAST,MULTICAST,M-DOWN&gt; mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000</span><br><span class=\"line\">    link/ether 6e:86:2f:10:5c:50 brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">9: veth1@veth2: &lt;BROADCAST,MULTICAST,M-DOWN&gt; mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000</span><br><span class=\"line\">    link/ether 0a:b8:54:5b:9f:7d brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">    </span><br><span class=\"line\">veth pair 因为是成对出现的 所以 有8和9 </span><br><span class=\"line\"></span><br><span class=\"line\">分别是`veth1@veth2` -- `veth2@veth1` </span><br></pre></td></tr></table></figure>\n\n<p>3.2 ip link set xx netns yy 將 veth xx 加入到 namespace yy 中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ip link <span class=\"built_in\">set</span> veth1 netns net1</span><br><span class=\"line\"></span><br><span class=\"line\">$ ip link <span class=\"built_in\">set</span> veth2 netns net2</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>加入到namespace 有以下现象</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ip link</span><br><span class=\"line\">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000</span><br><span class=\"line\">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class=\"line\">2: ens192: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000</span><br><span class=\"line\">    link/ether 00:50:56:a9:e9:17 brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">3: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default</span><br><span class=\"line\">    link/ether 02:42:8b:f3:61:ac brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">8: veth2@if9: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000</span><br><span class=\"line\">    link/ether 6e:86:2f:10:5c:50 brd ff:ff:ff:ff:ff:ff link-netnsid 0</span><br><span class=\"line\">    </span><br><span class=\"line\">$ ip link <span class=\"built_in\">set</span> veth2 netns net2</span><br><span class=\"line\"></span><br><span class=\"line\">$ ip link</span><br><span class=\"line\"></span><br><span class=\"line\">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000</span><br><span class=\"line\">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class=\"line\">2: ens192: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000</span><br><span class=\"line\">    link/ether 00:50:56:a9:e9:17 brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">3: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default</span><br><span class=\"line\">    link/ether 02:42:8b:f3:61:ac brd ff:ff:ff:ff:ff:ff</span><br></pre></td></tr></table></figure>\n\n<p>3.3 給 veth pair 配上 ip 地址</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 给net0 namespace 空间 veth0 up</span></span><br><span class=\"line\">$ ip netns <span class=\"built_in\">exec</span> net1 ip link <span class=\"built_in\">set</span> veth1 up</span><br><span class=\"line\"></span><br><span class=\"line\">$ ip addr add 10.1.1.1/24 dev veth1</span><br><span class=\"line\"><span class=\"comment\"># veth0 up 设置ip 启动起来</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ ip route</span><br><span class=\"line\">10.1.1.0/24 dev veth1 proto kernel scope link src 10.1.1.1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 给net2 namespace 空间 veth2 up</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ ip addr add 10.1.1.2/24 dev veth2</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2021/03/10/linux/namespace/img_3.png\" alt=\"img_3.png\"></p>\n"},{"title":"cgroups Linux控制组","date":"2021-03-10T10:06:35.000Z","_content":"\n实话实说,某些软件应用程序可能需要控制或限制-至少出于稳定性和某种程度上的安全性考虑。\n错误或错误代码常常会破坏整个计算机,并可能破坏整个生态系统。\n幸运的是,有一种方法可以检查那些相同的应用程序。\n控制组（cgroups）是一项内核功能,可以限制,说明和隔离一个或多个进程的CPU,内存,磁盘I / O和网络使用情况。\n\ncgroups框架提供以下内容：\n\n资源限制： 可以将组配置为不超过指定的内存限制或使用的处理器数量不超过期望的数量,或者限制为特定的外围设备。\n优先级： 可以将一个或多个组配置为利用更少或更多的CPU或磁盘 I/O 吞吐量。\n监控： 监视和衡量组的资源使用情况。\n控制： 可以冻结或停止并重新启动一组进程。\n\n一个`cgroup`可以包含一个或多个绑定到同一组限制的进程。这些组也可以是分层的,这意味着子组继承了对其父组管理的限制。\n\nLinux内核提供对cgroup技术的一系列控制器或子系统的访问。控制器负责将特定类型的系统资源分配给一组一个或多个进程。\n例如,memory控制器是在cpuacct监视CPU使用率时限制内存使用率的。\n\n您可以直接和间接（使用LXC,libvirt或Docker）访问和管理cgroup,在此我将首先通过sysfs和libcgroups库来介绍和管理cgroup 。\n要遵循此处的示例,您首先需要安装必要的软件包。在Red Hat Enterprise Linux或CentOS上,在命令行上键入以下内容：\n\n```\n\nblkio：设置限制每个块设备的输入输出控制。例如:磁盘，光盘以及usb等等。\ncpu：使用调度程序为cgroup任务提供cpu的访问。\ncpuacct：产生cgroup任务的cpu资源报告。\ncpuset：如果是多核心的cpu，这个子系统会为cgroup任务分配单独的cpu和内存。\ndevices：允许或拒绝cgroup任务对设备的访问。\nfreezer：暂停和恢复cgroup任务。\nmemory：设置每个cgroup的内存限制以及产生内存资源报告。\nnet_cls：标记每个网络包以供cgroup方便使用。\nns：命名空间子系统。\nperf_event：增加了对每group的监测跟踪的能力，即可以监测属于某个特定的group的所有线程以及运行在特定CPU上的线程。\n\n```\n\n## cgroups 对内存的限制\n\n### 手动方式\n安装了正确的软件包后，您可以直接通过sysfs层次结构配置cgroup。例如，要foo在memory子系统下创建一个名为cgroup 的目录，请在/ sys / fs / cgroup / memory中创建一个名为foo的目录：\n\n```bash\n$ sudo mkdir /sys/fs/cgroup/memory/foo\n```\n\n默认情况下，每个新创建的cgroup都将继承对系统整个内存池的访问权限。对于某些应用程序，主要是那些继续分配更多内存但拒绝释放已经分配的内存的应用程序，可能不是一个好主意。要将应用程序限制在合理的范围内，您需要更新 memory.limit_in_bytes文件。\n\n将在cgroup下运行的任何内容的内存限制foo为50MB：\n\n```bash\n$ echo 50000000 | sudo tee /sys/fs/cgroup/memory/foo/memory.limit_in_bytes\n```\n\n验证设置：\n\n\n```bash\n$ sudo cat memory.limit_in_bytes\n50003968\n```\n\n请注意，回读的值始终是内核页面大小的倍数（即4096字节或4KB）。该值是最小的可分配内存大小。\n\n启动应用程序：\n\n```bash\n$ sh ~/test.sh &\n```\n\n使用其进程ID（PID），将应用程序移动到控制器foo下的 cgroup memory：\n\n```bash\n$ echo 2845 > /sys/fs/cgroup/memory/foo/cgroup.procs\n```\n\n使用相同的PID编号，列出正在运行的进程并验证其是否在所需的cgroup中运行：\n\n```bash\n$ ps -o cgroup 2845\nCGROUP\n8:memory:/foo,1:name=systemd:/user.slice/user-0.slice/session-4.scope\n```\n\n您还可以通过读取所需的文件来监视该cgroup当前正在使用的内容。在这种情况下，您将需要查看由您的进程（和产生的子进程）分配的内存量：\n\n```bash\n$ cat /sys/fs/cgroup/memory/foo/memory.usage_in_bytes\n253952\n```\n\n### 当我改变limit \n\n现在，让我们重新创建相同的场景，但不要将cgroup限制 foo为50MB内存，而是将其限制为500个字节：\n\n\n```bash\n$ echo 500 | sudo tee /sys/fs/cgroup/memory/foo/memory.limit_in_bytes\n```\n\n注意：如果一项任务超出其定义的限制，内核将进行干预，在某些情况下，将终止该任务。\n\n同样，当您读回该值时，该值将始终是内核页面大小的倍数。因此，尽管将其设置为500字节，但实际上设置为4 KB：\n\n```bash\n$ cat /sys/fs/cgroup/memory/foo/memory.limit_in_bytes\n4096\n```\n\n启动应用程序，将其移至cgroup并监视系统日志：\n\n```bash\n\n$ sudo tail -f /var/log/messages\n\nOct 14 10:22:40 localhost kernel: sh invoked oom-killer:\n↪gfp_mask=0xd0, order=0, oom_score_adj=0\nOct 14 10:22:40 localhost kernel: sh cpuset=/ mems_allowed=0\nOct 14 10:22:40 localhost kernel: CPU: 0 PID: 2687 Comm:\n↪sh Tainted: G\nOE  ------------   3.10.0-327.36.3.el7.x86_64 #1\nOct 14 10:22:40 localhost kernel: Hardware name: innotek GmbH\nVirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006\nOct 14 10:22:40 localhost kernel: ffff880036ea5c00\n↪0000000093314010 ffff88000002bcd0 ffffffff81636431\nOct 14 10:22:40 localhost kernel: ffff88000002bd60\n↪ffffffff816313cc 01018800000000d0 ffff88000002bd68\nOct 14 10:22:40 localhost kernel: ffffffffbc35e040\n↪fffeefff00000000 0000000000000001 ffff880036ea6103\nOct 14 10:22:40 localhost kernel: Call Trace:\nOct 14 10:22:40 localhost kernel: [<ffffffff81636431>]\n↪dump_stack+0x19/0x1b\nOct 14 10:22:40 localhost kernel: [<ffffffff816313cc>]\n↪dump_header+0x8e/0x214\nOct 14 10:22:40 localhost kernel: [<ffffffff8116d21e>]\n↪oom_kill_process+0x24e/0x3b0\nOct 14 10:22:40 localhost kernel: [<ffffffff81088e4e>] ?\n↪has_capability_noaudit+0x1e/0x30\nOct 14 10:22:40 localhost kernel: [<ffffffff811d4285>]\n↪mem_cgroup_oom_synchronize+0x575/0x5a0\nOct 14 10:22:40 localhost kernel: [<ffffffff811d3650>] ?\n↪mem_cgroup_charge_common+0xc0/0xc0\nOct 14 10:22:40 localhost kernel: [<ffffffff8116da94>]\n↪pagefault_out_of_memory+0x14/0x90\nOct 14 10:22:40 localhost kernel: [<ffffffff8162f815>]\n↪mm_fault_error+0x68/0x12b\nOct 14 10:22:40 localhost kernel: [<ffffffff816422d2>]\n↪__do_page_fault+0x3e2/0x450\nOct 14 10:22:40 localhost kernel: [<ffffffff81642363>]\n↪do_page_fault+0x23/0x80\nOct 14 10:22:40 localhost kernel: [<ffffffff8163e648>]\n↪page_fault+0x28/0x30\nOct 14 10:22:40 localhost kernel: Task in /foo killed as\n↪a result of limit of /foo\nOct 14 10:22:40 localhost kernel: memory: usage 4kB, limit\n↪4kB, failcnt 8\nOct 14 10:22:40 localhost kernel: memory+swap: usage 4kB,\n↪limit 9007199254740991kB, failcnt 0\nOct 14 10:22:40 localhost kernel: kmem: usage 0kB, limit\n↪9007199254740991kB, failcnt 0\nOct 14 10:22:40 localhost kernel: Memory cgroup stats for /foo:\n↪cache:0KB rss:4KB rss_huge:0KB mapped_file:0KB swap:0KB\n↪inactive_anon:0KB active_anon:0KB inactive_file:0KB\n↪active_file:0KB unevictable:0KB\nOct 14 10:22:40 localhost kernel: [ pid ]   uid  tgid total_vm\n↪rss nr_ptes swapents oom_score_adj name\nOct 14 10:22:40 localhost kernel: [ 2687]     0  2687    28281\n↪347     12        0             0 sh\nOct 14 10:22:40 localhost kernel: [ 2702]     0  2702    28281\n↪50    7        0             0 sh\nOct 14 10:22:40 localhost kernel: Memory cgroup out of memory:\n↪Kill process 2687 (sh) score 0 or sacrifice child\nOct 14 10:22:40 localhost kernel: Killed process 2702 (sh)\n↪total-vm:113124kB, anon-rss:200kB, file-rss:0kB\nOct 14 10:22:41 localhost kernel: sh invoked oom-killer:\n↪gfp_mask=0xd0, order=0, oom_score_adj=0\n[ ... ]\n```\n\n请注意，一旦应用程序达到4KB的限制，内核的“内存不足杀手”（或oom-killer）就会介入。它终止了该应用程序，并且不再运行。您可以通过键入以下内容进行验证：\n\n```bash\n\n$ ps -o cgroup 2687\nCGROUP\n\n```\n\n## 使用`libcgroup`\n\nlibcgroup软件包中 提供的管理实用程序简化了此处描述的许多早期步骤。例如，使用cgcreate二进制文件的单个命令调用将负责创建sysfs条目和文件的过程。\n\n要创建在 子系统foo下命名的组memory，请键入以下内容：\n\n```bash\n$ sudo cgcreate -g memory:foo\n```\n\n注意：libcgroup提供了一种用于管理控制组中的任务的机制。\n\n使用与以前相同的方法，您可以开始设置阈值：\n\n```bash\n$ echo 50000000 | sudo tee\n↪/sys/fs/cgroup/memory/foo/memory.limit_in_bytes\n```\n\n验证新配置的设置：\n\n```bash\n$ sudo cat memory.limit_in_bytes\n50003968\n```\n\nfoo使用 cgexec二进制文件 在cgroup中运行应用程序：\n\n```bash\n$ sudo cgexec -g memory:foo ~/test.sh\n```\n\n使用其PID编号，验证应用程序正在cgroup中并在已定义的子系统（memory）下运行：\n\n```bash\n$  ps -o cgroup 2945\nCGROUP\n6:memory:/foo,1:name=systemd:/user.slice/user-0.slice/\n↪session-1.scope\n```\n\n如果您的应用程序不再运行，并且您想要清理并删除cgroup，则可以使用cgdelete二进制文件来完成。要从控制器foo 下面删除组memory，请键入：\n\n```bash\n$ sudo cgdelete memory:foo\n```\n\n持久群体\n您还可以通过一个简单的配置文件和启动服务来完成上述所有操作。您可以在/etc/cgconfig.conf文件中定义所有cgroup名称和属性。以下内容为该组添加了一些属性foo：\n\n```bash\n\n$ cat /etc/cgconfig.conf\n#\n#  Copyright IBM Corporation. 2007\n#\n#  Authors:     Balbir Singh <balbir@linux.vnet.ibm.com>\n#  This program is free software; you can redistribute it\n#  and/or modify it under the terms of version 2.1 of the GNU\n#  Lesser General Public License as published by the Free\n#  Software Foundation.\n#\n#  This program is distributed in the hope that it would be\n#  useful, but WITHOUT ANY WARRANTY; without even the implied\n#  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n#  PURPOSE.\n#\n#\n# By default, we expect systemd mounts everything on boot,\n# so there is not much to do.\n# See man cgconfig.conf for further details, how to create\n# groups on system boot using this file.\n\ngroup foo {\ncpu {\ncpu.shares = 100;\n}\nmemory {\nmemory.limit_in_bytes = 5000000;\n}\n}\n```\n\n这些cpu.shares选项定义组的CPU优先级。默认情况下，所有组都继承1,024个份额或100％的CPU时间。通过将此值降低到较为保守的程度（例如100），该组将被限制为大约CPU时间的10％。\n\n如前所述，在cgroup中运行的进程也可以限制为它可以访问的CPU（核心）数量。将以下部分添加到相同的cgconfig.conf文件中，并在所需的组名称下：\n\n```bash\n\ncpuset {\ncpuset.cpus=\"0-5\";\n}\n\n```\n\n有了这个限制，此cgroup会将应用程序绑定到核心0到5-也就是说，它将仅看到系统上的前六个CPU核心。\n\n接下来，您需要使用该cgconfig服务加载此配置。首先，启用cgconfig以在系统启动时加载以上配置：\n\n```bash\n$ sudo systemctl enable cgconfig\nCreate symlink from /etc/systemd/system/sysinit.target.wants/\n↪cgconfig.service\nto /usr/lib/systemd/system/cgconfig.service.\n```\n\n现在，启动cgconfig服务并手动加载相同的配置文件（或者您可以跳过此步骤并重新引导系统）：\n\n```bash\n$ sudo systemctl start cgconfig\n```\n\n将应用程序启动到cgroup中，foo并将其绑定到您的 memory和cpu 限制：\n\n```bash\n$ sudo cgexec -g memory,cpu,cpuset:foo ~/test.sh &\n```\n\n除了将应用程序启动到预定义的cgroup中之外，其余所有内容将在系统重新引导后继续存在。但是，您可以通过定义依赖于cgconfig 服务的启动初始化脚本来启动该应用程序，从而自动执行该过程 。\n\n","source":"_posts/linux/cgroups.md","raw":"---\ntitle: cgroups Linux控制组\ndate: 2021-03-10 18:06:35\ntags:\n- linux\n- kernal\n---\n\n实话实说,某些软件应用程序可能需要控制或限制-至少出于稳定性和某种程度上的安全性考虑。\n错误或错误代码常常会破坏整个计算机,并可能破坏整个生态系统。\n幸运的是,有一种方法可以检查那些相同的应用程序。\n控制组（cgroups）是一项内核功能,可以限制,说明和隔离一个或多个进程的CPU,内存,磁盘I / O和网络使用情况。\n\ncgroups框架提供以下内容：\n\n资源限制： 可以将组配置为不超过指定的内存限制或使用的处理器数量不超过期望的数量,或者限制为特定的外围设备。\n优先级： 可以将一个或多个组配置为利用更少或更多的CPU或磁盘 I/O 吞吐量。\n监控： 监视和衡量组的资源使用情况。\n控制： 可以冻结或停止并重新启动一组进程。\n\n一个`cgroup`可以包含一个或多个绑定到同一组限制的进程。这些组也可以是分层的,这意味着子组继承了对其父组管理的限制。\n\nLinux内核提供对cgroup技术的一系列控制器或子系统的访问。控制器负责将特定类型的系统资源分配给一组一个或多个进程。\n例如,memory控制器是在cpuacct监视CPU使用率时限制内存使用率的。\n\n您可以直接和间接（使用LXC,libvirt或Docker）访问和管理cgroup,在此我将首先通过sysfs和libcgroups库来介绍和管理cgroup 。\n要遵循此处的示例,您首先需要安装必要的软件包。在Red Hat Enterprise Linux或CentOS上,在命令行上键入以下内容：\n\n```\n\nblkio：设置限制每个块设备的输入输出控制。例如:磁盘，光盘以及usb等等。\ncpu：使用调度程序为cgroup任务提供cpu的访问。\ncpuacct：产生cgroup任务的cpu资源报告。\ncpuset：如果是多核心的cpu，这个子系统会为cgroup任务分配单独的cpu和内存。\ndevices：允许或拒绝cgroup任务对设备的访问。\nfreezer：暂停和恢复cgroup任务。\nmemory：设置每个cgroup的内存限制以及产生内存资源报告。\nnet_cls：标记每个网络包以供cgroup方便使用。\nns：命名空间子系统。\nperf_event：增加了对每group的监测跟踪的能力，即可以监测属于某个特定的group的所有线程以及运行在特定CPU上的线程。\n\n```\n\n## cgroups 对内存的限制\n\n### 手动方式\n安装了正确的软件包后，您可以直接通过sysfs层次结构配置cgroup。例如，要foo在memory子系统下创建一个名为cgroup 的目录，请在/ sys / fs / cgroup / memory中创建一个名为foo的目录：\n\n```bash\n$ sudo mkdir /sys/fs/cgroup/memory/foo\n```\n\n默认情况下，每个新创建的cgroup都将继承对系统整个内存池的访问权限。对于某些应用程序，主要是那些继续分配更多内存但拒绝释放已经分配的内存的应用程序，可能不是一个好主意。要将应用程序限制在合理的范围内，您需要更新 memory.limit_in_bytes文件。\n\n将在cgroup下运行的任何内容的内存限制foo为50MB：\n\n```bash\n$ echo 50000000 | sudo tee /sys/fs/cgroup/memory/foo/memory.limit_in_bytes\n```\n\n验证设置：\n\n\n```bash\n$ sudo cat memory.limit_in_bytes\n50003968\n```\n\n请注意，回读的值始终是内核页面大小的倍数（即4096字节或4KB）。该值是最小的可分配内存大小。\n\n启动应用程序：\n\n```bash\n$ sh ~/test.sh &\n```\n\n使用其进程ID（PID），将应用程序移动到控制器foo下的 cgroup memory：\n\n```bash\n$ echo 2845 > /sys/fs/cgroup/memory/foo/cgroup.procs\n```\n\n使用相同的PID编号，列出正在运行的进程并验证其是否在所需的cgroup中运行：\n\n```bash\n$ ps -o cgroup 2845\nCGROUP\n8:memory:/foo,1:name=systemd:/user.slice/user-0.slice/session-4.scope\n```\n\n您还可以通过读取所需的文件来监视该cgroup当前正在使用的内容。在这种情况下，您将需要查看由您的进程（和产生的子进程）分配的内存量：\n\n```bash\n$ cat /sys/fs/cgroup/memory/foo/memory.usage_in_bytes\n253952\n```\n\n### 当我改变limit \n\n现在，让我们重新创建相同的场景，但不要将cgroup限制 foo为50MB内存，而是将其限制为500个字节：\n\n\n```bash\n$ echo 500 | sudo tee /sys/fs/cgroup/memory/foo/memory.limit_in_bytes\n```\n\n注意：如果一项任务超出其定义的限制，内核将进行干预，在某些情况下，将终止该任务。\n\n同样，当您读回该值时，该值将始终是内核页面大小的倍数。因此，尽管将其设置为500字节，但实际上设置为4 KB：\n\n```bash\n$ cat /sys/fs/cgroup/memory/foo/memory.limit_in_bytes\n4096\n```\n\n启动应用程序，将其移至cgroup并监视系统日志：\n\n```bash\n\n$ sudo tail -f /var/log/messages\n\nOct 14 10:22:40 localhost kernel: sh invoked oom-killer:\n↪gfp_mask=0xd0, order=0, oom_score_adj=0\nOct 14 10:22:40 localhost kernel: sh cpuset=/ mems_allowed=0\nOct 14 10:22:40 localhost kernel: CPU: 0 PID: 2687 Comm:\n↪sh Tainted: G\nOE  ------------   3.10.0-327.36.3.el7.x86_64 #1\nOct 14 10:22:40 localhost kernel: Hardware name: innotek GmbH\nVirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006\nOct 14 10:22:40 localhost kernel: ffff880036ea5c00\n↪0000000093314010 ffff88000002bcd0 ffffffff81636431\nOct 14 10:22:40 localhost kernel: ffff88000002bd60\n↪ffffffff816313cc 01018800000000d0 ffff88000002bd68\nOct 14 10:22:40 localhost kernel: ffffffffbc35e040\n↪fffeefff00000000 0000000000000001 ffff880036ea6103\nOct 14 10:22:40 localhost kernel: Call Trace:\nOct 14 10:22:40 localhost kernel: [<ffffffff81636431>]\n↪dump_stack+0x19/0x1b\nOct 14 10:22:40 localhost kernel: [<ffffffff816313cc>]\n↪dump_header+0x8e/0x214\nOct 14 10:22:40 localhost kernel: [<ffffffff8116d21e>]\n↪oom_kill_process+0x24e/0x3b0\nOct 14 10:22:40 localhost kernel: [<ffffffff81088e4e>] ?\n↪has_capability_noaudit+0x1e/0x30\nOct 14 10:22:40 localhost kernel: [<ffffffff811d4285>]\n↪mem_cgroup_oom_synchronize+0x575/0x5a0\nOct 14 10:22:40 localhost kernel: [<ffffffff811d3650>] ?\n↪mem_cgroup_charge_common+0xc0/0xc0\nOct 14 10:22:40 localhost kernel: [<ffffffff8116da94>]\n↪pagefault_out_of_memory+0x14/0x90\nOct 14 10:22:40 localhost kernel: [<ffffffff8162f815>]\n↪mm_fault_error+0x68/0x12b\nOct 14 10:22:40 localhost kernel: [<ffffffff816422d2>]\n↪__do_page_fault+0x3e2/0x450\nOct 14 10:22:40 localhost kernel: [<ffffffff81642363>]\n↪do_page_fault+0x23/0x80\nOct 14 10:22:40 localhost kernel: [<ffffffff8163e648>]\n↪page_fault+0x28/0x30\nOct 14 10:22:40 localhost kernel: Task in /foo killed as\n↪a result of limit of /foo\nOct 14 10:22:40 localhost kernel: memory: usage 4kB, limit\n↪4kB, failcnt 8\nOct 14 10:22:40 localhost kernel: memory+swap: usage 4kB,\n↪limit 9007199254740991kB, failcnt 0\nOct 14 10:22:40 localhost kernel: kmem: usage 0kB, limit\n↪9007199254740991kB, failcnt 0\nOct 14 10:22:40 localhost kernel: Memory cgroup stats for /foo:\n↪cache:0KB rss:4KB rss_huge:0KB mapped_file:0KB swap:0KB\n↪inactive_anon:0KB active_anon:0KB inactive_file:0KB\n↪active_file:0KB unevictable:0KB\nOct 14 10:22:40 localhost kernel: [ pid ]   uid  tgid total_vm\n↪rss nr_ptes swapents oom_score_adj name\nOct 14 10:22:40 localhost kernel: [ 2687]     0  2687    28281\n↪347     12        0             0 sh\nOct 14 10:22:40 localhost kernel: [ 2702]     0  2702    28281\n↪50    7        0             0 sh\nOct 14 10:22:40 localhost kernel: Memory cgroup out of memory:\n↪Kill process 2687 (sh) score 0 or sacrifice child\nOct 14 10:22:40 localhost kernel: Killed process 2702 (sh)\n↪total-vm:113124kB, anon-rss:200kB, file-rss:0kB\nOct 14 10:22:41 localhost kernel: sh invoked oom-killer:\n↪gfp_mask=0xd0, order=0, oom_score_adj=0\n[ ... ]\n```\n\n请注意，一旦应用程序达到4KB的限制，内核的“内存不足杀手”（或oom-killer）就会介入。它终止了该应用程序，并且不再运行。您可以通过键入以下内容进行验证：\n\n```bash\n\n$ ps -o cgroup 2687\nCGROUP\n\n```\n\n## 使用`libcgroup`\n\nlibcgroup软件包中 提供的管理实用程序简化了此处描述的许多早期步骤。例如，使用cgcreate二进制文件的单个命令调用将负责创建sysfs条目和文件的过程。\n\n要创建在 子系统foo下命名的组memory，请键入以下内容：\n\n```bash\n$ sudo cgcreate -g memory:foo\n```\n\n注意：libcgroup提供了一种用于管理控制组中的任务的机制。\n\n使用与以前相同的方法，您可以开始设置阈值：\n\n```bash\n$ echo 50000000 | sudo tee\n↪/sys/fs/cgroup/memory/foo/memory.limit_in_bytes\n```\n\n验证新配置的设置：\n\n```bash\n$ sudo cat memory.limit_in_bytes\n50003968\n```\n\nfoo使用 cgexec二进制文件 在cgroup中运行应用程序：\n\n```bash\n$ sudo cgexec -g memory:foo ~/test.sh\n```\n\n使用其PID编号，验证应用程序正在cgroup中并在已定义的子系统（memory）下运行：\n\n```bash\n$  ps -o cgroup 2945\nCGROUP\n6:memory:/foo,1:name=systemd:/user.slice/user-0.slice/\n↪session-1.scope\n```\n\n如果您的应用程序不再运行，并且您想要清理并删除cgroup，则可以使用cgdelete二进制文件来完成。要从控制器foo 下面删除组memory，请键入：\n\n```bash\n$ sudo cgdelete memory:foo\n```\n\n持久群体\n您还可以通过一个简单的配置文件和启动服务来完成上述所有操作。您可以在/etc/cgconfig.conf文件中定义所有cgroup名称和属性。以下内容为该组添加了一些属性foo：\n\n```bash\n\n$ cat /etc/cgconfig.conf\n#\n#  Copyright IBM Corporation. 2007\n#\n#  Authors:     Balbir Singh <balbir@linux.vnet.ibm.com>\n#  This program is free software; you can redistribute it\n#  and/or modify it under the terms of version 2.1 of the GNU\n#  Lesser General Public License as published by the Free\n#  Software Foundation.\n#\n#  This program is distributed in the hope that it would be\n#  useful, but WITHOUT ANY WARRANTY; without even the implied\n#  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n#  PURPOSE.\n#\n#\n# By default, we expect systemd mounts everything on boot,\n# so there is not much to do.\n# See man cgconfig.conf for further details, how to create\n# groups on system boot using this file.\n\ngroup foo {\ncpu {\ncpu.shares = 100;\n}\nmemory {\nmemory.limit_in_bytes = 5000000;\n}\n}\n```\n\n这些cpu.shares选项定义组的CPU优先级。默认情况下，所有组都继承1,024个份额或100％的CPU时间。通过将此值降低到较为保守的程度（例如100），该组将被限制为大约CPU时间的10％。\n\n如前所述，在cgroup中运行的进程也可以限制为它可以访问的CPU（核心）数量。将以下部分添加到相同的cgconfig.conf文件中，并在所需的组名称下：\n\n```bash\n\ncpuset {\ncpuset.cpus=\"0-5\";\n}\n\n```\n\n有了这个限制，此cgroup会将应用程序绑定到核心0到5-也就是说，它将仅看到系统上的前六个CPU核心。\n\n接下来，您需要使用该cgconfig服务加载此配置。首先，启用cgconfig以在系统启动时加载以上配置：\n\n```bash\n$ sudo systemctl enable cgconfig\nCreate symlink from /etc/systemd/system/sysinit.target.wants/\n↪cgconfig.service\nto /usr/lib/systemd/system/cgconfig.service.\n```\n\n现在，启动cgconfig服务并手动加载相同的配置文件（或者您可以跳过此步骤并重新引导系统）：\n\n```bash\n$ sudo systemctl start cgconfig\n```\n\n将应用程序启动到cgroup中，foo并将其绑定到您的 memory和cpu 限制：\n\n```bash\n$ sudo cgexec -g memory,cpu,cpuset:foo ~/test.sh &\n```\n\n除了将应用程序启动到预定义的cgroup中之外，其余所有内容将在系统重新引导后继续存在。但是，您可以通过定义依赖于cgconfig 服务的启动初始化脚本来启动该应用程序，从而自动执行该过程 。\n\n","slug":"linux/cgroups","published":1,"updated":"2021-03-11T08:33:36.010Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4m99lh0005iajrdc97526a","content":"<p>实话实说,某些软件应用程序可能需要控制或限制-至少出于稳定性和某种程度上的安全性考虑。<br>错误或错误代码常常会破坏整个计算机,并可能破坏整个生态系统。<br>幸运的是,有一种方法可以检查那些相同的应用程序。<br>控制组（cgroups）是一项内核功能,可以限制,说明和隔离一个或多个进程的CPU,内存,磁盘I / O和网络使用情况。</p>\n<p>cgroups框架提供以下内容：</p>\n<p>资源限制： 可以将组配置为不超过指定的内存限制或使用的处理器数量不超过期望的数量,或者限制为特定的外围设备。<br>优先级： 可以将一个或多个组配置为利用更少或更多的CPU或磁盘 I/O 吞吐量。<br>监控： 监视和衡量组的资源使用情况。<br>控制： 可以冻结或停止并重新启动一组进程。</p>\n<p>一个<code>cgroup</code>可以包含一个或多个绑定到同一组限制的进程。这些组也可以是分层的,这意味着子组继承了对其父组管理的限制。</p>\n<p>Linux内核提供对cgroup技术的一系列控制器或子系统的访问。控制器负责将特定类型的系统资源分配给一组一个或多个进程。<br>例如,memory控制器是在cpuacct监视CPU使用率时限制内存使用率的。</p>\n<p>您可以直接和间接（使用LXC,libvirt或Docker）访问和管理cgroup,在此我将首先通过sysfs和libcgroups库来介绍和管理cgroup 。<br>要遵循此处的示例,您首先需要安装必要的软件包。在Red Hat Enterprise Linux或CentOS上,在命令行上键入以下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">blkio：设置限制每个块设备的输入输出控制。例如:磁盘，光盘以及usb等等。</span><br><span class=\"line\">cpu：使用调度程序为cgroup任务提供cpu的访问。</span><br><span class=\"line\">cpuacct：产生cgroup任务的cpu资源报告。</span><br><span class=\"line\">cpuset：如果是多核心的cpu，这个子系统会为cgroup任务分配单独的cpu和内存。</span><br><span class=\"line\">devices：允许或拒绝cgroup任务对设备的访问。</span><br><span class=\"line\">freezer：暂停和恢复cgroup任务。</span><br><span class=\"line\">memory：设置每个cgroup的内存限制以及产生内存资源报告。</span><br><span class=\"line\">net_cls：标记每个网络包以供cgroup方便使用。</span><br><span class=\"line\">ns：命名空间子系统。</span><br><span class=\"line\">perf_event：增加了对每group的监测跟踪的能力，即可以监测属于某个特定的group的所有线程以及运行在特定CPU上的线程。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"cgroups-对内存的限制\"><a href=\"#cgroups-对内存的限制\" class=\"headerlink\" title=\"cgroups 对内存的限制\"></a>cgroups 对内存的限制</h2><h3 id=\"手动方式\"><a href=\"#手动方式\" class=\"headerlink\" title=\"手动方式\"></a>手动方式</h3><p>安装了正确的软件包后，您可以直接通过sysfs层次结构配置cgroup。例如，要foo在memory子系统下创建一个名为cgroup 的目录，请在/ sys / fs / cgroup / memory中创建一个名为foo的目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo mkdir /sys/fs/cgroup/memory/foo</span><br></pre></td></tr></table></figure>\n\n<p>默认情况下，每个新创建的cgroup都将继承对系统整个内存池的访问权限。对于某些应用程序，主要是那些继续分配更多内存但拒绝释放已经分配的内存的应用程序，可能不是一个好主意。要将应用程序限制在合理的范围内，您需要更新 memory.limit_in_bytes文件。</p>\n<p>将在cgroup下运行的任何内容的内存限制foo为50MB：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> 50000000 | sudo tee /sys/fs/cgroup/memory/foo/memory.limit_in_bytes</span><br></pre></td></tr></table></figure>\n\n<p>验证设置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo cat memory.limit_in_bytes</span><br><span class=\"line\">50003968</span><br></pre></td></tr></table></figure>\n\n<p>请注意，回读的值始终是内核页面大小的倍数（即4096字节或4KB）。该值是最小的可分配内存大小。</p>\n<p>启动应用程序：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sh ~/test.sh &amp;</span><br></pre></td></tr></table></figure>\n\n<p>使用其进程ID（PID），将应用程序移动到控制器foo下的 cgroup memory：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> 2845 &gt; /sys/fs/cgroup/memory/foo/cgroup.procs</span><br></pre></td></tr></table></figure>\n\n<p>使用相同的PID编号，列出正在运行的进程并验证其是否在所需的cgroup中运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ps -o cgroup 2845</span><br><span class=\"line\">CGROUP</span><br><span class=\"line\">8:memory:/foo,1:name=systemd:/user.slice/user-0.slice/session-4.scope</span><br></pre></td></tr></table></figure>\n\n<p>您还可以通过读取所需的文件来监视该cgroup当前正在使用的内容。在这种情况下，您将需要查看由您的进程（和产生的子进程）分配的内存量：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat /sys/fs/cgroup/memory/foo/memory.usage_in_bytes</span><br><span class=\"line\">253952</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"当我改变limit\"><a href=\"#当我改变limit\" class=\"headerlink\" title=\"当我改变limit\"></a>当我改变limit</h3><p>现在，让我们重新创建相同的场景，但不要将cgroup限制 foo为50MB内存，而是将其限制为500个字节：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> 500 | sudo tee /sys/fs/cgroup/memory/foo/memory.limit_in_bytes</span><br></pre></td></tr></table></figure>\n\n<p>注意：如果一项任务超出其定义的限制，内核将进行干预，在某些情况下，将终止该任务。</p>\n<p>同样，当您读回该值时，该值将始终是内核页面大小的倍数。因此，尽管将其设置为500字节，但实际上设置为4 KB：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat /sys/fs/cgroup/memory/foo/memory.limit_in_bytes</span><br><span class=\"line\">4096</span><br></pre></td></tr></table></figure>\n\n<p>启动应用程序，将其移至cgroup并监视系统日志：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">$ sudo tail -f /var/<span class=\"built_in\">log</span>/messages</span><br><span class=\"line\"></span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: sh invoked oom-killer:</span><br><span class=\"line\">↪gfp_mask=0xd0, order=0, oom_score_adj=0</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: sh cpuset=/ mems_allowed=0</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: CPU: 0 PID: 2687 Comm:</span><br><span class=\"line\">↪sh Tainted: G</span><br><span class=\"line\">OE  ------------   3.10.0-327.36.3.el7.x86_64 <span class=\"comment\">#1</span></span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: Hardware name: innotek GmbH</span><br><span class=\"line\">VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: ffff880036ea5c00</span><br><span class=\"line\">↪0000000093314010 ffff88000002bcd0 ffffffff81636431</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: ffff88000002bd60</span><br><span class=\"line\">↪ffffffff816313cc 01018800000000d0 ffff88000002bd68</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: ffffffffbc35e040</span><br><span class=\"line\">↪fffeefff00000000 0000000000000001 ffff880036ea6103</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: Call Trace:</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff81636431&gt;]</span><br><span class=\"line\">↪dump_stack+0x19/0x1b</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff816313cc&gt;]</span><br><span class=\"line\">↪dump_header+0x8e/0x214</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff8116d21e&gt;]</span><br><span class=\"line\">↪oom_kill_process+0x24e/0x3b0</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff81088e4e&gt;] ?</span><br><span class=\"line\">↪has_capability_noaudit+0x1e/0x30</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff811d4285&gt;]</span><br><span class=\"line\">↪mem_cgroup_oom_synchronize+0x575/0x5a0</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff811d3650&gt;] ?</span><br><span class=\"line\">↪mem_cgroup_charge_common+0xc0/0xc0</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff8116da94&gt;]</span><br><span class=\"line\">↪pagefault_out_of_memory+0x14/0x90</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff8162f815&gt;]</span><br><span class=\"line\">↪mm_fault_error+0x68/0x12b</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff816422d2&gt;]</span><br><span class=\"line\">↪__do_page_fault+0x3e2/0x450</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff81642363&gt;]</span><br><span class=\"line\">↪do_page_fault+0x23/0x80</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff8163e648&gt;]</span><br><span class=\"line\">↪page_fault+0x28/0x30</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: Task <span class=\"keyword\">in</span> /foo killed as</span><br><span class=\"line\">↪a result of <span class=\"built_in\">limit</span> of /foo</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: memory: usage 4kB, <span class=\"built_in\">limit</span></span><br><span class=\"line\">↪4kB, failcnt 8</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: memory+swap: usage 4kB,</span><br><span class=\"line\">↪<span class=\"built_in\">limit</span> 9007199254740991kB, failcnt 0</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: kmem: usage 0kB, <span class=\"built_in\">limit</span></span><br><span class=\"line\">↪9007199254740991kB, failcnt 0</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: Memory cgroup stats <span class=\"keyword\">for</span> /foo:</span><br><span class=\"line\">↪cache:0KB rss:4KB rss_huge:0KB mapped_file:0KB swap:0KB</span><br><span class=\"line\">↪inactive_anon:0KB active_anon:0KB inactive_file:0KB</span><br><span class=\"line\">↪active_file:0KB unevictable:0KB</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [ pid ]   uid  tgid total_vm</span><br><span class=\"line\">↪rss nr_ptes swapents oom_score_adj name</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [ 2687]     0  2687    28281</span><br><span class=\"line\">↪347     12        0             0 sh</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [ 2702]     0  2702    28281</span><br><span class=\"line\">↪50    7        0             0 sh</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: Memory cgroup out of memory:</span><br><span class=\"line\">↪Kill process 2687 (sh) score 0 or sacrifice child</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: Killed process 2702 (sh)</span><br><span class=\"line\">↪total-vm:113124kB, anon-rss:200kB, file-rss:0kB</span><br><span class=\"line\">Oct 14 10:22:41 localhost kernel: sh invoked oom-killer:</span><br><span class=\"line\">↪gfp_mask=0xd0, order=0, oom_score_adj=0</span><br><span class=\"line\">[ ... ]</span><br></pre></td></tr></table></figure>\n\n<p>请注意，一旦应用程序达到4KB的限制，内核的“内存不足杀手”（或oom-killer）就会介入。它终止了该应用程序，并且不再运行。您可以通过键入以下内容进行验证：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">$ ps -o cgroup 2687</span><br><span class=\"line\">CGROUP</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用libcgroup\"><a href=\"#使用libcgroup\" class=\"headerlink\" title=\"使用libcgroup\"></a>使用<code>libcgroup</code></h2><p>libcgroup软件包中 提供的管理实用程序简化了此处描述的许多早期步骤。例如，使用cgcreate二进制文件的单个命令调用将负责创建sysfs条目和文件的过程。</p>\n<p>要创建在 子系统foo下命名的组memory，请键入以下内容：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo cgcreate -g memory:foo</span><br></pre></td></tr></table></figure>\n\n<p>注意：libcgroup提供了一种用于管理控制组中的任务的机制。</p>\n<p>使用与以前相同的方法，您可以开始设置阈值：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> 50000000 | sudo tee</span><br><span class=\"line\">↪/sys/fs/cgroup/memory/foo/memory.limit_in_bytes</span><br></pre></td></tr></table></figure>\n\n<p>验证新配置的设置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo cat memory.limit_in_bytes</span><br><span class=\"line\">50003968</span><br></pre></td></tr></table></figure>\n\n<p>foo使用 cgexec二进制文件 在cgroup中运行应用程序：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo cgexec -g memory:foo ~/test.sh</span><br></pre></td></tr></table></figure>\n\n<p>使用其PID编号，验证应用程序正在cgroup中并在已定义的子系统（memory）下运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$  ps -o cgroup 2945</span><br><span class=\"line\">CGROUP</span><br><span class=\"line\">6:memory:/foo,1:name=systemd:/user.slice/user-0.slice/</span><br><span class=\"line\">↪session-1.scope</span><br></pre></td></tr></table></figure>\n\n<p>如果您的应用程序不再运行，并且您想要清理并删除cgroup，则可以使用cgdelete二进制文件来完成。要从控制器foo 下面删除组memory，请键入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo cgdelete memory:foo</span><br></pre></td></tr></table></figure>\n\n<p>持久群体<br>您还可以通过一个简单的配置文件和启动服务来完成上述所有操作。您可以在/etc/cgconfig.conf文件中定义所有cgroup名称和属性。以下内容为该组添加了一些属性foo：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">$ cat /etc/cgconfig.conf</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#  Copyright IBM Corporation. 2007</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#  Authors:     Balbir Singh &lt;balbir@linux.vnet.ibm.com&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#  This program is free software; you can redistribute it</span></span><br><span class=\"line\"><span class=\"comment\">#  and/or modify it under the terms of version 2.1 of the GNU</span></span><br><span class=\"line\"><span class=\"comment\">#  Lesser General Public License as published by the Free</span></span><br><span class=\"line\"><span class=\"comment\">#  Software Foundation.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#  This program is distributed in the hope that it would be</span></span><br><span class=\"line\"><span class=\"comment\">#  useful, but WITHOUT ANY WARRANTY; without even the implied</span></span><br><span class=\"line\"><span class=\"comment\">#  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR</span></span><br><span class=\"line\"><span class=\"comment\">#  PURPOSE.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># By default, we expect systemd mounts everything on boot,</span></span><br><span class=\"line\"><span class=\"comment\"># so there is not much to do.</span></span><br><span class=\"line\"><span class=\"comment\"># See man cgconfig.conf for further details, how to create</span></span><br><span class=\"line\"><span class=\"comment\"># groups on system boot using this file.</span></span><br><span class=\"line\"></span><br><span class=\"line\">group foo &#123;</span><br><span class=\"line\">cpu &#123;</span><br><span class=\"line\">cpu.shares = 100;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">memory &#123;</span><br><span class=\"line\">memory.limit_in_bytes = 5000000;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这些cpu.shares选项定义组的CPU优先级。默认情况下，所有组都继承1,024个份额或100％的CPU时间。通过将此值降低到较为保守的程度（例如100），该组将被限制为大约CPU时间的10％。</p>\n<p>如前所述，在cgroup中运行的进程也可以限制为它可以访问的CPU（核心）数量。将以下部分添加到相同的cgconfig.conf文件中，并在所需的组名称下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">cpuset &#123;</span><br><span class=\"line\">cpuset.cpus=<span class=\"string\">&quot;0-5&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>有了这个限制，此cgroup会将应用程序绑定到核心0到5-也就是说，它将仅看到系统上的前六个CPU核心。</p>\n<p>接下来，您需要使用该cgconfig服务加载此配置。首先，启用cgconfig以在系统启动时加载以上配置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo systemctl <span class=\"built_in\">enable</span> cgconfig</span><br><span class=\"line\">Create symlink from /etc/systemd/system/sysinit.target.wants/</span><br><span class=\"line\">↪cgconfig.service</span><br><span class=\"line\">to /usr/lib/systemd/system/cgconfig.service.</span><br></pre></td></tr></table></figure>\n\n<p>现在，启动cgconfig服务并手动加载相同的配置文件（或者您可以跳过此步骤并重新引导系统）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo systemctl start cgconfig</span><br></pre></td></tr></table></figure>\n\n<p>将应用程序启动到cgroup中，foo并将其绑定到您的 memory和cpu 限制：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo cgexec -g memory,cpu,cpuset:foo ~/test.sh &amp;</span><br></pre></td></tr></table></figure>\n\n<p>除了将应用程序启动到预定义的cgroup中之外，其余所有内容将在系统重新引导后继续存在。但是，您可以通过定义依赖于cgconfig 服务的启动初始化脚本来启动该应用程序，从而自动执行该过程 。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>实话实说,某些软件应用程序可能需要控制或限制-至少出于稳定性和某种程度上的安全性考虑。<br>错误或错误代码常常会破坏整个计算机,并可能破坏整个生态系统。<br>幸运的是,有一种方法可以检查那些相同的应用程序。<br>控制组（cgroups）是一项内核功能,可以限制,说明和隔离一个或多个进程的CPU,内存,磁盘I / O和网络使用情况。</p>\n<p>cgroups框架提供以下内容：</p>\n<p>资源限制： 可以将组配置为不超过指定的内存限制或使用的处理器数量不超过期望的数量,或者限制为特定的外围设备。<br>优先级： 可以将一个或多个组配置为利用更少或更多的CPU或磁盘 I/O 吞吐量。<br>监控： 监视和衡量组的资源使用情况。<br>控制： 可以冻结或停止并重新启动一组进程。</p>\n<p>一个<code>cgroup</code>可以包含一个或多个绑定到同一组限制的进程。这些组也可以是分层的,这意味着子组继承了对其父组管理的限制。</p>\n<p>Linux内核提供对cgroup技术的一系列控制器或子系统的访问。控制器负责将特定类型的系统资源分配给一组一个或多个进程。<br>例如,memory控制器是在cpuacct监视CPU使用率时限制内存使用率的。</p>\n<p>您可以直接和间接（使用LXC,libvirt或Docker）访问和管理cgroup,在此我将首先通过sysfs和libcgroups库来介绍和管理cgroup 。<br>要遵循此处的示例,您首先需要安装必要的软件包。在Red Hat Enterprise Linux或CentOS上,在命令行上键入以下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">blkio：设置限制每个块设备的输入输出控制。例如:磁盘，光盘以及usb等等。</span><br><span class=\"line\">cpu：使用调度程序为cgroup任务提供cpu的访问。</span><br><span class=\"line\">cpuacct：产生cgroup任务的cpu资源报告。</span><br><span class=\"line\">cpuset：如果是多核心的cpu，这个子系统会为cgroup任务分配单独的cpu和内存。</span><br><span class=\"line\">devices：允许或拒绝cgroup任务对设备的访问。</span><br><span class=\"line\">freezer：暂停和恢复cgroup任务。</span><br><span class=\"line\">memory：设置每个cgroup的内存限制以及产生内存资源报告。</span><br><span class=\"line\">net_cls：标记每个网络包以供cgroup方便使用。</span><br><span class=\"line\">ns：命名空间子系统。</span><br><span class=\"line\">perf_event：增加了对每group的监测跟踪的能力，即可以监测属于某个特定的group的所有线程以及运行在特定CPU上的线程。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"cgroups-对内存的限制\"><a href=\"#cgroups-对内存的限制\" class=\"headerlink\" title=\"cgroups 对内存的限制\"></a>cgroups 对内存的限制</h2><h3 id=\"手动方式\"><a href=\"#手动方式\" class=\"headerlink\" title=\"手动方式\"></a>手动方式</h3><p>安装了正确的软件包后，您可以直接通过sysfs层次结构配置cgroup。例如，要foo在memory子系统下创建一个名为cgroup 的目录，请在/ sys / fs / cgroup / memory中创建一个名为foo的目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo mkdir /sys/fs/cgroup/memory/foo</span><br></pre></td></tr></table></figure>\n\n<p>默认情况下，每个新创建的cgroup都将继承对系统整个内存池的访问权限。对于某些应用程序，主要是那些继续分配更多内存但拒绝释放已经分配的内存的应用程序，可能不是一个好主意。要将应用程序限制在合理的范围内，您需要更新 memory.limit_in_bytes文件。</p>\n<p>将在cgroup下运行的任何内容的内存限制foo为50MB：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> 50000000 | sudo tee /sys/fs/cgroup/memory/foo/memory.limit_in_bytes</span><br></pre></td></tr></table></figure>\n\n<p>验证设置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo cat memory.limit_in_bytes</span><br><span class=\"line\">50003968</span><br></pre></td></tr></table></figure>\n\n<p>请注意，回读的值始终是内核页面大小的倍数（即4096字节或4KB）。该值是最小的可分配内存大小。</p>\n<p>启动应用程序：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sh ~/test.sh &amp;</span><br></pre></td></tr></table></figure>\n\n<p>使用其进程ID（PID），将应用程序移动到控制器foo下的 cgroup memory：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> 2845 &gt; /sys/fs/cgroup/memory/foo/cgroup.procs</span><br></pre></td></tr></table></figure>\n\n<p>使用相同的PID编号，列出正在运行的进程并验证其是否在所需的cgroup中运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ps -o cgroup 2845</span><br><span class=\"line\">CGROUP</span><br><span class=\"line\">8:memory:/foo,1:name=systemd:/user.slice/user-0.slice/session-4.scope</span><br></pre></td></tr></table></figure>\n\n<p>您还可以通过读取所需的文件来监视该cgroup当前正在使用的内容。在这种情况下，您将需要查看由您的进程（和产生的子进程）分配的内存量：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat /sys/fs/cgroup/memory/foo/memory.usage_in_bytes</span><br><span class=\"line\">253952</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"当我改变limit\"><a href=\"#当我改变limit\" class=\"headerlink\" title=\"当我改变limit\"></a>当我改变limit</h3><p>现在，让我们重新创建相同的场景，但不要将cgroup限制 foo为50MB内存，而是将其限制为500个字节：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> 500 | sudo tee /sys/fs/cgroup/memory/foo/memory.limit_in_bytes</span><br></pre></td></tr></table></figure>\n\n<p>注意：如果一项任务超出其定义的限制，内核将进行干预，在某些情况下，将终止该任务。</p>\n<p>同样，当您读回该值时，该值将始终是内核页面大小的倍数。因此，尽管将其设置为500字节，但实际上设置为4 KB：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat /sys/fs/cgroup/memory/foo/memory.limit_in_bytes</span><br><span class=\"line\">4096</span><br></pre></td></tr></table></figure>\n\n<p>启动应用程序，将其移至cgroup并监视系统日志：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">$ sudo tail -f /var/<span class=\"built_in\">log</span>/messages</span><br><span class=\"line\"></span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: sh invoked oom-killer:</span><br><span class=\"line\">↪gfp_mask=0xd0, order=0, oom_score_adj=0</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: sh cpuset=/ mems_allowed=0</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: CPU: 0 PID: 2687 Comm:</span><br><span class=\"line\">↪sh Tainted: G</span><br><span class=\"line\">OE  ------------   3.10.0-327.36.3.el7.x86_64 <span class=\"comment\">#1</span></span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: Hardware name: innotek GmbH</span><br><span class=\"line\">VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: ffff880036ea5c00</span><br><span class=\"line\">↪0000000093314010 ffff88000002bcd0 ffffffff81636431</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: ffff88000002bd60</span><br><span class=\"line\">↪ffffffff816313cc 01018800000000d0 ffff88000002bd68</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: ffffffffbc35e040</span><br><span class=\"line\">↪fffeefff00000000 0000000000000001 ffff880036ea6103</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: Call Trace:</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff81636431&gt;]</span><br><span class=\"line\">↪dump_stack+0x19/0x1b</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff816313cc&gt;]</span><br><span class=\"line\">↪dump_header+0x8e/0x214</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff8116d21e&gt;]</span><br><span class=\"line\">↪oom_kill_process+0x24e/0x3b0</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff81088e4e&gt;] ?</span><br><span class=\"line\">↪has_capability_noaudit+0x1e/0x30</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff811d4285&gt;]</span><br><span class=\"line\">↪mem_cgroup_oom_synchronize+0x575/0x5a0</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff811d3650&gt;] ?</span><br><span class=\"line\">↪mem_cgroup_charge_common+0xc0/0xc0</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff8116da94&gt;]</span><br><span class=\"line\">↪pagefault_out_of_memory+0x14/0x90</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff8162f815&gt;]</span><br><span class=\"line\">↪mm_fault_error+0x68/0x12b</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff816422d2&gt;]</span><br><span class=\"line\">↪__do_page_fault+0x3e2/0x450</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff81642363&gt;]</span><br><span class=\"line\">↪do_page_fault+0x23/0x80</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff8163e648&gt;]</span><br><span class=\"line\">↪page_fault+0x28/0x30</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: Task <span class=\"keyword\">in</span> /foo killed as</span><br><span class=\"line\">↪a result of <span class=\"built_in\">limit</span> of /foo</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: memory: usage 4kB, <span class=\"built_in\">limit</span></span><br><span class=\"line\">↪4kB, failcnt 8</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: memory+swap: usage 4kB,</span><br><span class=\"line\">↪<span class=\"built_in\">limit</span> 9007199254740991kB, failcnt 0</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: kmem: usage 0kB, <span class=\"built_in\">limit</span></span><br><span class=\"line\">↪9007199254740991kB, failcnt 0</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: Memory cgroup stats <span class=\"keyword\">for</span> /foo:</span><br><span class=\"line\">↪cache:0KB rss:4KB rss_huge:0KB mapped_file:0KB swap:0KB</span><br><span class=\"line\">↪inactive_anon:0KB active_anon:0KB inactive_file:0KB</span><br><span class=\"line\">↪active_file:0KB unevictable:0KB</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [ pid ]   uid  tgid total_vm</span><br><span class=\"line\">↪rss nr_ptes swapents oom_score_adj name</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [ 2687]     0  2687    28281</span><br><span class=\"line\">↪347     12        0             0 sh</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: [ 2702]     0  2702    28281</span><br><span class=\"line\">↪50    7        0             0 sh</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: Memory cgroup out of memory:</span><br><span class=\"line\">↪Kill process 2687 (sh) score 0 or sacrifice child</span><br><span class=\"line\">Oct 14 10:22:40 localhost kernel: Killed process 2702 (sh)</span><br><span class=\"line\">↪total-vm:113124kB, anon-rss:200kB, file-rss:0kB</span><br><span class=\"line\">Oct 14 10:22:41 localhost kernel: sh invoked oom-killer:</span><br><span class=\"line\">↪gfp_mask=0xd0, order=0, oom_score_adj=0</span><br><span class=\"line\">[ ... ]</span><br></pre></td></tr></table></figure>\n\n<p>请注意，一旦应用程序达到4KB的限制，内核的“内存不足杀手”（或oom-killer）就会介入。它终止了该应用程序，并且不再运行。您可以通过键入以下内容进行验证：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">$ ps -o cgroup 2687</span><br><span class=\"line\">CGROUP</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用libcgroup\"><a href=\"#使用libcgroup\" class=\"headerlink\" title=\"使用libcgroup\"></a>使用<code>libcgroup</code></h2><p>libcgroup软件包中 提供的管理实用程序简化了此处描述的许多早期步骤。例如，使用cgcreate二进制文件的单个命令调用将负责创建sysfs条目和文件的过程。</p>\n<p>要创建在 子系统foo下命名的组memory，请键入以下内容：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo cgcreate -g memory:foo</span><br></pre></td></tr></table></figure>\n\n<p>注意：libcgroup提供了一种用于管理控制组中的任务的机制。</p>\n<p>使用与以前相同的方法，您可以开始设置阈值：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> 50000000 | sudo tee</span><br><span class=\"line\">↪/sys/fs/cgroup/memory/foo/memory.limit_in_bytes</span><br></pre></td></tr></table></figure>\n\n<p>验证新配置的设置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo cat memory.limit_in_bytes</span><br><span class=\"line\">50003968</span><br></pre></td></tr></table></figure>\n\n<p>foo使用 cgexec二进制文件 在cgroup中运行应用程序：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo cgexec -g memory:foo ~/test.sh</span><br></pre></td></tr></table></figure>\n\n<p>使用其PID编号，验证应用程序正在cgroup中并在已定义的子系统（memory）下运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$  ps -o cgroup 2945</span><br><span class=\"line\">CGROUP</span><br><span class=\"line\">6:memory:/foo,1:name=systemd:/user.slice/user-0.slice/</span><br><span class=\"line\">↪session-1.scope</span><br></pre></td></tr></table></figure>\n\n<p>如果您的应用程序不再运行，并且您想要清理并删除cgroup，则可以使用cgdelete二进制文件来完成。要从控制器foo 下面删除组memory，请键入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo cgdelete memory:foo</span><br></pre></td></tr></table></figure>\n\n<p>持久群体<br>您还可以通过一个简单的配置文件和启动服务来完成上述所有操作。您可以在/etc/cgconfig.conf文件中定义所有cgroup名称和属性。以下内容为该组添加了一些属性foo：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">$ cat /etc/cgconfig.conf</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#  Copyright IBM Corporation. 2007</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#  Authors:     Balbir Singh &lt;balbir@linux.vnet.ibm.com&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#  This program is free software; you can redistribute it</span></span><br><span class=\"line\"><span class=\"comment\">#  and/or modify it under the terms of version 2.1 of the GNU</span></span><br><span class=\"line\"><span class=\"comment\">#  Lesser General Public License as published by the Free</span></span><br><span class=\"line\"><span class=\"comment\">#  Software Foundation.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#  This program is distributed in the hope that it would be</span></span><br><span class=\"line\"><span class=\"comment\">#  useful, but WITHOUT ANY WARRANTY; without even the implied</span></span><br><span class=\"line\"><span class=\"comment\">#  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR</span></span><br><span class=\"line\"><span class=\"comment\">#  PURPOSE.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># By default, we expect systemd mounts everything on boot,</span></span><br><span class=\"line\"><span class=\"comment\"># so there is not much to do.</span></span><br><span class=\"line\"><span class=\"comment\"># See man cgconfig.conf for further details, how to create</span></span><br><span class=\"line\"><span class=\"comment\"># groups on system boot using this file.</span></span><br><span class=\"line\"></span><br><span class=\"line\">group foo &#123;</span><br><span class=\"line\">cpu &#123;</span><br><span class=\"line\">cpu.shares = 100;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">memory &#123;</span><br><span class=\"line\">memory.limit_in_bytes = 5000000;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这些cpu.shares选项定义组的CPU优先级。默认情况下，所有组都继承1,024个份额或100％的CPU时间。通过将此值降低到较为保守的程度（例如100），该组将被限制为大约CPU时间的10％。</p>\n<p>如前所述，在cgroup中运行的进程也可以限制为它可以访问的CPU（核心）数量。将以下部分添加到相同的cgconfig.conf文件中，并在所需的组名称下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">cpuset &#123;</span><br><span class=\"line\">cpuset.cpus=<span class=\"string\">&quot;0-5&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>有了这个限制，此cgroup会将应用程序绑定到核心0到5-也就是说，它将仅看到系统上的前六个CPU核心。</p>\n<p>接下来，您需要使用该cgconfig服务加载此配置。首先，启用cgconfig以在系统启动时加载以上配置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo systemctl <span class=\"built_in\">enable</span> cgconfig</span><br><span class=\"line\">Create symlink from /etc/systemd/system/sysinit.target.wants/</span><br><span class=\"line\">↪cgconfig.service</span><br><span class=\"line\">to /usr/lib/systemd/system/cgconfig.service.</span><br></pre></td></tr></table></figure>\n\n<p>现在，启动cgconfig服务并手动加载相同的配置文件（或者您可以跳过此步骤并重新引导系统）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo systemctl start cgconfig</span><br></pre></td></tr></table></figure>\n\n<p>将应用程序启动到cgroup中，foo并将其绑定到您的 memory和cpu 限制：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo cgexec -g memory,cpu,cpuset:foo ~/test.sh &amp;</span><br></pre></td></tr></table></figure>\n\n<p>除了将应用程序启动到预定义的cgroup中之外，其余所有内容将在系统重新引导后继续存在。但是，您可以通过定义依赖于cgconfig 服务的启动初始化脚本来启动该应用程序，从而自动执行该过程 。</p>\n"},{"title":"如何快速安装zsh","date":"2021-03-12T06:16:56.000Z","_content":"\n## Linux 安装并配置zsh\n\n1.1 安装zsh\n\n```bash\n$ sudo apt-get install -y zsh\n```\n\n1.2 安装oh-my-zsh\n\n```bash\n$ sh -c \"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n```\n\n1.3 安装powerline font字体库\n\n```bash\n\n$ sudo apt-get install fonts-powerline\n```\n\n1.4 打开zsh配置文件 ~/.zshrc，修改主题为agnoster\n\n```bash\n1 # Set name of the theme to load --- if set to \"random\", it will\n2 # load a random theme each time oh-my-zsh is loaded, in which case,\n3 # to know which specific one was loaded, run: echo $RANDOM_THEME\n4 # See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\n5 ZSH_THEME=\"agnoster\"\n```\n","source":"_posts/zsh.md","raw":"---\ntitle: 如何快速安装zsh\ndate: 2021-03-12 14:16:56\ntags:\n- linux\n---\n\n## Linux 安装并配置zsh\n\n1.1 安装zsh\n\n```bash\n$ sudo apt-get install -y zsh\n```\n\n1.2 安装oh-my-zsh\n\n```bash\n$ sh -c \"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n```\n\n1.3 安装powerline font字体库\n\n```bash\n\n$ sudo apt-get install fonts-powerline\n```\n\n1.4 打开zsh配置文件 ~/.zshrc，修改主题为agnoster\n\n```bash\n1 # Set name of the theme to load --- if set to \"random\", it will\n2 # load a random theme each time oh-my-zsh is loaded, in which case,\n3 # to know which specific one was loaded, run: echo $RANDOM_THEME\n4 # See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\n5 ZSH_THEME=\"agnoster\"\n```\n","slug":"zsh","published":1,"updated":"2021-03-12T06:18:54.283Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckm8ttjje0001o1jr460mgla1","content":"<h2 id=\"Linux-安装并配置zsh\"><a href=\"#Linux-安装并配置zsh\" class=\"headerlink\" title=\"Linux 安装并配置zsh\"></a>Linux 安装并配置zsh</h2><p>1.1 安装zsh</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install -y zsh</span><br></pre></td></tr></table></figure>\n\n<p>1.2 安装oh-my-zsh</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sh -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>1.3 安装powerline font字体库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">$ sudo apt-get install fonts-powerline</span><br></pre></td></tr></table></figure>\n\n<p>1.4 打开zsh配置文件 ~/.zshrc，修改主题为agnoster</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 <span class=\"comment\"># Set name of the theme to load --- if set to &quot;random&quot;, it will</span></span><br><span class=\"line\">2 <span class=\"comment\"># load a random theme each time oh-my-zsh is loaded, in which case,</span></span><br><span class=\"line\">3 <span class=\"comment\"># to know which specific one was loaded, run: echo $RANDOM_THEME</span></span><br><span class=\"line\">4 <span class=\"comment\"># See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes</span></span><br><span class=\"line\">5 ZSH_THEME=<span class=\"string\">&quot;agnoster&quot;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Linux-安装并配置zsh\"><a href=\"#Linux-安装并配置zsh\" class=\"headerlink\" title=\"Linux 安装并配置zsh\"></a>Linux 安装并配置zsh</h2><p>1.1 安装zsh</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install -y zsh</span><br></pre></td></tr></table></figure>\n\n<p>1.2 安装oh-my-zsh</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sh -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>1.3 安装powerline font字体库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">$ sudo apt-get install fonts-powerline</span><br></pre></td></tr></table></figure>\n\n<p>1.4 打开zsh配置文件 ~/.zshrc，修改主题为agnoster</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 <span class=\"comment\"># Set name of the theme to load --- if set to &quot;random&quot;, it will</span></span><br><span class=\"line\">2 <span class=\"comment\"># load a random theme each time oh-my-zsh is loaded, in which case,</span></span><br><span class=\"line\">3 <span class=\"comment\"># to know which specific one was loaded, run: echo $RANDOM_THEME</span></span><br><span class=\"line\">4 <span class=\"comment\"># See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes</span></span><br><span class=\"line\">5 ZSH_THEME=<span class=\"string\">&quot;agnoster&quot;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"Linux 虚拟网络设备详解之 Bridge 网桥","date":"2021-03-13T14:44:26.000Z","_content":"\n同 tap/tun、veth-pair 一样，Bridge 也是一种虚拟网络设备，所以具备虚拟网络设备的所有特性，比如可以配置 IP、MAC 等。\n\n除此之外，Bridge 还是一个交换机，具有交换机所有的功能。\n\n对于普通的网络设备，就像一个管道，只有两端，数据从一端进，从另一端出。而 Bridge 有多个端口，数据可以从多个端口进，从多个端口出。\n\nBridge 的这个特性让它可以接入其他的网络设备.\n\n使用 来操作linux Bridge\n\n### 安装 `brctl`\n\n```bash\n$ yum install bridge-utils -y\n```\n\n我们模拟一个docker0 类似的网桥\n\n1. 添加网桥(br0)\n```bash\n$ brctl addbr br0\n\n\n# 方法一:\n$ sudo ifconfig br0 192.168.100.1 netmask  255.255.255.0\n\n# 方法二:\n\n$ sudo ip addr add 192.168.100.0/16 dev bridge0\n\n$ sudo ip link set dev bridge0 up\n\n```\n\n2.查看网桥\n\n1）显示所有的网桥信息\n\n```bash\n$ sudo brctl show\n```\n\n2）显示某个网桥(br0)的信息\n\n```bash\n$ sudo brctl show br0\n```\n\n3.删除网桥(br0)\n\n```bash\n$ sudo brctl delbr br0\n```\n\n\n4. 将eth0端口加入网桥br0\n\n```bash\n$ brctl addif br0 eth0\n```\n\n\n5. 从网桥br0中删除eth0端口\n\n```bash\n$ brctl delif br0 eth0\n```\n","source":"_posts/linux/bridge.md","raw":"---\ntitle: Linux 虚拟网络设备详解之 Bridge 网桥\ndate: 2021-03-13 22:44:26\ntags:\n- linux\n- network\n---\n\n同 tap/tun、veth-pair 一样，Bridge 也是一种虚拟网络设备，所以具备虚拟网络设备的所有特性，比如可以配置 IP、MAC 等。\n\n除此之外，Bridge 还是一个交换机，具有交换机所有的功能。\n\n对于普通的网络设备，就像一个管道，只有两端，数据从一端进，从另一端出。而 Bridge 有多个端口，数据可以从多个端口进，从多个端口出。\n\nBridge 的这个特性让它可以接入其他的网络设备.\n\n使用 来操作linux Bridge\n\n### 安装 `brctl`\n\n```bash\n$ yum install bridge-utils -y\n```\n\n我们模拟一个docker0 类似的网桥\n\n1. 添加网桥(br0)\n```bash\n$ brctl addbr br0\n\n\n# 方法一:\n$ sudo ifconfig br0 192.168.100.1 netmask  255.255.255.0\n\n# 方法二:\n\n$ sudo ip addr add 192.168.100.0/16 dev bridge0\n\n$ sudo ip link set dev bridge0 up\n\n```\n\n2.查看网桥\n\n1）显示所有的网桥信息\n\n```bash\n$ sudo brctl show\n```\n\n2）显示某个网桥(br0)的信息\n\n```bash\n$ sudo brctl show br0\n```\n\n3.删除网桥(br0)\n\n```bash\n$ sudo brctl delbr br0\n```\n\n\n4. 将eth0端口加入网桥br0\n\n```bash\n$ brctl addif br0 eth0\n```\n\n\n5. 从网桥br0中删除eth0端口\n\n```bash\n$ brctl delif br0 eth0\n```\n","slug":"linux/bridge","published":1,"updated":"2021-03-13T15:28:41.708Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckm8ttjji0004o1jr6ts3hj7x","content":"<p>同 tap/tun、veth-pair 一样，Bridge 也是一种虚拟网络设备，所以具备虚拟网络设备的所有特性，比如可以配置 IP、MAC 等。</p>\n<p>除此之外，Bridge 还是一个交换机，具有交换机所有的功能。</p>\n<p>对于普通的网络设备，就像一个管道，只有两端，数据从一端进，从另一端出。而 Bridge 有多个端口，数据可以从多个端口进，从多个端口出。</p>\n<p>Bridge 的这个特性让它可以接入其他的网络设备.</p>\n<p>使用 来操作linux Bridge</p>\n<h3 id=\"安装-brctl\"><a href=\"#安装-brctl\" class=\"headerlink\" title=\"安装 brctl\"></a>安装 <code>brctl</code></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum install bridge-utils -y</span><br></pre></td></tr></table></figure>\n\n<p>我们模拟一个docker0 类似的网桥</p>\n<ol>\n<li>添加网桥(br0)<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brctl addbr br0</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法一:</span></span><br><span class=\"line\">$ sudo ifconfig br0 192.168.100.1 netmask  255.255.255.0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法二:</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo ip addr add 192.168.100.0/16 dev bridge0</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo ip link <span class=\"built_in\">set</span> dev bridge0 up</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>2.查看网桥</p>\n<p>1）显示所有的网桥信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo brctl show</span><br></pre></td></tr></table></figure>\n\n<p>2）显示某个网桥(br0)的信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo brctl show br0</span><br></pre></td></tr></table></figure>\n\n<p>3.删除网桥(br0)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo brctl delbr br0</span><br></pre></td></tr></table></figure>\n\n\n<ol start=\"4\">\n<li>将eth0端口加入网桥br0</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brctl addif br0 eth0</span><br></pre></td></tr></table></figure>\n\n\n<ol start=\"5\">\n<li>从网桥br0中删除eth0端口</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brctl delif br0 eth0</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>同 tap/tun、veth-pair 一样，Bridge 也是一种虚拟网络设备，所以具备虚拟网络设备的所有特性，比如可以配置 IP、MAC 等。</p>\n<p>除此之外，Bridge 还是一个交换机，具有交换机所有的功能。</p>\n<p>对于普通的网络设备，就像一个管道，只有两端，数据从一端进，从另一端出。而 Bridge 有多个端口，数据可以从多个端口进，从多个端口出。</p>\n<p>Bridge 的这个特性让它可以接入其他的网络设备.</p>\n<p>使用 来操作linux Bridge</p>\n<h3 id=\"安装-brctl\"><a href=\"#安装-brctl\" class=\"headerlink\" title=\"安装 brctl\"></a>安装 <code>brctl</code></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum install bridge-utils -y</span><br></pre></td></tr></table></figure>\n\n<p>我们模拟一个docker0 类似的网桥</p>\n<ol>\n<li>添加网桥(br0)<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brctl addbr br0</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法一:</span></span><br><span class=\"line\">$ sudo ifconfig br0 192.168.100.1 netmask  255.255.255.0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法二:</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo ip addr add 192.168.100.0/16 dev bridge0</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo ip link <span class=\"built_in\">set</span> dev bridge0 up</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>2.查看网桥</p>\n<p>1）显示所有的网桥信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo brctl show</span><br></pre></td></tr></table></figure>\n\n<p>2）显示某个网桥(br0)的信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo brctl show br0</span><br></pre></td></tr></table></figure>\n\n<p>3.删除网桥(br0)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo brctl delbr br0</span><br></pre></td></tr></table></figure>\n\n\n<ol start=\"4\">\n<li>将eth0端口加入网桥br0</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brctl addif br0 eth0</span><br></pre></td></tr></table></figure>\n\n\n<ol start=\"5\">\n<li>从网桥br0中删除eth0端口</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brctl delif br0 eth0</span><br></pre></td></tr></table></figure>\n"},{"title":"lxc","date":"2021-03-16T14:29:22.000Z","_content":"\n运行虚拟机时，容器几乎接近裸机。托管虚拟实例时，它们几乎没有开销。\nLXC于2008年首次引入，从其之前的Solaris Containers（或Solaris Zones）和FreeBSD jail中采用了其大部分功能。\nLXC无需创建完整的虚拟机，而是可以通过自己的进程和网络空间来实现虚拟环境。\n通过使用命名空间来强制执行进程隔离，并利用内核本身的控制组（cgroup）功能，该功能可以限制，说明和隔离一个或多个进程的CPU，内存，磁盘I / O和网络使用情况。\n将此用户空间框架视为的一种非常高级的形式 chroot。\n\n\n注意：LXC使用名称空间来实现进程隔离，同时使用内核自己的cgroup来解决并限制一个或多个进程中的CPU，内存，磁盘I / O和网络使用情况。\n\n### 但是容器到底是什么？\n\n简短的答案是，容器使软件应用程序与操作系统脱钩，从而为用户提供了一个干净而最小的Linux环境，同时在一个或多个隔离的“容器”中运行其他所有内容。容器的目的是启动一组有限的应用程序或服务（通常称为微服务），并使它们在独立的沙盒环境中运行。\n\n这种隔离可防止在给定容器中运行的进程监视或影响在另一个容器中运行的进程。同样，这些容器化服务不会影响或干扰主机。能够将分散在多个物理服务器上的许多服务整合为一个的想法是数据中心选择采用该技术的众多原因之一。\n\n### 容器功能包括：\n\n* 安全性：网络服务可以在容器中运行，从而限制了由于安全漏洞或违反而造成的损害。入侵者成功利用该容器中运行的一个应用程序上的安全漏洞，仅限于该容器中可能采取的一系列操作。\n* 隔离：容器允许在同一台物理计算机上部署一个或多个应用程序，即使这些应用程序必须在不同的域下运行，每个域都需要对其各自资源的独占访问权。例如，在不同容器中运行的多个应用程序可以通过使用与每个容器关联的不同IP地址绑定到同一物理网络接口。\n* 虚拟化和透明性：容器为系统提供了虚拟化的环境，可以隐藏或限制其下的物理设备或系统配置的可见性。容器背后的一般原则是，除了解决安全性或隔离性问题之外，避免更改运行应用程序的环境。\n\n\nDocker主要致力于：\n\n* 可移植性：Docker提供了基于映像的部署模型。这种类型的可移植性提供了一种跨多个环境共享应用程序或服务集（及其所有依赖项）的简便方法。\n* 版本控制：单个Docker映像由一系列组合的层组成。每当更改图像时，都会创建一个新层。例如，每次用户指定命令（例如run或）时 ，都会创建一个新层 copy。Docker将这些层重用于新的容器构建。与Docker分层是它自己的版本控制方法。\n* 回滚：同样，每个Docker映像都有层。如果您不想使用当前运行的图层，则可以回滚到以前的版本。这种敏捷性使软件开发人员可以更轻松地连续集成和部署他们的软件技术。\n* 快速部署：置备新硬件通常可能需要几天的时间。而且，安装和配置它的工作量和开销非常重。使用Docker，您可以通过将启动和运行映像所需的时间减少到几秒钟来避免所有这些情况。用完容器后，就可以轻松销毁它。\n\n\n*** 从根本上说，Docker和LXC都非常相似。它们都是用户空间和轻量级虚拟化平台，它们实现cgroup和名称空间来管理资源隔离。但是，两者之间存在许多明显的差异。\n","source":"_posts/linux/lxc.md","raw":"---\ntitle: lxc\ndate: 2021-03-16 22:29:22\ntags:\n- linux\n- kernel\n---\n\n运行虚拟机时，容器几乎接近裸机。托管虚拟实例时，它们几乎没有开销。\nLXC于2008年首次引入，从其之前的Solaris Containers（或Solaris Zones）和FreeBSD jail中采用了其大部分功能。\nLXC无需创建完整的虚拟机，而是可以通过自己的进程和网络空间来实现虚拟环境。\n通过使用命名空间来强制执行进程隔离，并利用内核本身的控制组（cgroup）功能，该功能可以限制，说明和隔离一个或多个进程的CPU，内存，磁盘I / O和网络使用情况。\n将此用户空间框架视为的一种非常高级的形式 chroot。\n\n\n注意：LXC使用名称空间来实现进程隔离，同时使用内核自己的cgroup来解决并限制一个或多个进程中的CPU，内存，磁盘I / O和网络使用情况。\n\n### 但是容器到底是什么？\n\n简短的答案是，容器使软件应用程序与操作系统脱钩，从而为用户提供了一个干净而最小的Linux环境，同时在一个或多个隔离的“容器”中运行其他所有内容。容器的目的是启动一组有限的应用程序或服务（通常称为微服务），并使它们在独立的沙盒环境中运行。\n\n这种隔离可防止在给定容器中运行的进程监视或影响在另一个容器中运行的进程。同样，这些容器化服务不会影响或干扰主机。能够将分散在多个物理服务器上的许多服务整合为一个的想法是数据中心选择采用该技术的众多原因之一。\n\n### 容器功能包括：\n\n* 安全性：网络服务可以在容器中运行，从而限制了由于安全漏洞或违反而造成的损害。入侵者成功利用该容器中运行的一个应用程序上的安全漏洞，仅限于该容器中可能采取的一系列操作。\n* 隔离：容器允许在同一台物理计算机上部署一个或多个应用程序，即使这些应用程序必须在不同的域下运行，每个域都需要对其各自资源的独占访问权。例如，在不同容器中运行的多个应用程序可以通过使用与每个容器关联的不同IP地址绑定到同一物理网络接口。\n* 虚拟化和透明性：容器为系统提供了虚拟化的环境，可以隐藏或限制其下的物理设备或系统配置的可见性。容器背后的一般原则是，除了解决安全性或隔离性问题之外，避免更改运行应用程序的环境。\n\n\nDocker主要致力于：\n\n* 可移植性：Docker提供了基于映像的部署模型。这种类型的可移植性提供了一种跨多个环境共享应用程序或服务集（及其所有依赖项）的简便方法。\n* 版本控制：单个Docker映像由一系列组合的层组成。每当更改图像时，都会创建一个新层。例如，每次用户指定命令（例如run或）时 ，都会创建一个新层 copy。Docker将这些层重用于新的容器构建。与Docker分层是它自己的版本控制方法。\n* 回滚：同样，每个Docker映像都有层。如果您不想使用当前运行的图层，则可以回滚到以前的版本。这种敏捷性使软件开发人员可以更轻松地连续集成和部署他们的软件技术。\n* 快速部署：置备新硬件通常可能需要几天的时间。而且，安装和配置它的工作量和开销非常重。使用Docker，您可以通过将启动和运行映像所需的时间减少到几秒钟来避免所有这些情况。用完容器后，就可以轻松销毁它。\n\n\n*** 从根本上说，Docker和LXC都非常相似。它们都是用户空间和轻量级虚拟化平台，它们实现cgroup和名称空间来管理资源隔离。但是，两者之间存在许多明显的差异。\n","slug":"linux/lxc","published":1,"updated":"2021-03-17T01:34:54.081Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmcrxajx00000bjr02cq707d","content":"<p>运行虚拟机时，容器几乎接近裸机。托管虚拟实例时，它们几乎没有开销。<br>LXC于2008年首次引入，从其之前的Solaris Containers（或Solaris Zones）和FreeBSD jail中采用了其大部分功能。<br>LXC无需创建完整的虚拟机，而是可以通过自己的进程和网络空间来实现虚拟环境。<br>通过使用命名空间来强制执行进程隔离，并利用内核本身的控制组（cgroup）功能，该功能可以限制，说明和隔离一个或多个进程的CPU，内存，磁盘I / O和网络使用情况。<br>将此用户空间框架视为的一种非常高级的形式 chroot。</p>\n<p>注意：LXC使用名称空间来实现进程隔离，同时使用内核自己的cgroup来解决并限制一个或多个进程中的CPU，内存，磁盘I / O和网络使用情况。</p>\n<h3 id=\"但是容器到底是什么？\"><a href=\"#但是容器到底是什么？\" class=\"headerlink\" title=\"但是容器到底是什么？\"></a>但是容器到底是什么？</h3><p>简短的答案是，容器使软件应用程序与操作系统脱钩，从而为用户提供了一个干净而最小的Linux环境，同时在一个或多个隔离的“容器”中运行其他所有内容。容器的目的是启动一组有限的应用程序或服务（通常称为微服务），并使它们在独立的沙盒环境中运行。</p>\n<p>这种隔离可防止在给定容器中运行的进程监视或影响在另一个容器中运行的进程。同样，这些容器化服务不会影响或干扰主机。能够将分散在多个物理服务器上的许多服务整合为一个的想法是数据中心选择采用该技术的众多原因之一。</p>\n<h3 id=\"容器功能包括：\"><a href=\"#容器功能包括：\" class=\"headerlink\" title=\"容器功能包括：\"></a>容器功能包括：</h3><ul>\n<li>安全性：网络服务可以在容器中运行，从而限制了由于安全漏洞或违反而造成的损害。入侵者成功利用该容器中运行的一个应用程序上的安全漏洞，仅限于该容器中可能采取的一系列操作。</li>\n<li>隔离：容器允许在同一台物理计算机上部署一个或多个应用程序，即使这些应用程序必须在不同的域下运行，每个域都需要对其各自资源的独占访问权。例如，在不同容器中运行的多个应用程序可以通过使用与每个容器关联的不同IP地址绑定到同一物理网络接口。</li>\n<li>虚拟化和透明性：容器为系统提供了虚拟化的环境，可以隐藏或限制其下的物理设备或系统配置的可见性。容器背后的一般原则是，除了解决安全性或隔离性问题之外，避免更改运行应用程序的环境。</li>\n</ul>\n<p>Docker主要致力于：</p>\n<ul>\n<li>可移植性：Docker提供了基于映像的部署模型。这种类型的可移植性提供了一种跨多个环境共享应用程序或服务集（及其所有依赖项）的简便方法。</li>\n<li>版本控制：单个Docker映像由一系列组合的层组成。每当更改图像时，都会创建一个新层。例如，每次用户指定命令（例如run或）时 ，都会创建一个新层 copy。Docker将这些层重用于新的容器构建。与Docker分层是它自己的版本控制方法。</li>\n<li>回滚：同样，每个Docker映像都有层。如果您不想使用当前运行的图层，则可以回滚到以前的版本。这种敏捷性使软件开发人员可以更轻松地连续集成和部署他们的软件技术。</li>\n<li>快速部署：置备新硬件通常可能需要几天的时间。而且，安装和配置它的工作量和开销非常重。使用Docker，您可以通过将启动和运行映像所需的时间减少到几秒钟来避免所有这些情况。用完容器后，就可以轻松销毁它。</li>\n</ul>\n<p>*** 从根本上说，Docker和LXC都非常相似。它们都是用户空间和轻量级虚拟化平台，它们实现cgroup和名称空间来管理资源隔离。但是，两者之间存在许多明显的差异。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>运行虚拟机时，容器几乎接近裸机。托管虚拟实例时，它们几乎没有开销。<br>LXC于2008年首次引入，从其之前的Solaris Containers（或Solaris Zones）和FreeBSD jail中采用了其大部分功能。<br>LXC无需创建完整的虚拟机，而是可以通过自己的进程和网络空间来实现虚拟环境。<br>通过使用命名空间来强制执行进程隔离，并利用内核本身的控制组（cgroup）功能，该功能可以限制，说明和隔离一个或多个进程的CPU，内存，磁盘I / O和网络使用情况。<br>将此用户空间框架视为的一种非常高级的形式 chroot。</p>\n<p>注意：LXC使用名称空间来实现进程隔离，同时使用内核自己的cgroup来解决并限制一个或多个进程中的CPU，内存，磁盘I / O和网络使用情况。</p>\n<h3 id=\"但是容器到底是什么？\"><a href=\"#但是容器到底是什么？\" class=\"headerlink\" title=\"但是容器到底是什么？\"></a>但是容器到底是什么？</h3><p>简短的答案是，容器使软件应用程序与操作系统脱钩，从而为用户提供了一个干净而最小的Linux环境，同时在一个或多个隔离的“容器”中运行其他所有内容。容器的目的是启动一组有限的应用程序或服务（通常称为微服务），并使它们在独立的沙盒环境中运行。</p>\n<p>这种隔离可防止在给定容器中运行的进程监视或影响在另一个容器中运行的进程。同样，这些容器化服务不会影响或干扰主机。能够将分散在多个物理服务器上的许多服务整合为一个的想法是数据中心选择采用该技术的众多原因之一。</p>\n<h3 id=\"容器功能包括：\"><a href=\"#容器功能包括：\" class=\"headerlink\" title=\"容器功能包括：\"></a>容器功能包括：</h3><ul>\n<li>安全性：网络服务可以在容器中运行，从而限制了由于安全漏洞或违反而造成的损害。入侵者成功利用该容器中运行的一个应用程序上的安全漏洞，仅限于该容器中可能采取的一系列操作。</li>\n<li>隔离：容器允许在同一台物理计算机上部署一个或多个应用程序，即使这些应用程序必须在不同的域下运行，每个域都需要对其各自资源的独占访问权。例如，在不同容器中运行的多个应用程序可以通过使用与每个容器关联的不同IP地址绑定到同一物理网络接口。</li>\n<li>虚拟化和透明性：容器为系统提供了虚拟化的环境，可以隐藏或限制其下的物理设备或系统配置的可见性。容器背后的一般原则是，除了解决安全性或隔离性问题之外，避免更改运行应用程序的环境。</li>\n</ul>\n<p>Docker主要致力于：</p>\n<ul>\n<li>可移植性：Docker提供了基于映像的部署模型。这种类型的可移植性提供了一种跨多个环境共享应用程序或服务集（及其所有依赖项）的简便方法。</li>\n<li>版本控制：单个Docker映像由一系列组合的层组成。每当更改图像时，都会创建一个新层。例如，每次用户指定命令（例如run或）时 ，都会创建一个新层 copy。Docker将这些层重用于新的容器构建。与Docker分层是它自己的版本控制方法。</li>\n<li>回滚：同样，每个Docker映像都有层。如果您不想使用当前运行的图层，则可以回滚到以前的版本。这种敏捷性使软件开发人员可以更轻松地连续集成和部署他们的软件技术。</li>\n<li>快速部署：置备新硬件通常可能需要几天的时间。而且，安装和配置它的工作量和开销非常重。使用Docker，您可以通过将启动和运行映像所需的时间减少到几秒钟来避免所有这些情况。用完容器后，就可以轻松销毁它。</li>\n</ul>\n<p>*** 从根本上说，Docker和LXC都非常相似。它们都是用户空间和轻量级虚拟化平台，它们实现cgroup和名称空间来管理资源隔离。但是，两者之间存在许多明显的差异。</p>\n"},{"title":"如何快速安装k8s集群","date":"2021-03-12T05:13:13.000Z","_content":"\n有时候需要快速搭建一个k8s集群帮组我测试代码的功能，这样可以帮我省去很多时间，把更多的时间都投入到写代码中，我觉得这也是很有必要的。\n接下来我就讲解如何快速搭建k8s集群。\n\n首先准备若干个机器，这里我只是举例子 \n\n我现在准备了 三台机器\n```bash\n\n10.10.13.113 master\n\n10.10.13.114 node01\n\n10.10.13.115 node02\n\n```\n\n1. 在ansible控制端配置免密码登录\n\n```bash\n# 或者传统 RSA 算法\n$ ssh-keygen -t rsa -b 2048 -N '' -f ~/.ssh/id_rsa\n\n$ ssh-copy-id root@$IPs #$IPs为所有节点地址包括自身，按照提示输入yes 和root密码\n\n/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: \"/Users/clare/.ssh/id_rsa.pub\"\n/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed\n/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys\nroot@xxx.xxx.xxx.xxx's password:\n\nNumber of key(s) added:        1\n\nNow try logging into the machine, with:   \"ssh 'root@xxx.xxx.xxx.xxx'\"\nand check to make sure that only the key(s) you wanted were added.\n```\n\n```bash\n# 测试是否可以免密登陆\n\n$ ssh root@$IPs\n\n```\n\n3.1 安装ansible (也可以使用容器化运行kubeasz，已经预装好ansible)\n```bash\n\n# 注意pip 21.0以后不再支持python2和python3.5，需要如下安装\n# To install pip for Python 2.7 install it from https://bootstrap.pypa.io/2.7/ :\ncurl -O https://bootstrap.pypa.io/2.7/get-pip.py\npython get-pip.py\npython -m pip install --upgrade \"pip < 21.0\"\n\n# pip安装ansible(国内如果安装太慢可以直接用pip阿里云加速)\npip install ansible -i https://mirrors.aliyun.com/pypi/simple/\n```\n\n### 下载工具脚本`ezdown`\n\n```bash\n# 下载工具脚本ezdown，举例使用kubeasz版本3.0.0\n$ export release=3.0.0\n\n$ curl -C- -fLO --retry 3 https://github.com/easzlab/kubeasz/releases/download/${release}/ezdown\n\n$ chmod +x ./ezdown\n\n# 使用工具脚本下载\n$ chmod +x ezdown\n\n# 下载安装包\n# k 指定kubernetes的版本\n$ ./ezdown -D -k v1.18.3\n\n```\n\n4.2 创建集群配置实例\n\n```bash\n\nezctl new k8s-01\n2021-01-19 10:48:23 DEBUG generate custom cluster files in /etc/kubeasz/clusters/k8s-01\n2021-01-19 10:48:23 DEBUG set version of common plugins\n2021-01-19 10:48:23 DEBUG cluster k8s-01: files successfully created.\n2021-01-19 10:48:23 INFO next steps 1: to config '/etc/kubeasz/clusters/k8s-01/hosts'\n2021-01-19 10:48:23 INFO next steps 2: to config '/etc/kubeasz/clusters/k8s-01/config.yml'\n然后根据提示配置'/etc/kubeasz/clusters/k8s-01/hosts' 和 '/etc/kubeasz/clusters/k8s-01/config.yml': 根据前面节点规划修改hosts 文件和其他集群层面的主要配置选项；其他集群组件等配置项可以在config.yml 文件中修改。\n```\n\n4.3 开始安装 如果你对集群安装流程不熟悉，请阅读项目首页 安装步骤 讲解后分步安装，并对 每步都进行验证\n\n### 一键安装\n\n```bash\n$ ezctl setup k8s-01 all\n\n# 或者分步安装，具体使用 ezctl help setup 查看分步安装帮助信息\n# ezctl setup k8s-01 01\n# ezctl setup k8s-01 02\n# ezctl setup k8s-01 03\n# ezctl setup k8s-01 04\n```\n\n\n","source":"_posts/k8s/install-k8s.md","raw":"---\ntitle: 如何快速安装k8s集群\ndate: 2021-03-12 13:13:13\ntags:\n- kubernetes\n---\n\n有时候需要快速搭建一个k8s集群帮组我测试代码的功能，这样可以帮我省去很多时间，把更多的时间都投入到写代码中，我觉得这也是很有必要的。\n接下来我就讲解如何快速搭建k8s集群。\n\n首先准备若干个机器，这里我只是举例子 \n\n我现在准备了 三台机器\n```bash\n\n10.10.13.113 master\n\n10.10.13.114 node01\n\n10.10.13.115 node02\n\n```\n\n1. 在ansible控制端配置免密码登录\n\n```bash\n# 或者传统 RSA 算法\n$ ssh-keygen -t rsa -b 2048 -N '' -f ~/.ssh/id_rsa\n\n$ ssh-copy-id root@$IPs #$IPs为所有节点地址包括自身，按照提示输入yes 和root密码\n\n/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: \"/Users/clare/.ssh/id_rsa.pub\"\n/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed\n/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys\nroot@xxx.xxx.xxx.xxx's password:\n\nNumber of key(s) added:        1\n\nNow try logging into the machine, with:   \"ssh 'root@xxx.xxx.xxx.xxx'\"\nand check to make sure that only the key(s) you wanted were added.\n```\n\n```bash\n# 测试是否可以免密登陆\n\n$ ssh root@$IPs\n\n```\n\n3.1 安装ansible (也可以使用容器化运行kubeasz，已经预装好ansible)\n```bash\n\n# 注意pip 21.0以后不再支持python2和python3.5，需要如下安装\n# To install pip for Python 2.7 install it from https://bootstrap.pypa.io/2.7/ :\ncurl -O https://bootstrap.pypa.io/2.7/get-pip.py\npython get-pip.py\npython -m pip install --upgrade \"pip < 21.0\"\n\n# pip安装ansible(国内如果安装太慢可以直接用pip阿里云加速)\npip install ansible -i https://mirrors.aliyun.com/pypi/simple/\n```\n\n### 下载工具脚本`ezdown`\n\n```bash\n# 下载工具脚本ezdown，举例使用kubeasz版本3.0.0\n$ export release=3.0.0\n\n$ curl -C- -fLO --retry 3 https://github.com/easzlab/kubeasz/releases/download/${release}/ezdown\n\n$ chmod +x ./ezdown\n\n# 使用工具脚本下载\n$ chmod +x ezdown\n\n# 下载安装包\n# k 指定kubernetes的版本\n$ ./ezdown -D -k v1.18.3\n\n```\n\n4.2 创建集群配置实例\n\n```bash\n\nezctl new k8s-01\n2021-01-19 10:48:23 DEBUG generate custom cluster files in /etc/kubeasz/clusters/k8s-01\n2021-01-19 10:48:23 DEBUG set version of common plugins\n2021-01-19 10:48:23 DEBUG cluster k8s-01: files successfully created.\n2021-01-19 10:48:23 INFO next steps 1: to config '/etc/kubeasz/clusters/k8s-01/hosts'\n2021-01-19 10:48:23 INFO next steps 2: to config '/etc/kubeasz/clusters/k8s-01/config.yml'\n然后根据提示配置'/etc/kubeasz/clusters/k8s-01/hosts' 和 '/etc/kubeasz/clusters/k8s-01/config.yml': 根据前面节点规划修改hosts 文件和其他集群层面的主要配置选项；其他集群组件等配置项可以在config.yml 文件中修改。\n```\n\n4.3 开始安装 如果你对集群安装流程不熟悉，请阅读项目首页 安装步骤 讲解后分步安装，并对 每步都进行验证\n\n### 一键安装\n\n```bash\n$ ezctl setup k8s-01 all\n\n# 或者分步安装，具体使用 ezctl help setup 查看分步安装帮助信息\n# ezctl setup k8s-01 01\n# ezctl setup k8s-01 02\n# ezctl setup k8s-01 03\n# ezctl setup k8s-01 04\n```\n\n\n","slug":"k8s/install-k8s","published":1,"updated":"2021-03-17T03:06:15.934Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmdkjuvn0000uwjr5d1jc2k7","content":"<p>有时候需要快速搭建一个k8s集群帮组我测试代码的功能，这样可以帮我省去很多时间，把更多的时间都投入到写代码中，我觉得这也是很有必要的。<br>接下来我就讲解如何快速搭建k8s集群。</p>\n<p>首先准备若干个机器，这里我只是举例子 </p>\n<p>我现在准备了 三台机器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">10.10.13.113 master</span><br><span class=\"line\"></span><br><span class=\"line\">10.10.13.114 node01</span><br><span class=\"line\"></span><br><span class=\"line\">10.10.13.115 node02</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>在ansible控制端配置免密码登录</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 或者传统 RSA 算法</span></span><br><span class=\"line\">$ ssh-keygen -t rsa -b 2048 -N <span class=\"string\">&#x27;&#x27;</span> -f ~/.ssh/id_rsa</span><br><span class=\"line\"></span><br><span class=\"line\">$ ssh-copy-id root@<span class=\"variable\">$IPs</span> <span class=\"comment\">#$IPs为所有节点地址包括自身，按照提示输入yes 和root密码</span></span><br><span class=\"line\"></span><br><span class=\"line\">/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: <span class=\"string\">&quot;/Users/clare/.ssh/id_rsa.pub&quot;</span></span><br><span class=\"line\">/usr/bin/ssh-copy-id: INFO: attempting to <span class=\"built_in\">log</span> <span class=\"keyword\">in</span> with the new key(s), to filter out any that are already installed</span><br><span class=\"line\">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- <span class=\"keyword\">if</span> you are prompted now it is to install the new keys</span><br><span class=\"line\">root@xxx.xxx.xxx.xxx<span class=\"string\">&#x27;s password:</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Number of key(s) added:        1</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Now try logging into the machine, with:   &quot;ssh &#x27;</span>root@xxx.xxx.xxx.xxx<span class=\"string\">&#x27;&quot;</span></span><br><span class=\"line\"><span class=\"string\">and check to make sure that only the key(s) you wanted were added.</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 测试是否可以免密登陆</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ ssh root@<span class=\"variable\">$IPs</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>3.1 安装ansible (也可以使用容器化运行kubeasz，已经预装好ansible)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 注意pip 21.0以后不再支持python2和python3.5，需要如下安装</span></span><br><span class=\"line\"><span class=\"comment\"># To install pip for Python 2.7 install it from https://bootstrap.pypa.io/2.7/ :</span></span><br><span class=\"line\">curl -O https://bootstrap.pypa.io/2.7/get-pip.py</span><br><span class=\"line\">python get-pip.py</span><br><span class=\"line\">python -m pip install --upgrade <span class=\"string\">&quot;pip &lt; 21.0&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># pip安装ansible(国内如果安装太慢可以直接用pip阿里云加速)</span></span><br><span class=\"line\">pip install ansible -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"下载工具脚本ezdown\"><a href=\"#下载工具脚本ezdown\" class=\"headerlink\" title=\"下载工具脚本ezdown\"></a>下载工具脚本<code>ezdown</code></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载工具脚本ezdown，举例使用kubeasz版本3.0.0</span></span><br><span class=\"line\">$ <span class=\"built_in\">export</span> release=3.0.0</span><br><span class=\"line\"></span><br><span class=\"line\">$ curl -C- -fLO --retry 3 https://github.com/easzlab/kubeasz/releases/download/<span class=\"variable\">$&#123;release&#125;</span>/ezdown</span><br><span class=\"line\"></span><br><span class=\"line\">$ chmod +x ./ezdown</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用工具脚本下载</span></span><br><span class=\"line\">$ chmod +x ezdown</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载安装包</span></span><br><span class=\"line\"><span class=\"comment\"># k 指定kubernetes的版本</span></span><br><span class=\"line\">$ ./ezdown -D -k v1.18.3</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>4.2 创建集群配置实例</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">ezctl new k8s-01</span><br><span class=\"line\">2021-01-19 10:48:23 DEBUG generate custom cluster files <span class=\"keyword\">in</span> /etc/kubeasz/clusters/k8s-01</span><br><span class=\"line\">2021-01-19 10:48:23 DEBUG <span class=\"built_in\">set</span> version of common plugins</span><br><span class=\"line\">2021-01-19 10:48:23 DEBUG cluster k8s-01: files successfully created.</span><br><span class=\"line\">2021-01-19 10:48:23 INFO next steps 1: to config <span class=\"string\">&#x27;/etc/kubeasz/clusters/k8s-01/hosts&#x27;</span></span><br><span class=\"line\">2021-01-19 10:48:23 INFO next steps 2: to config <span class=\"string\">&#x27;/etc/kubeasz/clusters/k8s-01/config.yml&#x27;</span></span><br><span class=\"line\">然后根据提示配置<span class=\"string\">&#x27;/etc/kubeasz/clusters/k8s-01/hosts&#x27;</span> 和 <span class=\"string\">&#x27;/etc/kubeasz/clusters/k8s-01/config.yml&#x27;</span>: 根据前面节点规划修改hosts 文件和其他集群层面的主要配置选项；其他集群组件等配置项可以在config.yml 文件中修改。</span><br></pre></td></tr></table></figure>\n\n<p>4.3 开始安装 如果你对集群安装流程不熟悉，请阅读项目首页 安装步骤 讲解后分步安装，并对 每步都进行验证</p>\n<h3 id=\"一键安装\"><a href=\"#一键安装\" class=\"headerlink\" title=\"一键安装\"></a>一键安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ezctl setup k8s-01 all</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 或者分步安装，具体使用 ezctl help setup 查看分步安装帮助信息</span></span><br><span class=\"line\"><span class=\"comment\"># ezctl setup k8s-01 01</span></span><br><span class=\"line\"><span class=\"comment\"># ezctl setup k8s-01 02</span></span><br><span class=\"line\"><span class=\"comment\"># ezctl setup k8s-01 03</span></span><br><span class=\"line\"><span class=\"comment\"># ezctl setup k8s-01 04</span></span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"excerpt":"","more":"<p>有时候需要快速搭建一个k8s集群帮组我测试代码的功能，这样可以帮我省去很多时间，把更多的时间都投入到写代码中，我觉得这也是很有必要的。<br>接下来我就讲解如何快速搭建k8s集群。</p>\n<p>首先准备若干个机器，这里我只是举例子 </p>\n<p>我现在准备了 三台机器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">10.10.13.113 master</span><br><span class=\"line\"></span><br><span class=\"line\">10.10.13.114 node01</span><br><span class=\"line\"></span><br><span class=\"line\">10.10.13.115 node02</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>在ansible控制端配置免密码登录</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 或者传统 RSA 算法</span></span><br><span class=\"line\">$ ssh-keygen -t rsa -b 2048 -N <span class=\"string\">&#x27;&#x27;</span> -f ~/.ssh/id_rsa</span><br><span class=\"line\"></span><br><span class=\"line\">$ ssh-copy-id root@<span class=\"variable\">$IPs</span> <span class=\"comment\">#$IPs为所有节点地址包括自身，按照提示输入yes 和root密码</span></span><br><span class=\"line\"></span><br><span class=\"line\">/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: <span class=\"string\">&quot;/Users/clare/.ssh/id_rsa.pub&quot;</span></span><br><span class=\"line\">/usr/bin/ssh-copy-id: INFO: attempting to <span class=\"built_in\">log</span> <span class=\"keyword\">in</span> with the new key(s), to filter out any that are already installed</span><br><span class=\"line\">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- <span class=\"keyword\">if</span> you are prompted now it is to install the new keys</span><br><span class=\"line\">root@xxx.xxx.xxx.xxx<span class=\"string\">&#x27;s password:</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Number of key(s) added:        1</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Now try logging into the machine, with:   &quot;ssh &#x27;</span>root@xxx.xxx.xxx.xxx<span class=\"string\">&#x27;&quot;</span></span><br><span class=\"line\"><span class=\"string\">and check to make sure that only the key(s) you wanted were added.</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 测试是否可以免密登陆</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ ssh root@<span class=\"variable\">$IPs</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>3.1 安装ansible (也可以使用容器化运行kubeasz，已经预装好ansible)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 注意pip 21.0以后不再支持python2和python3.5，需要如下安装</span></span><br><span class=\"line\"><span class=\"comment\"># To install pip for Python 2.7 install it from https://bootstrap.pypa.io/2.7/ :</span></span><br><span class=\"line\">curl -O https://bootstrap.pypa.io/2.7/get-pip.py</span><br><span class=\"line\">python get-pip.py</span><br><span class=\"line\">python -m pip install --upgrade <span class=\"string\">&quot;pip &lt; 21.0&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># pip安装ansible(国内如果安装太慢可以直接用pip阿里云加速)</span></span><br><span class=\"line\">pip install ansible -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"下载工具脚本ezdown\"><a href=\"#下载工具脚本ezdown\" class=\"headerlink\" title=\"下载工具脚本ezdown\"></a>下载工具脚本<code>ezdown</code></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载工具脚本ezdown，举例使用kubeasz版本3.0.0</span></span><br><span class=\"line\">$ <span class=\"built_in\">export</span> release=3.0.0</span><br><span class=\"line\"></span><br><span class=\"line\">$ curl -C- -fLO --retry 3 https://github.com/easzlab/kubeasz/releases/download/<span class=\"variable\">$&#123;release&#125;</span>/ezdown</span><br><span class=\"line\"></span><br><span class=\"line\">$ chmod +x ./ezdown</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用工具脚本下载</span></span><br><span class=\"line\">$ chmod +x ezdown</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载安装包</span></span><br><span class=\"line\"><span class=\"comment\"># k 指定kubernetes的版本</span></span><br><span class=\"line\">$ ./ezdown -D -k v1.18.3</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>4.2 创建集群配置实例</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">ezctl new k8s-01</span><br><span class=\"line\">2021-01-19 10:48:23 DEBUG generate custom cluster files <span class=\"keyword\">in</span> /etc/kubeasz/clusters/k8s-01</span><br><span class=\"line\">2021-01-19 10:48:23 DEBUG <span class=\"built_in\">set</span> version of common plugins</span><br><span class=\"line\">2021-01-19 10:48:23 DEBUG cluster k8s-01: files successfully created.</span><br><span class=\"line\">2021-01-19 10:48:23 INFO next steps 1: to config <span class=\"string\">&#x27;/etc/kubeasz/clusters/k8s-01/hosts&#x27;</span></span><br><span class=\"line\">2021-01-19 10:48:23 INFO next steps 2: to config <span class=\"string\">&#x27;/etc/kubeasz/clusters/k8s-01/config.yml&#x27;</span></span><br><span class=\"line\">然后根据提示配置<span class=\"string\">&#x27;/etc/kubeasz/clusters/k8s-01/hosts&#x27;</span> 和 <span class=\"string\">&#x27;/etc/kubeasz/clusters/k8s-01/config.yml&#x27;</span>: 根据前面节点规划修改hosts 文件和其他集群层面的主要配置选项；其他集群组件等配置项可以在config.yml 文件中修改。</span><br></pre></td></tr></table></figure>\n\n<p>4.3 开始安装 如果你对集群安装流程不熟悉，请阅读项目首页 安装步骤 讲解后分步安装，并对 每步都进行验证</p>\n<h3 id=\"一键安装\"><a href=\"#一键安装\" class=\"headerlink\" title=\"一键安装\"></a>一键安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ezctl setup k8s-01 all</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 或者分步安装，具体使用 ezctl help setup 查看分步安装帮助信息</span></span><br><span class=\"line\"><span class=\"comment\"># ezctl setup k8s-01 01</span></span><br><span class=\"line\"><span class=\"comment\"># ezctl setup k8s-01 02</span></span><br><span class=\"line\"><span class=\"comment\"># ezctl setup k8s-01 03</span></span><br><span class=\"line\"><span class=\"comment\"># ezctl setup k8s-01 04</span></span><br></pre></td></tr></table></figure>\n\n\n"},{"title":"route","date":"2021-03-13T16:25:54.000Z","_content":"\n","source":"_posts/linux/route.md","raw":"---\ntitle: route\ndate: 2021-03-14 00:25:54\ntags:\n- linux\n---\n\n","slug":"linux/route","published":1,"updated":"2021-03-18T03:42:58.321Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmfo6v8z000036jrf1vvgff5","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"如何在本地调试istio","date":"2021-03-22T05:40:42.000Z","_content":"\n本文档主要是帮助我们如何在本地使用调试istio\n\n因为我们使用的istio都是在1.8.4上面做的,所以我在下面的讲解的版本也是在istio release-1.8.4版本上面进行\n\nistio 核心模块有两个\n\n* pilot-discovery: 这个模块就是我们的istiod istio/pilot/pilot-discovery 目录下\n* pilot-agent: 这个模块 就是proxy istio/pilot/pilot-discovery 目录下\n\n![img.png](img.png)\n\n如果我们使用kind 则需要 --config trustworthy-jwt.yaml\n\n```yaml\napiVersion: kind.x-k8s.io/v1alpha4\nkind: Cluster\nkubeadmConfigPatches:\n  - |\n    apiVersion: kubeadm.k8s.io/v1beta2\n    kind: ClusterConfiguration\n    metadata:\n      name: config\n    etcd:\n      local:\n        # Run etcd in a tmpfs (in RAM) for performance improvements\n        dataDir: /tmp/kind-cluster-etcd\n    apiServer:\n      extraArgs:\n        \"service-account-issuer\": \"kubernetes.default.svc\"\n        \"service-account-signing-key-file\": \"/etc/kubernetes/pki/sa.key\"\ncontainerdConfigPatches:\n  - |-\n    [plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors.\"localhost:5000\"]\n      endpoint = [\"http://kind-registry:5000\"]\n```\n\n### 运行kind\n\n```bash\n$ kind create cluster --image  docker.io/kindest/node:v1.17.5 --config trustworthy-jwt.yaml  --name kind-2\n```\n\n### 本地代理`pilot-discovery`\n\n```bash\n# 安装istio\n$ istioctl install\n```\n\n等待istio 安装完成以后我们将 istiod的流量转到本地，主要目的是为了更改endpoint \n\n使用外部 istiod\n\n```bash\n# 设置外部 IP\n$ export ip=192.168.110.206\n$ kubectl -n istio-system delete svc istiod\n$ kubectl -n istio-system delete endpoints istiod\n\n$ cat <<EOF | kubectl apply -f -\napiVersion: v1\nkind: Service\nmetadata:\n  name: istiod\n  namespace: istio-system\nspec:\n  ports:\n  - name: grpc-xds\n    port: 15010\n  - name: https-dns\n    port: 15012\n  - name: https-webhook\n    port: 443\n    targetPort: 15017\n  - name: http-monitoring\n    port: 15014\n---\napiVersion: v1\nkind: Endpoints\nmetadata:\n  name: istiod\n  namespace: istio-system\nsubsets:\n- addresses:\n  - ip: ${ip}\n  ports:\n  - name: https-dns\n    port: 15012\n    protocol: TCP\n  - name: grpc-xds\n    port: 15010\n    protocol: TCP\n  - name: https-webhook\n    port: 15017\n    protocol: TCP\n  - name: http-monitoring\n    port: 15014\n    protocol: TCP\n\nEOF\n```\n\n还原istio 的svc地址 使svc指向 集群内部 istiod.istio-system pod\n\n```bash\n$ kubectl -n istio-system delete svc istiod\n$ kubectl -n istio-system delete endpoints istiod\n\ncat <<EOF | kubectl apply -f -\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: |\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"istiod\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"install.operator.istio.io/owning-resource-namespace\":\"istio-system\",\"istio\":\"pilot\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"Pilot\",\"operator.istio.io/managed\":\"Reconcile\",\"operator.istio.io/version\":\"1.8.4\",\"release\":\"istio\"},\"name\":\"istiod\",\"namespace\":\"istio-system\"},\"spec\":{\"ports\":[{\"name\":\"grpc-xds\",\"port\":15010,\"protocol\":\"TCP\"},{\"name\":\"https-dns\",\"port\":15012,\"protocol\":\"TCP\"},{\"name\":\"https-webhook\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":15017},{\"name\":\"http-monitoring\",\"port\":15014,\"protocol\":\"TCP\"}],\"selector\":{\"app\":\"istiod\",\"istio\":\"pilot\"}}}\n  creationTimestamp: \"2021-03-22T07:08:32Z\"\n  labels:\n    app: istiod\n    install.operator.istio.io/owning-resource: unknown\n    install.operator.istio.io/owning-resource-namespace: istio-system\n    istio: pilot\n    istio.io/rev: default\n    operator.istio.io/component: Pilot\n    operator.istio.io/managed: Reconcile\n    operator.istio.io/version: 1.8.4\n    release: istio\n  name: istiod\n  namespace: istio-system\n  resourceVersion: \"826\"\n  selfLink: /api/v1/namespaces/istio-system/services/istiod\n  uid: 44ee44a6-9003-4f8d-9196-49e47b6667c1\nspec:\n  clusterIP: 10.96.3.250\n  ports:\n  - name: grpc-xds\n    port: 15010\n    protocol: TCP\n    targetPort: 15010\n  - name: https-dns\n    port: 15012\n    protocol: TCP\n    targetPort: 15012\n  - name: https-webhook\n    port: 443\n    protocol: TCP\n    targetPort: 15017\n  - name: http-monitoring\n    port: 15014\n    protocol: TCP\n    targetPort: 15014\n  selector:\n    app: istiod\n    istio: pilot\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\nEOF  \n```\n\n","source":"_posts/k8s/istio/debug-istio.md","raw":"---\ntitle: 如何在本地调试istio\ndate: 2021-03-22 13:40:42\ntags:\n---\n\n本文档主要是帮助我们如何在本地使用调试istio\n\n因为我们使用的istio都是在1.8.4上面做的,所以我在下面的讲解的版本也是在istio release-1.8.4版本上面进行\n\nistio 核心模块有两个\n\n* pilot-discovery: 这个模块就是我们的istiod istio/pilot/pilot-discovery 目录下\n* pilot-agent: 这个模块 就是proxy istio/pilot/pilot-discovery 目录下\n\n![img.png](img.png)\n\n如果我们使用kind 则需要 --config trustworthy-jwt.yaml\n\n```yaml\napiVersion: kind.x-k8s.io/v1alpha4\nkind: Cluster\nkubeadmConfigPatches:\n  - |\n    apiVersion: kubeadm.k8s.io/v1beta2\n    kind: ClusterConfiguration\n    metadata:\n      name: config\n    etcd:\n      local:\n        # Run etcd in a tmpfs (in RAM) for performance improvements\n        dataDir: /tmp/kind-cluster-etcd\n    apiServer:\n      extraArgs:\n        \"service-account-issuer\": \"kubernetes.default.svc\"\n        \"service-account-signing-key-file\": \"/etc/kubernetes/pki/sa.key\"\ncontainerdConfigPatches:\n  - |-\n    [plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors.\"localhost:5000\"]\n      endpoint = [\"http://kind-registry:5000\"]\n```\n\n### 运行kind\n\n```bash\n$ kind create cluster --image  docker.io/kindest/node:v1.17.5 --config trustworthy-jwt.yaml  --name kind-2\n```\n\n### 本地代理`pilot-discovery`\n\n```bash\n# 安装istio\n$ istioctl install\n```\n\n等待istio 安装完成以后我们将 istiod的流量转到本地，主要目的是为了更改endpoint \n\n使用外部 istiod\n\n```bash\n# 设置外部 IP\n$ export ip=192.168.110.206\n$ kubectl -n istio-system delete svc istiod\n$ kubectl -n istio-system delete endpoints istiod\n\n$ cat <<EOF | kubectl apply -f -\napiVersion: v1\nkind: Service\nmetadata:\n  name: istiod\n  namespace: istio-system\nspec:\n  ports:\n  - name: grpc-xds\n    port: 15010\n  - name: https-dns\n    port: 15012\n  - name: https-webhook\n    port: 443\n    targetPort: 15017\n  - name: http-monitoring\n    port: 15014\n---\napiVersion: v1\nkind: Endpoints\nmetadata:\n  name: istiod\n  namespace: istio-system\nsubsets:\n- addresses:\n  - ip: ${ip}\n  ports:\n  - name: https-dns\n    port: 15012\n    protocol: TCP\n  - name: grpc-xds\n    port: 15010\n    protocol: TCP\n  - name: https-webhook\n    port: 15017\n    protocol: TCP\n  - name: http-monitoring\n    port: 15014\n    protocol: TCP\n\nEOF\n```\n\n还原istio 的svc地址 使svc指向 集群内部 istiod.istio-system pod\n\n```bash\n$ kubectl -n istio-system delete svc istiod\n$ kubectl -n istio-system delete endpoints istiod\n\ncat <<EOF | kubectl apply -f -\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: |\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"istiod\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"install.operator.istio.io/owning-resource-namespace\":\"istio-system\",\"istio\":\"pilot\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"Pilot\",\"operator.istio.io/managed\":\"Reconcile\",\"operator.istio.io/version\":\"1.8.4\",\"release\":\"istio\"},\"name\":\"istiod\",\"namespace\":\"istio-system\"},\"spec\":{\"ports\":[{\"name\":\"grpc-xds\",\"port\":15010,\"protocol\":\"TCP\"},{\"name\":\"https-dns\",\"port\":15012,\"protocol\":\"TCP\"},{\"name\":\"https-webhook\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":15017},{\"name\":\"http-monitoring\",\"port\":15014,\"protocol\":\"TCP\"}],\"selector\":{\"app\":\"istiod\",\"istio\":\"pilot\"}}}\n  creationTimestamp: \"2021-03-22T07:08:32Z\"\n  labels:\n    app: istiod\n    install.operator.istio.io/owning-resource: unknown\n    install.operator.istio.io/owning-resource-namespace: istio-system\n    istio: pilot\n    istio.io/rev: default\n    operator.istio.io/component: Pilot\n    operator.istio.io/managed: Reconcile\n    operator.istio.io/version: 1.8.4\n    release: istio\n  name: istiod\n  namespace: istio-system\n  resourceVersion: \"826\"\n  selfLink: /api/v1/namespaces/istio-system/services/istiod\n  uid: 44ee44a6-9003-4f8d-9196-49e47b6667c1\nspec:\n  clusterIP: 10.96.3.250\n  ports:\n  - name: grpc-xds\n    port: 15010\n    protocol: TCP\n    targetPort: 15010\n  - name: https-dns\n    port: 15012\n    protocol: TCP\n    targetPort: 15012\n  - name: https-webhook\n    port: 443\n    protocol: TCP\n    targetPort: 15017\n  - name: http-monitoring\n    port: 15014\n    protocol: TCP\n    targetPort: 15014\n  selector:\n    app: istiod\n    istio: pilot\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\nEOF  \n```\n\n","slug":"k8s/istio/debug-istio","published":1,"updated":"2021-03-26T05:30:22.062Z","_id":"ckmkf3dw80000kjjr1ne639m8","comments":1,"layout":"post","photos":[],"link":"","content":"<p>本文档主要是帮助我们如何在本地使用调试istio</p>\n<p>因为我们使用的istio都是在1.8.4上面做的,所以我在下面的讲解的版本也是在istio release-1.8.4版本上面进行</p>\n<p>istio 核心模块有两个</p>\n<ul>\n<li>pilot-discovery: 这个模块就是我们的istiod istio/pilot/pilot-discovery 目录下</li>\n<li>pilot-agent: 这个模块 就是proxy istio/pilot/pilot-discovery 目录下</li>\n</ul>\n<p><img src=\"/2021/03/22/k8s/istio/debug-istio/img.png\" alt=\"img.png\"></p>\n<p>如果我们使用kind 则需要 –config trustworthy-jwt.yaml</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">kind.x-k8s.io/v1alpha4</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Cluster</span></span><br><span class=\"line\"><span class=\"attr\">kubeadmConfigPatches:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">|</span></span><br><span class=\"line\">    <span class=\"attr\">apiVersion:</span> <span class=\"string\">kubeadm.k8s.io/v1beta2</span></span><br><span class=\"line\">    <span class=\"attr\">kind:</span> <span class=\"string\">ClusterConfiguration</span></span><br><span class=\"line\">    <span class=\"attr\">metadata:</span></span><br><span class=\"line\">      <span class=\"attr\">name:</span> <span class=\"string\">config</span></span><br><span class=\"line\">    <span class=\"attr\">etcd:</span></span><br><span class=\"line\">      <span class=\"attr\">local:</span></span><br><span class=\"line\">        <span class=\"comment\"># Run etcd in a tmpfs (in RAM) for performance improvements</span></span><br><span class=\"line\">        <span class=\"attr\">dataDir:</span> <span class=\"string\">/tmp/kind-cluster-etcd</span></span><br><span class=\"line\">    <span class=\"attr\">apiServer:</span></span><br><span class=\"line\">      <span class=\"attr\">extraArgs:</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;service-account-issuer&quot;:</span> <span class=\"string\">&quot;kubernetes.default.svc&quot;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;service-account-signing-key-file&quot;:</span> <span class=\"string\">&quot;/etc/kubernetes/pki/sa.key&quot;</span></span><br><span class=\"line\"><span class=\"attr\">containerdConfigPatches:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">|-</span></span><br><span class=\"line\">    [<span class=\"string\">plugins.&quot;io.containerd.grpc.v1.cri&quot;.registry.mirrors.&quot;localhost:5000&quot;</span>]</span><br><span class=\"line\">      <span class=\"string\">endpoint</span> <span class=\"string\">=</span> [<span class=\"string\">&quot;http://kind-registry:5000&quot;</span>]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"运行kind\"><a href=\"#运行kind\" class=\"headerlink\" title=\"运行kind\"></a>运行kind</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kind create cluster --image  docker.io/kindest/node:v1.17.5 --config trustworthy-jwt.yaml  --name kind-2</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"本地代理pilot-discovery\"><a href=\"#本地代理pilot-discovery\" class=\"headerlink\" title=\"本地代理pilot-discovery\"></a>本地代理<code>pilot-discovery</code></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装istio</span></span><br><span class=\"line\">$ istioctl install</span><br></pre></td></tr></table></figure>\n\n<p>等待istio 安装完成以后我们将 istiod的流量转到本地，主要目的是为了更改endpoint </p>\n<p>使用外部 istiod</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 设置外部 IP</span></span><br><span class=\"line\">$ <span class=\"built_in\">export</span> ip=192.168.110.206</span><br><span class=\"line\">$ kubectl -n istio-system delete svc istiod</span><br><span class=\"line\">$ kubectl -n istio-system delete endpoints istiod</span><br><span class=\"line\"></span><br><span class=\"line\">$ cat &lt;&lt;<span class=\"string\">EOF | kubectl apply -f -</span></span><br><span class=\"line\"><span class=\"string\">apiVersion: v1</span></span><br><span class=\"line\"><span class=\"string\">kind: Service</span></span><br><span class=\"line\"><span class=\"string\">metadata:</span></span><br><span class=\"line\"><span class=\"string\">  name: istiod</span></span><br><span class=\"line\"><span class=\"string\">  namespace: istio-system</span></span><br><span class=\"line\"><span class=\"string\">spec:</span></span><br><span class=\"line\"><span class=\"string\">  ports:</span></span><br><span class=\"line\"><span class=\"string\">  - name: grpc-xds</span></span><br><span class=\"line\"><span class=\"string\">    port: 15010</span></span><br><span class=\"line\"><span class=\"string\">  - name: https-dns</span></span><br><span class=\"line\"><span class=\"string\">    port: 15012</span></span><br><span class=\"line\"><span class=\"string\">  - name: https-webhook</span></span><br><span class=\"line\"><span class=\"string\">    port: 443</span></span><br><span class=\"line\"><span class=\"string\">    targetPort: 15017</span></span><br><span class=\"line\"><span class=\"string\">  - name: http-monitoring</span></span><br><span class=\"line\"><span class=\"string\">    port: 15014</span></span><br><span class=\"line\"><span class=\"string\">---</span></span><br><span class=\"line\"><span class=\"string\">apiVersion: v1</span></span><br><span class=\"line\"><span class=\"string\">kind: Endpoints</span></span><br><span class=\"line\"><span class=\"string\">metadata:</span></span><br><span class=\"line\"><span class=\"string\">  name: istiod</span></span><br><span class=\"line\"><span class=\"string\">  namespace: istio-system</span></span><br><span class=\"line\"><span class=\"string\">subsets:</span></span><br><span class=\"line\"><span class=\"string\">- addresses:</span></span><br><span class=\"line\"><span class=\"string\">  - ip: $&#123;ip&#125;</span></span><br><span class=\"line\"><span class=\"string\">  ports:</span></span><br><span class=\"line\"><span class=\"string\">  - name: https-dns</span></span><br><span class=\"line\"><span class=\"string\">    port: 15012</span></span><br><span class=\"line\"><span class=\"string\">    protocol: TCP</span></span><br><span class=\"line\"><span class=\"string\">  - name: grpc-xds</span></span><br><span class=\"line\"><span class=\"string\">    port: 15010</span></span><br><span class=\"line\"><span class=\"string\">    protocol: TCP</span></span><br><span class=\"line\"><span class=\"string\">  - name: https-webhook</span></span><br><span class=\"line\"><span class=\"string\">    port: 15017</span></span><br><span class=\"line\"><span class=\"string\">    protocol: TCP</span></span><br><span class=\"line\"><span class=\"string\">  - name: http-monitoring</span></span><br><span class=\"line\"><span class=\"string\">    port: 15014</span></span><br><span class=\"line\"><span class=\"string\">    protocol: TCP</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<p>还原istio 的svc地址 使svc指向 集群内部 istiod.istio-system pod</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl -n istio-system delete svc istiod</span><br><span class=\"line\">$ kubectl -n istio-system delete endpoints istiod</span><br><span class=\"line\"></span><br><span class=\"line\">cat &lt;&lt;<span class=\"string\">EOF | kubectl apply -f -</span></span><br><span class=\"line\"><span class=\"string\">apiVersion: v1</span></span><br><span class=\"line\"><span class=\"string\">kind: Service</span></span><br><span class=\"line\"><span class=\"string\">metadata:</span></span><br><span class=\"line\"><span class=\"string\">  annotations:</span></span><br><span class=\"line\"><span class=\"string\">    kubectl.kubernetes.io/last-applied-configuration: |</span></span><br><span class=\"line\"><span class=\"string\">      &#123;&quot;apiVersion&quot;:&quot;v1&quot;,&quot;kind&quot;:&quot;Service&quot;,&quot;metadata&quot;:&#123;&quot;annotations&quot;:&#123;&#125;,&quot;labels&quot;:&#123;&quot;app&quot;:&quot;istiod&quot;,&quot;install.operator.istio.io/owning-resource&quot;:&quot;unknown&quot;,&quot;install.operator.istio.io/owning-resource-namespace&quot;:&quot;istio-system&quot;,&quot;istio&quot;:&quot;pilot&quot;,&quot;istio.io/rev&quot;:&quot;default&quot;,&quot;operator.istio.io/component&quot;:&quot;Pilot&quot;,&quot;operator.istio.io/managed&quot;:&quot;Reconcile&quot;,&quot;operator.istio.io/version&quot;:&quot;1.8.4&quot;,&quot;release&quot;:&quot;istio&quot;&#125;,&quot;name&quot;:&quot;istiod&quot;,&quot;namespace&quot;:&quot;istio-system&quot;&#125;,&quot;spec&quot;:&#123;&quot;ports&quot;:[&#123;&quot;name&quot;:&quot;grpc-xds&quot;,&quot;port&quot;:15010,&quot;protocol&quot;:&quot;TCP&quot;&#125;,&#123;&quot;name&quot;:&quot;https-dns&quot;,&quot;port&quot;:15012,&quot;protocol&quot;:&quot;TCP&quot;&#125;,&#123;&quot;name&quot;:&quot;https-webhook&quot;,&quot;port&quot;:443,&quot;protocol&quot;:&quot;TCP&quot;,&quot;targetPort&quot;:15017&#125;,&#123;&quot;name&quot;:&quot;http-monitoring&quot;,&quot;port&quot;:15014,&quot;protocol&quot;:&quot;TCP&quot;&#125;],&quot;selector&quot;:&#123;&quot;app&quot;:&quot;istiod&quot;,&quot;istio&quot;:&quot;pilot&quot;&#125;&#125;&#125;</span></span><br><span class=\"line\"><span class=\"string\">  creationTimestamp: &quot;2021-03-22T07:08:32Z&quot;</span></span><br><span class=\"line\"><span class=\"string\">  labels:</span></span><br><span class=\"line\"><span class=\"string\">    app: istiod</span></span><br><span class=\"line\"><span class=\"string\">    install.operator.istio.io/owning-resource: unknown</span></span><br><span class=\"line\"><span class=\"string\">    install.operator.istio.io/owning-resource-namespace: istio-system</span></span><br><span class=\"line\"><span class=\"string\">    istio: pilot</span></span><br><span class=\"line\"><span class=\"string\">    istio.io/rev: default</span></span><br><span class=\"line\"><span class=\"string\">    operator.istio.io/component: Pilot</span></span><br><span class=\"line\"><span class=\"string\">    operator.istio.io/managed: Reconcile</span></span><br><span class=\"line\"><span class=\"string\">    operator.istio.io/version: 1.8.4</span></span><br><span class=\"line\"><span class=\"string\">    release: istio</span></span><br><span class=\"line\"><span class=\"string\">  name: istiod</span></span><br><span class=\"line\"><span class=\"string\">  namespace: istio-system</span></span><br><span class=\"line\"><span class=\"string\">  resourceVersion: &quot;826&quot;</span></span><br><span class=\"line\"><span class=\"string\">  selfLink: /api/v1/namespaces/istio-system/services/istiod</span></span><br><span class=\"line\"><span class=\"string\">  uid: 44ee44a6-9003-4f8d-9196-49e47b6667c1</span></span><br><span class=\"line\"><span class=\"string\">spec:</span></span><br><span class=\"line\"><span class=\"string\">  clusterIP: 10.96.3.250</span></span><br><span class=\"line\"><span class=\"string\">  ports:</span></span><br><span class=\"line\"><span class=\"string\">  - name: grpc-xds</span></span><br><span class=\"line\"><span class=\"string\">    port: 15010</span></span><br><span class=\"line\"><span class=\"string\">    protocol: TCP</span></span><br><span class=\"line\"><span class=\"string\">    targetPort: 15010</span></span><br><span class=\"line\"><span class=\"string\">  - name: https-dns</span></span><br><span class=\"line\"><span class=\"string\">    port: 15012</span></span><br><span class=\"line\"><span class=\"string\">    protocol: TCP</span></span><br><span class=\"line\"><span class=\"string\">    targetPort: 15012</span></span><br><span class=\"line\"><span class=\"string\">  - name: https-webhook</span></span><br><span class=\"line\"><span class=\"string\">    port: 443</span></span><br><span class=\"line\"><span class=\"string\">    protocol: TCP</span></span><br><span class=\"line\"><span class=\"string\">    targetPort: 15017</span></span><br><span class=\"line\"><span class=\"string\">  - name: http-monitoring</span></span><br><span class=\"line\"><span class=\"string\">    port: 15014</span></span><br><span class=\"line\"><span class=\"string\">    protocol: TCP</span></span><br><span class=\"line\"><span class=\"string\">    targetPort: 15014</span></span><br><span class=\"line\"><span class=\"string\">  selector:</span></span><br><span class=\"line\"><span class=\"string\">    app: istiod</span></span><br><span class=\"line\"><span class=\"string\">    istio: pilot</span></span><br><span class=\"line\"><span class=\"string\">  sessionAffinity: None</span></span><br><span class=\"line\"><span class=\"string\">  type: ClusterIP</span></span><br><span class=\"line\"><span class=\"string\">status:</span></span><br><span class=\"line\"><span class=\"string\">  loadBalancer: &#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\">EOF</span>  </span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>本文档主要是帮助我们如何在本地使用调试istio</p>\n<p>因为我们使用的istio都是在1.8.4上面做的,所以我在下面的讲解的版本也是在istio release-1.8.4版本上面进行</p>\n<p>istio 核心模块有两个</p>\n<ul>\n<li>pilot-discovery: 这个模块就是我们的istiod istio/pilot/pilot-discovery 目录下</li>\n<li>pilot-agent: 这个模块 就是proxy istio/pilot/pilot-discovery 目录下</li>\n</ul>\n<p><img src=\"/2021/03/22/k8s/istio/debug-istio/img.png\" alt=\"img.png\"></p>\n<p>如果我们使用kind 则需要 –config trustworthy-jwt.yaml</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">kind.x-k8s.io/v1alpha4</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Cluster</span></span><br><span class=\"line\"><span class=\"attr\">kubeadmConfigPatches:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">|</span></span><br><span class=\"line\">    <span class=\"attr\">apiVersion:</span> <span class=\"string\">kubeadm.k8s.io/v1beta2</span></span><br><span class=\"line\">    <span class=\"attr\">kind:</span> <span class=\"string\">ClusterConfiguration</span></span><br><span class=\"line\">    <span class=\"attr\">metadata:</span></span><br><span class=\"line\">      <span class=\"attr\">name:</span> <span class=\"string\">config</span></span><br><span class=\"line\">    <span class=\"attr\">etcd:</span></span><br><span class=\"line\">      <span class=\"attr\">local:</span></span><br><span class=\"line\">        <span class=\"comment\"># Run etcd in a tmpfs (in RAM) for performance improvements</span></span><br><span class=\"line\">        <span class=\"attr\">dataDir:</span> <span class=\"string\">/tmp/kind-cluster-etcd</span></span><br><span class=\"line\">    <span class=\"attr\">apiServer:</span></span><br><span class=\"line\">      <span class=\"attr\">extraArgs:</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;service-account-issuer&quot;:</span> <span class=\"string\">&quot;kubernetes.default.svc&quot;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;service-account-signing-key-file&quot;:</span> <span class=\"string\">&quot;/etc/kubernetes/pki/sa.key&quot;</span></span><br><span class=\"line\"><span class=\"attr\">containerdConfigPatches:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">|-</span></span><br><span class=\"line\">    [<span class=\"string\">plugins.&quot;io.containerd.grpc.v1.cri&quot;.registry.mirrors.&quot;localhost:5000&quot;</span>]</span><br><span class=\"line\">      <span class=\"string\">endpoint</span> <span class=\"string\">=</span> [<span class=\"string\">&quot;http://kind-registry:5000&quot;</span>]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"运行kind\"><a href=\"#运行kind\" class=\"headerlink\" title=\"运行kind\"></a>运行kind</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kind create cluster --image  docker.io/kindest/node:v1.17.5 --config trustworthy-jwt.yaml  --name kind-2</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"本地代理pilot-discovery\"><a href=\"#本地代理pilot-discovery\" class=\"headerlink\" title=\"本地代理pilot-discovery\"></a>本地代理<code>pilot-discovery</code></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装istio</span></span><br><span class=\"line\">$ istioctl install</span><br></pre></td></tr></table></figure>\n\n<p>等待istio 安装完成以后我们将 istiod的流量转到本地，主要目的是为了更改endpoint </p>\n<p>使用外部 istiod</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 设置外部 IP</span></span><br><span class=\"line\">$ <span class=\"built_in\">export</span> ip=192.168.110.206</span><br><span class=\"line\">$ kubectl -n istio-system delete svc istiod</span><br><span class=\"line\">$ kubectl -n istio-system delete endpoints istiod</span><br><span class=\"line\"></span><br><span class=\"line\">$ cat &lt;&lt;<span class=\"string\">EOF | kubectl apply -f -</span></span><br><span class=\"line\"><span class=\"string\">apiVersion: v1</span></span><br><span class=\"line\"><span class=\"string\">kind: Service</span></span><br><span class=\"line\"><span class=\"string\">metadata:</span></span><br><span class=\"line\"><span class=\"string\">  name: istiod</span></span><br><span class=\"line\"><span class=\"string\">  namespace: istio-system</span></span><br><span class=\"line\"><span class=\"string\">spec:</span></span><br><span class=\"line\"><span class=\"string\">  ports:</span></span><br><span class=\"line\"><span class=\"string\">  - name: grpc-xds</span></span><br><span class=\"line\"><span class=\"string\">    port: 15010</span></span><br><span class=\"line\"><span class=\"string\">  - name: https-dns</span></span><br><span class=\"line\"><span class=\"string\">    port: 15012</span></span><br><span class=\"line\"><span class=\"string\">  - name: https-webhook</span></span><br><span class=\"line\"><span class=\"string\">    port: 443</span></span><br><span class=\"line\"><span class=\"string\">    targetPort: 15017</span></span><br><span class=\"line\"><span class=\"string\">  - name: http-monitoring</span></span><br><span class=\"line\"><span class=\"string\">    port: 15014</span></span><br><span class=\"line\"><span class=\"string\">---</span></span><br><span class=\"line\"><span class=\"string\">apiVersion: v1</span></span><br><span class=\"line\"><span class=\"string\">kind: Endpoints</span></span><br><span class=\"line\"><span class=\"string\">metadata:</span></span><br><span class=\"line\"><span class=\"string\">  name: istiod</span></span><br><span class=\"line\"><span class=\"string\">  namespace: istio-system</span></span><br><span class=\"line\"><span class=\"string\">subsets:</span></span><br><span class=\"line\"><span class=\"string\">- addresses:</span></span><br><span class=\"line\"><span class=\"string\">  - ip: $&#123;ip&#125;</span></span><br><span class=\"line\"><span class=\"string\">  ports:</span></span><br><span class=\"line\"><span class=\"string\">  - name: https-dns</span></span><br><span class=\"line\"><span class=\"string\">    port: 15012</span></span><br><span class=\"line\"><span class=\"string\">    protocol: TCP</span></span><br><span class=\"line\"><span class=\"string\">  - name: grpc-xds</span></span><br><span class=\"line\"><span class=\"string\">    port: 15010</span></span><br><span class=\"line\"><span class=\"string\">    protocol: TCP</span></span><br><span class=\"line\"><span class=\"string\">  - name: https-webhook</span></span><br><span class=\"line\"><span class=\"string\">    port: 15017</span></span><br><span class=\"line\"><span class=\"string\">    protocol: TCP</span></span><br><span class=\"line\"><span class=\"string\">  - name: http-monitoring</span></span><br><span class=\"line\"><span class=\"string\">    port: 15014</span></span><br><span class=\"line\"><span class=\"string\">    protocol: TCP</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<p>还原istio 的svc地址 使svc指向 集群内部 istiod.istio-system pod</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl -n istio-system delete svc istiod</span><br><span class=\"line\">$ kubectl -n istio-system delete endpoints istiod</span><br><span class=\"line\"></span><br><span class=\"line\">cat &lt;&lt;<span class=\"string\">EOF | kubectl apply -f -</span></span><br><span class=\"line\"><span class=\"string\">apiVersion: v1</span></span><br><span class=\"line\"><span class=\"string\">kind: Service</span></span><br><span class=\"line\"><span class=\"string\">metadata:</span></span><br><span class=\"line\"><span class=\"string\">  annotations:</span></span><br><span class=\"line\"><span class=\"string\">    kubectl.kubernetes.io/last-applied-configuration: |</span></span><br><span class=\"line\"><span class=\"string\">      &#123;&quot;apiVersion&quot;:&quot;v1&quot;,&quot;kind&quot;:&quot;Service&quot;,&quot;metadata&quot;:&#123;&quot;annotations&quot;:&#123;&#125;,&quot;labels&quot;:&#123;&quot;app&quot;:&quot;istiod&quot;,&quot;install.operator.istio.io/owning-resource&quot;:&quot;unknown&quot;,&quot;install.operator.istio.io/owning-resource-namespace&quot;:&quot;istio-system&quot;,&quot;istio&quot;:&quot;pilot&quot;,&quot;istio.io/rev&quot;:&quot;default&quot;,&quot;operator.istio.io/component&quot;:&quot;Pilot&quot;,&quot;operator.istio.io/managed&quot;:&quot;Reconcile&quot;,&quot;operator.istio.io/version&quot;:&quot;1.8.4&quot;,&quot;release&quot;:&quot;istio&quot;&#125;,&quot;name&quot;:&quot;istiod&quot;,&quot;namespace&quot;:&quot;istio-system&quot;&#125;,&quot;spec&quot;:&#123;&quot;ports&quot;:[&#123;&quot;name&quot;:&quot;grpc-xds&quot;,&quot;port&quot;:15010,&quot;protocol&quot;:&quot;TCP&quot;&#125;,&#123;&quot;name&quot;:&quot;https-dns&quot;,&quot;port&quot;:15012,&quot;protocol&quot;:&quot;TCP&quot;&#125;,&#123;&quot;name&quot;:&quot;https-webhook&quot;,&quot;port&quot;:443,&quot;protocol&quot;:&quot;TCP&quot;,&quot;targetPort&quot;:15017&#125;,&#123;&quot;name&quot;:&quot;http-monitoring&quot;,&quot;port&quot;:15014,&quot;protocol&quot;:&quot;TCP&quot;&#125;],&quot;selector&quot;:&#123;&quot;app&quot;:&quot;istiod&quot;,&quot;istio&quot;:&quot;pilot&quot;&#125;&#125;&#125;</span></span><br><span class=\"line\"><span class=\"string\">  creationTimestamp: &quot;2021-03-22T07:08:32Z&quot;</span></span><br><span class=\"line\"><span class=\"string\">  labels:</span></span><br><span class=\"line\"><span class=\"string\">    app: istiod</span></span><br><span class=\"line\"><span class=\"string\">    install.operator.istio.io/owning-resource: unknown</span></span><br><span class=\"line\"><span class=\"string\">    install.operator.istio.io/owning-resource-namespace: istio-system</span></span><br><span class=\"line\"><span class=\"string\">    istio: pilot</span></span><br><span class=\"line\"><span class=\"string\">    istio.io/rev: default</span></span><br><span class=\"line\"><span class=\"string\">    operator.istio.io/component: Pilot</span></span><br><span class=\"line\"><span class=\"string\">    operator.istio.io/managed: Reconcile</span></span><br><span class=\"line\"><span class=\"string\">    operator.istio.io/version: 1.8.4</span></span><br><span class=\"line\"><span class=\"string\">    release: istio</span></span><br><span class=\"line\"><span class=\"string\">  name: istiod</span></span><br><span class=\"line\"><span class=\"string\">  namespace: istio-system</span></span><br><span class=\"line\"><span class=\"string\">  resourceVersion: &quot;826&quot;</span></span><br><span class=\"line\"><span class=\"string\">  selfLink: /api/v1/namespaces/istio-system/services/istiod</span></span><br><span class=\"line\"><span class=\"string\">  uid: 44ee44a6-9003-4f8d-9196-49e47b6667c1</span></span><br><span class=\"line\"><span class=\"string\">spec:</span></span><br><span class=\"line\"><span class=\"string\">  clusterIP: 10.96.3.250</span></span><br><span class=\"line\"><span class=\"string\">  ports:</span></span><br><span class=\"line\"><span class=\"string\">  - name: grpc-xds</span></span><br><span class=\"line\"><span class=\"string\">    port: 15010</span></span><br><span class=\"line\"><span class=\"string\">    protocol: TCP</span></span><br><span class=\"line\"><span class=\"string\">    targetPort: 15010</span></span><br><span class=\"line\"><span class=\"string\">  - name: https-dns</span></span><br><span class=\"line\"><span class=\"string\">    port: 15012</span></span><br><span class=\"line\"><span class=\"string\">    protocol: TCP</span></span><br><span class=\"line\"><span class=\"string\">    targetPort: 15012</span></span><br><span class=\"line\"><span class=\"string\">  - name: https-webhook</span></span><br><span class=\"line\"><span class=\"string\">    port: 443</span></span><br><span class=\"line\"><span class=\"string\">    protocol: TCP</span></span><br><span class=\"line\"><span class=\"string\">    targetPort: 15017</span></span><br><span class=\"line\"><span class=\"string\">  - name: http-monitoring</span></span><br><span class=\"line\"><span class=\"string\">    port: 15014</span></span><br><span class=\"line\"><span class=\"string\">    protocol: TCP</span></span><br><span class=\"line\"><span class=\"string\">    targetPort: 15014</span></span><br><span class=\"line\"><span class=\"string\">  selector:</span></span><br><span class=\"line\"><span class=\"string\">    app: istiod</span></span><br><span class=\"line\"><span class=\"string\">    istio: pilot</span></span><br><span class=\"line\"><span class=\"string\">  sessionAffinity: None</span></span><br><span class=\"line\"><span class=\"string\">  type: ClusterIP</span></span><br><span class=\"line\"><span class=\"string\">status:</span></span><br><span class=\"line\"><span class=\"string\">  loadBalancer: &#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\">EOF</span>  </span><br></pre></td></tr></table></figure>\n\n"},{"title":"集群内部负载均衡 lb","date":"2021-04-07T14:50:01.000Z","_content":"\n# 集群内部负载均衡 lb\n\nk8s的LoadBalancer类型的Service依赖云服务商的Load Balancer, 如阿里云的slb。\n\n\n当我们把k8s部署在私有云时，需要简单的LoadBalancer来验证工作，开源的metallb就是一个不错的选择。\n\nMetalLB支持2种 一种是`Layer2` 、`BGP`\n\n## MetalLB 安装\n\n```bash\nkubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/namespace.yaml;\nkubectl create secret generic -n metallb-system memberlist --from-literal=secretkey=\"$(openssl rand -base64 128)\";\nkubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/metallb.yaml;\n```\n\n## 前提条件\n\nMetalLB需要以下功能才能发挥作用：\n\n* 一个 Kubernetes 运行Kubernetes 1.13.0或更高版本的集群，尚不具有网络负载平衡功能。\n* 一个 集群网络配置 可以与MetalLB共存。\n* 一些用于MetalLB的IPv4地址。\n* 使用BGP工作模式时，您将需要一台或多台能够讲话的路由器 BGP协议。\n* 节点之间必须允许端口7946（TCP＆UDP）上的流量，具体取决于 会员列表。\n\n\nGBP 配置\n\n```bash\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: metallb-system\n  name: config\ndata:\n  config: |\n    peers:\n    - peer-address: 10.0.0.1\n      peer-asn: 64501\n      my-asn: 64500\n    address-pools:\n    - name: default\n      protocol: bgp\n      addresses:\n      - 192.168.10.0/24\n```\n\n### 创建configmap\n\n```bash\nkubectl apply -f configmap.yaml\n```","source":"_posts/k8s/lb.md","raw":"---\ntitle: 集群内部负载均衡 lb\ndate: 2021-04-07 22:50:01\ntags:\n- kubernetes\n---\n\n# 集群内部负载均衡 lb\n\nk8s的LoadBalancer类型的Service依赖云服务商的Load Balancer, 如阿里云的slb。\n\n\n当我们把k8s部署在私有云时，需要简单的LoadBalancer来验证工作，开源的metallb就是一个不错的选择。\n\nMetalLB支持2种 一种是`Layer2` 、`BGP`\n\n## MetalLB 安装\n\n```bash\nkubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/namespace.yaml;\nkubectl create secret generic -n metallb-system memberlist --from-literal=secretkey=\"$(openssl rand -base64 128)\";\nkubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/metallb.yaml;\n```\n\n## 前提条件\n\nMetalLB需要以下功能才能发挥作用：\n\n* 一个 Kubernetes 运行Kubernetes 1.13.0或更高版本的集群，尚不具有网络负载平衡功能。\n* 一个 集群网络配置 可以与MetalLB共存。\n* 一些用于MetalLB的IPv4地址。\n* 使用BGP工作模式时，您将需要一台或多台能够讲话的路由器 BGP协议。\n* 节点之间必须允许端口7946（TCP＆UDP）上的流量，具体取决于 会员列表。\n\n\nGBP 配置\n\n```bash\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: metallb-system\n  name: config\ndata:\n  config: |\n    peers:\n    - peer-address: 10.0.0.1\n      peer-asn: 64501\n      my-asn: 64500\n    address-pools:\n    - name: default\n      protocol: bgp\n      addresses:\n      - 192.168.10.0/24\n```\n\n### 创建configmap\n\n```bash\nkubectl apply -f configmap.yaml\n```","slug":"k8s/lb","published":1,"updated":"2021-06-28T05:58:08.059Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqg7nfac00003jjrbp9m8vqt","content":"<h1 id=\"集群内部负载均衡-lb\"><a href=\"#集群内部负载均衡-lb\" class=\"headerlink\" title=\"集群内部负载均衡 lb\"></a>集群内部负载均衡 lb</h1><p>k8s的LoadBalancer类型的Service依赖云服务商的Load Balancer, 如阿里云的slb。</p>\n<p>当我们把k8s部署在私有云时，需要简单的LoadBalancer来验证工作，开源的metallb就是一个不错的选择。</p>\n<p>MetalLB支持2种 一种是<code>Layer2</code> 、<code>BGP</code></p>\n<h2 id=\"MetalLB-安装\"><a href=\"#MetalLB-安装\" class=\"headerlink\" title=\"MetalLB 安装\"></a>MetalLB 安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/namespace.yaml;</span><br><span class=\"line\">kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey=<span class=\"string\">&quot;<span class=\"subst\">$(openssl rand -base64 128)</span>&quot;</span>;</span><br><span class=\"line\">kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/metallb.yaml;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"前提条件\"><a href=\"#前提条件\" class=\"headerlink\" title=\"前提条件\"></a>前提条件</h2><p>MetalLB需要以下功能才能发挥作用：</p>\n<ul>\n<li>一个 Kubernetes 运行Kubernetes 1.13.0或更高版本的集群，尚不具有网络负载平衡功能。</li>\n<li>一个 集群网络配置 可以与MetalLB共存。</li>\n<li>一些用于MetalLB的IPv4地址。</li>\n<li>使用BGP工作模式时，您将需要一台或多台能够讲话的路由器 BGP协议。</li>\n<li>节点之间必须允许端口7946（TCP＆UDP）上的流量，具体取决于 会员列表。</li>\n</ul>\n<p>GBP 配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">kind: ConfigMap</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  namespace: metallb-system</span><br><span class=\"line\">  name: config</span><br><span class=\"line\">data:</span><br><span class=\"line\">  config: |</span><br><span class=\"line\">    peers:</span><br><span class=\"line\">    - peer-address: 10.0.0.1</span><br><span class=\"line\">      peer-asn: 64501</span><br><span class=\"line\">      my-asn: 64500</span><br><span class=\"line\">    address-pools:</span><br><span class=\"line\">    - name: default</span><br><span class=\"line\">      protocol: bgp</span><br><span class=\"line\">      addresses:</span><br><span class=\"line\">      - 192.168.10.0/24</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"创建configmap\"><a href=\"#创建configmap\" class=\"headerlink\" title=\"创建configmap\"></a>创建configmap</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl apply -f configmap.yaml</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"集群内部负载均衡-lb\"><a href=\"#集群内部负载均衡-lb\" class=\"headerlink\" title=\"集群内部负载均衡 lb\"></a>集群内部负载均衡 lb</h1><p>k8s的LoadBalancer类型的Service依赖云服务商的Load Balancer, 如阿里云的slb。</p>\n<p>当我们把k8s部署在私有云时，需要简单的LoadBalancer来验证工作，开源的metallb就是一个不错的选择。</p>\n<p>MetalLB支持2种 一种是<code>Layer2</code> 、<code>BGP</code></p>\n<h2 id=\"MetalLB-安装\"><a href=\"#MetalLB-安装\" class=\"headerlink\" title=\"MetalLB 安装\"></a>MetalLB 安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/namespace.yaml;</span><br><span class=\"line\">kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey=<span class=\"string\">&quot;<span class=\"subst\">$(openssl rand -base64 128)</span>&quot;</span>;</span><br><span class=\"line\">kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/metallb.yaml;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"前提条件\"><a href=\"#前提条件\" class=\"headerlink\" title=\"前提条件\"></a>前提条件</h2><p>MetalLB需要以下功能才能发挥作用：</p>\n<ul>\n<li>一个 Kubernetes 运行Kubernetes 1.13.0或更高版本的集群，尚不具有网络负载平衡功能。</li>\n<li>一个 集群网络配置 可以与MetalLB共存。</li>\n<li>一些用于MetalLB的IPv4地址。</li>\n<li>使用BGP工作模式时，您将需要一台或多台能够讲话的路由器 BGP协议。</li>\n<li>节点之间必须允许端口7946（TCP＆UDP）上的流量，具体取决于 会员列表。</li>\n</ul>\n<p>GBP 配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">kind: ConfigMap</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  namespace: metallb-system</span><br><span class=\"line\">  name: config</span><br><span class=\"line\">data:</span><br><span class=\"line\">  config: |</span><br><span class=\"line\">    peers:</span><br><span class=\"line\">    - peer-address: 10.0.0.1</span><br><span class=\"line\">      peer-asn: 64501</span><br><span class=\"line\">      my-asn: 64500</span><br><span class=\"line\">    address-pools:</span><br><span class=\"line\">    - name: default</span><br><span class=\"line\">      protocol: bgp</span><br><span class=\"line\">      addresses:</span><br><span class=\"line\">      - 192.168.10.0/24</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"创建configmap\"><a href=\"#创建configmap\" class=\"headerlink\" title=\"创建configmap\"></a>创建configmap</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl apply -f configmap.yaml</span><br></pre></td></tr></table></figure>"}],"PostAsset":[{"_id":"source/_posts/analysis/bookinfo.png","slug":"bookinfo.png","post":"ckm1wo3ch00001gjrfjuk1djv","modified":0,"renderable":0},{"_id":"source/_posts/analysis/iptables.png","slug":"iptables.png","post":"ckm1wo3ch00001gjrfjuk1djv","modified":0,"renderable":0},{"_id":"source/_posts/linux/namespace/img.png","slug":"img.png","post":"ckm4m99l10000iajrhbnfg6f9","modified":0,"renderable":0},{"_id":"source/_posts/linux/namespace/img_2.png","slug":"img_2.png","post":"ckm4m99l10000iajrhbnfg6f9","modified":0,"renderable":0},{"_id":"source/_posts/linux/namespace/img_3.png","slug":"img_3.png","post":"ckm4m99l10000iajrhbnfg6f9","modified":0,"renderable":0},{"_id":"source/_posts/k8s/istio/debug-istio/img.png","slug":"img.png","post":"ckmkf3dw80000kjjr1ne639m8","modified":0,"renderable":0}],"PostCategory":[{"post_id":"ckm1y9qzq0001jbjr4m4a9f8i","category_id":"ckm22s7h90000nkjr8tgn9998","_id":"ckm22s7hb0001nkjrhe7te2u1"}],"PostTag":[{"post_id":"ckm1y9qzq0001jbjr4m4a9f8i","tag_id":"ckm1vm35f0008avjr879q8zyb","_id":"ckm1y9qzs0002jbjr1paja9e9"},{"post_id":"ckm1wo3ch00001gjrfjuk1djv","tag_id":"ckm22nli40000l3jr693caysf","_id":"ckm22nli60001l3jrf7ec6nf7"},{"post_id":"ckm1wkytg0000vvjrbnqxfib9","tag_id":"ckm22onrl0002l3jr1p99h1jp","_id":"ckm22onrl0003l3jr2lt04gxv"},{"post_id":"ckm1y9qzm0000jbjrfnzn40bu","tag_id":"ckm22ox1u0004l3jr07g06vui","_id":"ckm22ox1u0005l3jr9gb16s32"},{"post_id":"ckm1y9qzq0001jbjr4m4a9f8i","tag_id":"ckm22ox1u0004l3jr07g06vui","_id":"ckm22p5zz0006l3jr209ve041"},{"post_id":"ckm4m99l10000iajrhbnfg6f9","tag_id":"ckm4m99l80001iajr80mj8nxj","_id":"ckm4m99lg0003iajr6lsm05gu"},{"post_id":"ckm4m99l10000iajrhbnfg6f9","tag_id":"ckm4m99le0002iajr3a3ae3r6","_id":"ckm4m99lg0004iajr38f2694a"},{"post_id":"ckm4m99lh0005iajrdc97526a","tag_id":"ckm4m99l80001iajr80mj8nxj","_id":"ckm4m99li0006iajr0vnm4x37"},{"post_id":"ckm4m99lh0005iajrdc97526a","tag_id":"ckm4m99le0002iajr3a3ae3r6","_id":"ckm4m99li0007iajr3te72zqp"},{"post_id":"ckm8ttjje0001o1jr460mgla1","tag_id":"ckm4m99l80001iajr80mj8nxj","_id":"ckm8ttjjh0002o1jrcxauh7oe"},{"post_id":"ckm8ttjji0004o1jr6ts3hj7x","tag_id":"ckm4m99l80001iajr80mj8nxj","_id":"ckm8ttjjr0008o1jr02sv5eef"},{"post_id":"ckm8ttjji0004o1jr6ts3hj7x","tag_id":"ckm8ttjjq0006o1jr30w297p9","_id":"ckm8ttjjr0009o1jr4wdxbbrj"},{"post_id":"ckmcrxajx00000bjr02cq707d","tag_id":"ckm4m99l80001iajr80mj8nxj","_id":"ckmcrxak600020bjr6q6hbbx1"},{"post_id":"ckmcrxajx00000bjr02cq707d","tag_id":"ckmcrxajz00010bjrd9i9ejdl","_id":"ckmcrxak700030bjred0m0dph"},{"post_id":"ckmdkjuvn0000uwjr5d1jc2k7","tag_id":"ckm8ttjjj0005o1jradjf412q","_id":"ckmdkjuw60001uwjrdthr7htf"},{"post_id":"ckmfo6v8z000036jrf1vvgff5","tag_id":"ckm4m99l80001iajr80mj8nxj","_id":"ckmfo6v93000136jr2e0x828o"},{"post_id":"ckqg7nfac00003jjrbp9m8vqt","tag_id":"ckm8ttjjj0005o1jradjf412q","_id":"ckqg7nfai00013jjr9ijwbv4w"}],"Tag":[{"name":"kiali","_id":"ckm1vm35f0008avjr879q8zyb"},{"name":"iptables","_id":"ckm22nli40000l3jr693caysf"},{"name":"docker","_id":"ckm22onrl0002l3jr1p99h1jp"},{"name":"istio","_id":"ckm22ox1u0004l3jr07g06vui"},{"name":"linux","_id":"ckm4m99l80001iajr80mj8nxj"},{"name":"kernal","_id":"ckm4m99le0002iajr3a3ae3r6"},{"name":"kubernetes","_id":"ckm8ttjjj0005o1jradjf412q"},{"name":"network","_id":"ckm8ttjjq0006o1jr30w297p9"},{"name":"kernel","_id":"ckmcrxajz00010bjrd9i9ejdl"}]}}